

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 27 22:35:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0008                     	;# 
   171     0009                     	;# 
   172     000A                     	;# 
   173     000B                     	;# 
   174     000C                     	;# 
   175     000D                     	;# 
   176     000E                     	;# 
   177     000E                     	;# 
   178     000F                     	;# 
   179     0010                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0013                     	;# 
   183     0014                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001B                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     0081                     	;# 
   198     0085                     	;# 
   199     0086                     	;# 
   200     0087                     	;# 
   201     0088                     	;# 
   202     0089                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     008F                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0097                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009A                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     0105                     	;# 
   226     0107                     	;# 
   227     0108                     	;# 
   228     0109                     	;# 
   229     010C                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0185                     	;# 
   235     0187                     	;# 
   236     0188                     	;# 
   237     0189                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240     0000                     	;# 
   241     0001                     	;# 
   242     0002                     	;# 
   243     0003                     	;# 
   244     0004                     	;# 
   245     0005                     	;# 
   246     0006                     	;# 
   247     0007                     	;# 
   248     0008                     	;# 
   249     0009                     	;# 
   250     000A                     	;# 
   251     000B                     	;# 
   252     000C                     	;# 
   253     000D                     	;# 
   254     000E                     	;# 
   255     000E                     	;# 
   256     000F                     	;# 
   257     0010                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0015                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001B                     	;# 
   271     001C                     	;# 
   272     001D                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     0081                     	;# 
   276     0085                     	;# 
   277     0086                     	;# 
   278     0087                     	;# 
   279     0088                     	;# 
   280     0089                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0091                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     0105                     	;# 
   304     0107                     	;# 
   305     0108                     	;# 
   306     0109                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     0185                     	;# 
   313     0187                     	;# 
   314     0188                     	;# 
   315     0189                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     008F                     	;# 
   363     0090                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0095                     	;# 
   371     0096                     	;# 
   372     0097                     	;# 
   373     0098                     	;# 
   374     0099                     	;# 
   375     009A                     	;# 
   376     009B                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     0105                     	;# 
   382     0107                     	;# 
   383     0108                     	;# 
   384     0109                     	;# 
   385     010C                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     010F                     	;# 
   390     0185                     	;# 
   391     0187                     	;# 
   392     0188                     	;# 
   393     0189                     	;# 
   394     018C                     	;# 
   395     018D                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000D                     	;# 
   410     000E                     	;# 
   411     000E                     	;# 
   412     000F                     	;# 
   413     0010                     	;# 
   414     0011                     	;# 
   415     0012                     	;# 
   416     0013                     	;# 
   417     0014                     	;# 
   418     0015                     	;# 
   419     0015                     	;# 
   420     0016                     	;# 
   421     0017                     	;# 
   422     0018                     	;# 
   423     0019                     	;# 
   424     001A                     	;# 
   425     001B                     	;# 
   426     001B                     	;# 
   427     001C                     	;# 
   428     001D                     	;# 
   429     001E                     	;# 
   430     001F                     	;# 
   431     0081                     	;# 
   432     0085                     	;# 
   433     0086                     	;# 
   434     0087                     	;# 
   435     0088                     	;# 
   436     0089                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     008F                     	;# 
   441     0090                     	;# 
   442     0091                     	;# 
   443     0092                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0093                     	;# 
   447     0094                     	;# 
   448     0095                     	;# 
   449     0096                     	;# 
   450     0097                     	;# 
   451     0098                     	;# 
   452     0099                     	;# 
   453     009A                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     009F                     	;# 
   459     0105                     	;# 
   460     0107                     	;# 
   461     0108                     	;# 
   462     0109                     	;# 
   463     010C                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     010E                     	;# 
   467     010F                     	;# 
   468     0185                     	;# 
   469     0187                     	;# 
   470     0188                     	;# 
   471     0189                     	;# 
   472     018C                     	;# 
   473     018D                     	;# 
   474     0000                     	;# 
   475     0001                     	;# 
   476     0002                     	;# 
   477     0003                     	;# 
   478     0004                     	;# 
   479     0005                     	;# 
   480     0006                     	;# 
   481     0007                     	;# 
   482     0008                     	;# 
   483     0009                     	;# 
   484     000A                     	;# 
   485     000B                     	;# 
   486     000C                     	;# 
   487     000D                     	;# 
   488     000E                     	;# 
   489     000E                     	;# 
   490     000F                     	;# 
   491     0010                     	;# 
   492     0011                     	;# 
   493     0012                     	;# 
   494     0013                     	;# 
   495     0014                     	;# 
   496     0015                     	;# 
   497     0015                     	;# 
   498     0016                     	;# 
   499     0017                     	;# 
   500     0018                     	;# 
   501     0019                     	;# 
   502     001A                     	;# 
   503     001B                     	;# 
   504     001B                     	;# 
   505     001C                     	;# 
   506     001D                     	;# 
   507     001E                     	;# 
   508     001F                     	;# 
   509     0081                     	;# 
   510     0085                     	;# 
   511     0086                     	;# 
   512     0087                     	;# 
   513     0088                     	;# 
   514     0089                     	;# 
   515     008C                     	;# 
   516     008D                     	;# 
   517     008E                     	;# 
   518     008F                     	;# 
   519     0090                     	;# 
   520     0091                     	;# 
   521     0092                     	;# 
   522     0093                     	;# 
   523     0093                     	;# 
   524     0093                     	;# 
   525     0094                     	;# 
   526     0095                     	;# 
   527     0096                     	;# 
   528     0097                     	;# 
   529     0098                     	;# 
   530     0099                     	;# 
   531     009A                     	;# 
   532     009B                     	;# 
   533     009C                     	;# 
   534     009D                     	;# 
   535     009E                     	;# 
   536     009F                     	;# 
   537     0105                     	;# 
   538     0107                     	;# 
   539     0108                     	;# 
   540     0109                     	;# 
   541     010C                     	;# 
   542     010C                     	;# 
   543     010D                     	;# 
   544     010E                     	;# 
   545     010F                     	;# 
   546     0185                     	;# 
   547     0187                     	;# 
   548     0188                     	;# 
   549     0189                     	;# 
   550     018C                     	;# 
   551     018D                     	;# 
   552     0000                     	;# 
   553     0001                     	;# 
   554     0002                     	;# 
   555     0003                     	;# 
   556     0004                     	;# 
   557     0005                     	;# 
   558     0006                     	;# 
   559     0007                     	;# 
   560     0008                     	;# 
   561     0009                     	;# 
   562     000A                     	;# 
   563     000B                     	;# 
   564     000C                     	;# 
   565     000D                     	;# 
   566     000E                     	;# 
   567     000E                     	;# 
   568     000F                     	;# 
   569     0010                     	;# 
   570     0011                     	;# 
   571     0012                     	;# 
   572     0013                     	;# 
   573     0014                     	;# 
   574     0015                     	;# 
   575     0015                     	;# 
   576     0016                     	;# 
   577     0017                     	;# 
   578     0018                     	;# 
   579     0019                     	;# 
   580     001A                     	;# 
   581     001B                     	;# 
   582     001B                     	;# 
   583     001C                     	;# 
   584     001D                     	;# 
   585     001E                     	;# 
   586     001F                     	;# 
   587     0081                     	;# 
   588     0085                     	;# 
   589     0086                     	;# 
   590     0087                     	;# 
   591     0088                     	;# 
   592     0089                     	;# 
   593     008C                     	;# 
   594     008D                     	;# 
   595     008E                     	;# 
   596     008F                     	;# 
   597     0090                     	;# 
   598     0091                     	;# 
   599     0092                     	;# 
   600     0093                     	;# 
   601     0093                     	;# 
   602     0093                     	;# 
   603     0094                     	;# 
   604     0095                     	;# 
   605     0096                     	;# 
   606     0097                     	;# 
   607     0098                     	;# 
   608     0099                     	;# 
   609     009A                     	;# 
   610     009B                     	;# 
   611     009C                     	;# 
   612     009D                     	;# 
   613     009E                     	;# 
   614     009F                     	;# 
   615     0105                     	;# 
   616     0107                     	;# 
   617     0108                     	;# 
   618     0109                     	;# 
   619     010C                     	;# 
   620     010C                     	;# 
   621     010D                     	;# 
   622     010E                     	;# 
   623     010F                     	;# 
   624     0185                     	;# 
   625     0187                     	;# 
   626     0188                     	;# 
   627     0189                     	;# 
   628     018C                     	;# 
   629     018D                     	;# 
   630     0000                     	;# 
   631     0001                     	;# 
   632     0002                     	;# 
   633     0003                     	;# 
   634     0004                     	;# 
   635     0005                     	;# 
   636     0006                     	;# 
   637     0007                     	;# 
   638     0008                     	;# 
   639     0009                     	;# 
   640     000A                     	;# 
   641     000B                     	;# 
   642     000C                     	;# 
   643     000D                     	;# 
   644     000E                     	;# 
   645     000E                     	;# 
   646     000F                     	;# 
   647     0010                     	;# 
   648     0011                     	;# 
   649     0012                     	;# 
   650     0013                     	;# 
   651     0014                     	;# 
   652     0015                     	;# 
   653     0015                     	;# 
   654     0016                     	;# 
   655     0017                     	;# 
   656     0018                     	;# 
   657     0019                     	;# 
   658     001A                     	;# 
   659     001B                     	;# 
   660     001B                     	;# 
   661     001C                     	;# 
   662     001D                     	;# 
   663     001E                     	;# 
   664     001F                     	;# 
   665     0081                     	;# 
   666     0085                     	;# 
   667     0086                     	;# 
   668     0087                     	;# 
   669     0088                     	;# 
   670     0089                     	;# 
   671     008C                     	;# 
   672     008D                     	;# 
   673     008E                     	;# 
   674     008F                     	;# 
   675     0090                     	;# 
   676     0091                     	;# 
   677     0092                     	;# 
   678     0093                     	;# 
   679     0093                     	;# 
   680     0093                     	;# 
   681     0094                     	;# 
   682     0095                     	;# 
   683     0096                     	;# 
   684     0097                     	;# 
   685     0098                     	;# 
   686     0099                     	;# 
   687     009A                     	;# 
   688     009B                     	;# 
   689     009C                     	;# 
   690     009D                     	;# 
   691     009E                     	;# 
   692     009F                     	;# 
   693     0105                     	;# 
   694     0107                     	;# 
   695     0108                     	;# 
   696     0109                     	;# 
   697     010C                     	;# 
   698     010C                     	;# 
   699     010D                     	;# 
   700     010E                     	;# 
   701     010F                     	;# 
   702     0185                     	;# 
   703     0187                     	;# 
   704     0188                     	;# 
   705     0189                     	;# 
   706     018C                     	;# 
   707     018D                     	;# 
   708     0000                     	;# 
   709     0001                     	;# 
   710     0002                     	;# 
   711     0003                     	;# 
   712     0004                     	;# 
   713     0005                     	;# 
   714     0006                     	;# 
   715     0007                     	;# 
   716     0008                     	;# 
   717     0009                     	;# 
   718     000A                     	;# 
   719     000B                     	;# 
   720     000C                     	;# 
   721     000D                     	;# 
   722     000E                     	;# 
   723     000E                     	;# 
   724     000F                     	;# 
   725     0010                     	;# 
   726     0011                     	;# 
   727     0012                     	;# 
   728     0013                     	;# 
   729     0014                     	;# 
   730     0015                     	;# 
   731     0015                     	;# 
   732     0016                     	;# 
   733     0017                     	;# 
   734     0018                     	;# 
   735     0019                     	;# 
   736     001A                     	;# 
   737     001B                     	;# 
   738     001B                     	;# 
   739     001C                     	;# 
   740     001D                     	;# 
   741     001E                     	;# 
   742     001F                     	;# 
   743     0081                     	;# 
   744     0085                     	;# 
   745     0086                     	;# 
   746     0087                     	;# 
   747     0088                     	;# 
   748     0089                     	;# 
   749     008C                     	;# 
   750     008D                     	;# 
   751     008E                     	;# 
   752     008F                     	;# 
   753     0090                     	;# 
   754     0091                     	;# 
   755     0092                     	;# 
   756     0093                     	;# 
   757     0093                     	;# 
   758     0093                     	;# 
   759     0094                     	;# 
   760     0095                     	;# 
   761     0096                     	;# 
   762     0097                     	;# 
   763     0098                     	;# 
   764     0099                     	;# 
   765     009A                     	;# 
   766     009B                     	;# 
   767     009C                     	;# 
   768     009D                     	;# 
   769     009E                     	;# 
   770     009F                     	;# 
   771     0105                     	;# 
   772     0107                     	;# 
   773     0108                     	;# 
   774     0109                     	;# 
   775     010C                     	;# 
   776     010C                     	;# 
   777     010D                     	;# 
   778     010E                     	;# 
   779     010F                     	;# 
   780     0185                     	;# 
   781     0187                     	;# 
   782     0188                     	;# 
   783     0189                     	;# 
   784     018C                     	;# 
   785     018D                     	;# 
   786     0005                     _PORTA	set	5
   787     001E                     _ADRESH	set	30
   788     0008                     _PORTD	set	8
   789     001A                     _RCREG	set	26
   790     0005                     _PORTAbits	set	5
   791     0019                     _TXREG	set	25
   792     0018                     _RCSTAbits	set	24
   793     0009                     _PORTEbits	set	9
   794     0006                     _PORTBbits	set	6
   795     0008                     _PORTDbits	set	8
   796     0007                     _PORTC	set	7
   797     0009                     _PORTE	set	9
   798     0001                     _TMR0	set	1
   799     001F                     _ADCON0bits	set	31
   800     000B                     _INTCONbits	set	11
   801     000C                     _PIR1bits	set	12
   802     0065                     _RCIF	set	101
   803     0064                     _TXIF	set	100
   804     0043                     _RD3	set	67
   805     0047                     _RD7	set	71
   806     0046                     _RD6	set	70
   807     0045                     _RD5	set	69
   808     0044                     _RD4	set	68
   809     005B                     _RBIE	set	91
   810     0066                     _ADIF	set	102
   811     008F                     _OSCCONbits	set	143
   812     0088                     _TRISD	set	136
   813     0098                     _TXSTAbits	set	152
   814     009A                     _SPBRGH	set	154
   815     0099                     _SPBRG	set	153
   816     0086                     _TRISB	set	134
   817     0096                     _IOCBbits	set	150
   818     0095                     _WPUBbits	set	149
   819     0086                     _TRISBbits	set	134
   820     0081                     _OPTION_REGbits	set	129
   821     009F                     _ADCON1bits	set	159
   822     0089                     _TRISE	set	137
   823     0085                     _TRISA	set	133
   824     008C                     _PIE1bits	set	140
   825     0189                     _ANSELH	set	393
   826     0187                     _BAUDCTLbits	set	391
   827     0188                     _ANSEL	set	392
   828                           
   829                           	psect	strings
   830     1000                     __pstrings:
   831     1000                     stringtab:
   832     1000                     __stringtab:
   833     1000                     stringcode:	
   834                           ;	String table - string pointers are 1 byte each
   835                           
   836     1000                     stringdir:
   837     1000  3010               	movlw	high stringdir
   838     1001  008A               	movwf	10
   839     1002  0804               	movf	4,w
   840     1003  0A84               	incf	4,f
   841     1004  0782               	addwf	2,f
   842     1005                     __stringbase:
   843     1005  3400               	retlw	0
   844     1006                     __end_of__stringtab:
   845     1006                     STR_1:
   846     1006  3456               	retlw	86	;'V'
   847     1007  346F               	retlw	111	;'o'
   848     1008  346C               	retlw	108	;'l'
   849     1009  3474               	retlw	116	;'t'
   850     100A  3461               	retlw	97	;'a'
   851     100B  346A               	retlw	106	;'j'
   852     100C  3465               	retlw	101	;'e'
   853     100D  3420               	retlw	32	;' '
   854     100E  3450               	retlw	80	;'P'
   855     100F  346F               	retlw	111	;'o'
   856     1010  3474               	retlw	116	;'t'
   857     1011  3465               	retlw	101	;'e'
   858     1012  346E               	retlw	110	;'n'
   859     1013  3463               	retlw	99	;'c'
   860     1014  3469               	retlw	105	;'i'
   861     1015  346F               	retlw	111	;'o'
   862     1016  346D               	retlw	109	;'m'
   863     1017  3465               	retlw	101	;'e'
   864     1018  3474               	retlw	116	;'t'
   865     1019  3472               	retlw	114	;'r'
   866     101A  346F               	retlw	111	;'o'
   867     101B  343A               	retlw	58	;':'
   868     101C  3400               	retlw	0
   869     101D                     STR_2:
   870     101D  3450               	retlw	80	;'P'
   871     101E  346F               	retlw	111	;'o'
   872     101F  3474               	retlw	116	;'t'
   873     1020  3431               	retlw	49	;'1'
   874     1021  343A               	retlw	58	;':'
   875     1022  3420               	retlw	32	;' '
   876     1023  3420               	retlw	32	;' '
   877     1024  3443               	retlw	67	;'C'
   878     1025  3450               	retlw	80	;'P'
   879     1026  3455               	retlw	85	;'U'
   880     1027  343A               	retlw	58	;':'
   881     1028  3400               	retlw	0
   882     1029                     STR_3:
   883     1029  3420               	retlw	32	;' '
   884     102A  3420               	retlw	32	;' '
   885     102B  3420               	retlw	32	;' '
   886     102C  3400               	retlw	0
   887                           
   888                           	psect	cinit
   889     0015                     start_initialization:	
   890                           ; #config settings
   891                           
   892     0015                     __initialization:
   893                           
   894                           ; Clear objects allocated to COMMON
   895     0015  01FC               	clrf	__pbssCOMMON& (0+127)
   896     0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   897                           
   898                           ; Clear objects allocated to BANK0
   899     0017  1383               	bcf	3,7	;select IRP bank0
   900     0018  304D               	movlw	low __pbssBANK0
   901     0019  0084               	movwf	4
   902     001A  305E               	movlw	low (__pbssBANK0+17)
   903     001B  120A  158A  2000  120A  118A  	fcall	clear_ram0
   904     0020                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907     0020                     __end_of__initialization:
   908     0020  0183               	clrf	3
   909     0021  120A  118A  2EC3   	ljmp	_main	;jump to C main() function
   910                           
   911                           	psect	bssCOMMON
   912     007C                     __pbssCOMMON:
   913     007C                     _value_disp:
   914     007C                     	ds	2
   915                           
   916                           	psect	bssBANK0
   917     004D                     __pbssBANK0:
   918     004D                     _cont:
   919     004D                     	ds	2
   920     004F                     _tempo:
   921     004F                     	ds	2
   922     0051                     _mapeado:
   923     0051                     	ds	2
   924     0053                     _miles:
   925     0053                     	ds	2
   926     0055                     _centenas:
   927     0055                     	ds	2
   928     0057                     _decenas:
   929     0057                     	ds	2
   930     0059                     _unidades:
   931     0059                     	ds	2
   932     005B                     _TMR0_Value:
   933     005B                     	ds	2
   934     005D                     _contador:
   935     005D                     	ds	1
   936                           
   937                           	psect	clrtext
   938     0800                     clear_ram0:	
   939                           ;	Called with FSR containing the base address, and
   940                           ;	W with the last address+1
   941                           
   942     0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   943     0801                     clrloop0:
   944     0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   945     0802  0A84               	incf	4,f	;increment pointer
   946     0803  0604               	xorwf	4,w	;XOR with final address
   947     0804  1903               	btfsc	3,2	;have we reached the end yet?
   948     0805  3400               	retlw	0	;all done for this memory range, return
   949     0806  0604               	xorwf	4,w	;XOR again to restore value
   950     0807  2801               	goto	clrloop0	;do the next byte
   951                           
   952                           	psect	cstackBANK3
   953     0190                     __pcstackBANK3:
   954     0190                     ?_LcdALL_map:
   955     0190                     LcdALL_map@valor:	
   956                           ; 4 bytes @ 0x0
   957                           
   958                           
   959                           ; 4 bytes @ 0x0
   960     0190                     	ds	4
   961     0194                     LcdALL_map@rango_min:
   962                           
   963                           ; 4 bytes @ 0x4
   964     0194                     	ds	4
   965     0198                     LcdALL_map@rango_max:
   966                           
   967                           ; 4 bytes @ 0x8
   968     0198                     	ds	4
   969     019C                     LcdALL_map@nuevo_min:
   970                           
   971                           ; 4 bytes @ 0xC
   972     019C                     	ds	4
   973     01A0                     LcdALL_map@nuevo_max:
   974                           
   975                           ; 4 bytes @ 0x10
   976     01A0                     	ds	4
   977     01A4                     ??_main:
   978                           
   979                           ; 1 bytes @ 0x14
   980     01A4                     	ds	4
   981                           
   982                           	psect	cstackBANK1
   983     00A0                     __pcstackBANK1:
   984     00A0                     ___fladd@signs:
   985                           
   986                           ; 1 bytes @ 0x0
   987     00A0                     	ds	1
   988     00A1                     ___fladd@aexp:
   989                           
   990                           ; 1 bytes @ 0x1
   991     00A1                     	ds	1
   992     00A2                     ___fladd@bexp:
   993                           
   994                           ; 1 bytes @ 0x2
   995     00A2                     	ds	1
   996     00A3                     ___fladd@grs:
   997                           
   998                           ; 1 bytes @ 0x3
   999     00A3                     	ds	1
  1000     00A4                     ?___flsub:
  1001     00A4                     ___flsub@a:	
  1002                           ; 4 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006     00A4                     	ds	4
  1007     00A8                     ___flsub@b:
  1008                           
  1009                           ; 4 bytes @ 0x8
  1010     00A8                     	ds	4
  1011     00AC                     ?___flmul:
  1012     00AC                     ___flmul@b:	
  1013                           ; 4 bytes @ 0xC
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0xC
  1017     00AC                     	ds	4
  1018     00B0                     ___flmul@a:
  1019                           
  1020                           ; 4 bytes @ 0x10
  1021     00B0                     	ds	4
  1022     00B4                     ??___flmul:
  1023                           
  1024                           ; 1 bytes @ 0x14
  1025     00B4                     	ds	5
  1026     00B9                     ___flmul@sign:
  1027                           
  1028                           ; 1 bytes @ 0x19
  1029     00B9                     	ds	1
  1030     00BA                     ___flmul@aexp:
  1031                           
  1032                           ; 1 bytes @ 0x1A
  1033     00BA                     	ds	1
  1034     00BB                     ___flmul@grs:
  1035                           
  1036                           ; 4 bytes @ 0x1B
  1037     00BB                     	ds	4
  1038     00BF                     ___flmul@bexp:
  1039                           
  1040                           ; 1 bytes @ 0x1F
  1041     00BF                     	ds	1
  1042     00C0                     ___flmul@prod:
  1043                           
  1044                           ; 4 bytes @ 0x20
  1045     00C0                     	ds	4
  1046     00C4                     ___flmul@temp:
  1047                           
  1048                           ; 2 bytes @ 0x24
  1049     00C4                     	ds	2
  1050     00C6                     ?___fldiv:
  1051     00C6                     ___fldiv@a:	
  1052                           ; 4 bytes @ 0x26
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0x26
  1056     00C6                     	ds	4
  1057     00CA                     ___fldiv@b:
  1058                           
  1059                           ; 4 bytes @ 0x2A
  1060     00CA                     	ds	4
  1061     00CE                     ??___fldiv:
  1062                           
  1063                           ; 1 bytes @ 0x2E
  1064     00CE                     	ds	5
  1065     00D3                     ___fldiv@rem:
  1066                           
  1067                           ; 4 bytes @ 0x33
  1068     00D3                     	ds	4
  1069     00D7                     ___fldiv@sign:
  1070                           
  1071                           ; 1 bytes @ 0x37
  1072     00D7                     	ds	1
  1073     00D8                     ___fldiv@new_exp:
  1074                           
  1075                           ; 2 bytes @ 0x38
  1076     00D8                     	ds	2
  1077     00DA                     ___fldiv@grs:
  1078                           
  1079                           ; 4 bytes @ 0x3A
  1080     00DA                     	ds	4
  1081     00DE                     ___fldiv@bexp:
  1082                           
  1083                           ; 1 bytes @ 0x3E
  1084     00DE                     	ds	1
  1085     00DF                     ___fldiv@aexp:
  1086                           
  1087                           ; 1 bytes @ 0x3F
  1088     00DF                     	ds	1
  1089     00E0                     LcdALL_map@nuevo_valor:
  1090                           
  1091                           ; 4 bytes @ 0x40
  1092     00E0                     	ds	4
  1093     00E4                     _LcdALL_map$1554:
  1094                           
  1095                           ; 4 bytes @ 0x44
  1096     00E4                     	ds	4
  1097     00E8                     ?___fltol:
  1098     00E8                     ___fltol@f1:	
  1099                           ; 4 bytes @ 0x48
  1100                           
  1101                           
  1102                           ; 4 bytes @ 0x48
  1103     00E8                     	ds	4
  1104     00EC                     ??___fltol:
  1105                           
  1106                           ; 1 bytes @ 0x4C
  1107     00EC                     	ds	4
  1108                           
  1109                           	psect	cstackCOMMON
  1110     0070                     __pcstackCOMMON:
  1111     0070                     ?_setup:
  1112     0070                     ?_LcdALL_Port:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115     0070                     ?_LcdALL_Cmd:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118     0070                     ?_LcdALL_Init:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121     0070                     ?_LcdALL_Write_Char:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124     0070                     ?_LcdALL_Write_String:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127     0070                     ?_UART_write_char:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130     0070                     ??_UART_write_char:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133     0070                     ?_UART_read_char:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136     0070                     ??_UART_read_char:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139     0070                     ?_UART_write_string:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142     0070                     ?_isr:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145     0070                     ?_main:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148     0070                     ?_adc_read:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151     0070                     ?i1___awmod:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154     0070                     UART_write_char@c:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157     0070                     i1___awmod@divisor:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0x0
  1162     0070                     	ds	1
  1163     0071                     ??_UART_write_string:
  1164                           
  1165                           ; 1 bytes @ 0x1
  1166     0071                     	ds	1
  1167     0072                     UART_write_string@str:
  1168     0072                     i1___awmod@dividend:	
  1169                           ; 1 bytes @ 0x2
  1170                           
  1171                           
  1172                           ; 2 bytes @ 0x2
  1173     0072                     	ds	2
  1174     0074                     ??i1___awmod:
  1175                           
  1176                           ; 1 bytes @ 0x4
  1177     0074                     	ds	1
  1178     0075                     i1___awmod@counter:
  1179                           
  1180                           ; 1 bytes @ 0x5
  1181     0075                     	ds	1
  1182     0076                     i1___awmod@sign:
  1183                           
  1184                           ; 1 bytes @ 0x6
  1185     0076                     	ds	1
  1186     0077                     ?i1___awdiv:
  1187     0077                     i1___awdiv@divisor:	
  1188                           ; 2 bytes @ 0x7
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0x7
  1192     0077                     	ds	2
  1193     0079                     i1___awdiv@dividend:
  1194                           
  1195                           ; 2 bytes @ 0x9
  1196     0079                     	ds	2
  1197     007B                     ??i1___awdiv:
  1198                           
  1199                           ; 1 bytes @ 0xB
  1200     007B                     	ds	1
  1201     007C                     ??_UART_set_value:
  1202                           
  1203                           	psect	cstackBANK0
  1204     0020                     __pcstackBANK0:	
  1205                           ; 1 bytes @ 0xC
  1206                           
  1207     0020                     i1___awdiv@counter:
  1208                           
  1209                           ; 1 bytes @ 0x0
  1210     0020                     	ds	1
  1211     0021                     i1___awdiv@sign:
  1212                           
  1213                           ; 1 bytes @ 0x1
  1214     0021                     	ds	1
  1215     0022                     i1___awdiv@quotient:
  1216                           
  1217                           ; 2 bytes @ 0x2
  1218     0022                     	ds	2
  1219     0024                     ?_UART_set_value:
  1220     0024                     UART_set_value@byte_value:	
  1221                           ; 1 bytes @ 0x4
  1222                           
  1223                           
  1224                           ; 2 bytes @ 0x4
  1225     0024                     	ds	2
  1226     0026                     UART_set_value@centenas:
  1227                           
  1228                           ; 2 bytes @ 0x6
  1229     0026                     	ds	2
  1230     0028                     UART_set_value@decenas:
  1231                           
  1232                           ; 2 bytes @ 0x8
  1233     0028                     	ds	2
  1234     002A                     UART_set_value@unidades:
  1235                           
  1236                           ; 2 bytes @ 0xA
  1237     002A                     	ds	2
  1238     002C                     ??_isr:
  1239                           
  1240                           ; 1 bytes @ 0xC
  1241     002C                     	ds	6
  1242     0032                     ??_setup:
  1243     0032                     ??_adc_read:	
  1244                           ; 1 bytes @ 0x12
  1245                           
  1246     0032                     ??_LcdALL_Port:	
  1247                           ; 1 bytes @ 0x12
  1248                           
  1249     0032                     ?__Umul8_16:	
  1250                           ; 1 bytes @ 0x12
  1251                           
  1252     0032                     ?_adc_init:	
  1253                           ; 2 bytes @ 0x12
  1254                           
  1255     0032                     ?___awmod:	
  1256                           ; 2 bytes @ 0x12
  1257                           
  1258     0032                     ?___aldiv:	
  1259                           ; 2 bytes @ 0x12
  1260                           
  1261     0032                     ?___xxtofl:	
  1262                           ; 4 bytes @ 0x12
  1263                           
  1264     0032                     __Umul8_16@multiplicand:	
  1265                           ; 4 bytes @ 0x12
  1266                           
  1267     0032                     adc_init@channel:	
  1268                           ; 1 bytes @ 0x12
  1269                           
  1270     0032                     ___awmod@divisor:	
  1271                           ; 2 bytes @ 0x12
  1272                           
  1273     0032                     ___aldiv@divisor:	
  1274                           ; 2 bytes @ 0x12
  1275                           
  1276     0032                     ___xxtofl@val:	
  1277                           ; 4 bytes @ 0x12
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0x12
  1281     0032                     	ds	2
  1282     0034                     ??__Umul8_16:
  1283     0034                     ??_adc_init:	
  1284                           ; 1 bytes @ 0x14
  1285                           
  1286     0034                     LcdALL_Port@a:	
  1287                           ; 1 bytes @ 0x14
  1288                           
  1289     0034                     ___awmod@dividend:	
  1290                           ; 1 bytes @ 0x14
  1291                           
  1292                           
  1293                           ; 2 bytes @ 0x14
  1294     0034                     	ds	1
  1295     0035                     ??_LcdALL_Cmd:
  1296     0035                     ??_LcdALL_Write_Char:	
  1297                           ; 1 bytes @ 0x15
  1298                           
  1299                           
  1300                           ; 1 bytes @ 0x15
  1301     0035                     	ds	1
  1302     0036                     ??___awmod:
  1303     0036                     ??___xxtofl:	
  1304                           ; 1 bytes @ 0x16
  1305                           
  1306     0036                     LcdALL_Write_Char@a:	
  1307                           ; 1 bytes @ 0x16
  1308                           
  1309     0036                     __Umul8_16@product:	
  1310                           ; 1 bytes @ 0x16
  1311                           
  1312     0036                     ___aldiv@dividend:	
  1313                           ; 2 bytes @ 0x16
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x16
  1317     0036                     	ds	1
  1318     0037                     ??_LcdALL_Write_String:
  1319     0037                     LcdALL_Cmd@a:	
  1320                           ; 1 bytes @ 0x17
  1321                           
  1322     0037                     ___awmod@counter:	
  1323                           ; 1 bytes @ 0x17
  1324                           
  1325     0037                     LcdALL_Write_String@i:	
  1326                           ; 1 bytes @ 0x17
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x17
  1330     0037                     	ds	1
  1331     0038                     ?_LcdALL_Set_Cursor:
  1332     0038                     ??_LcdALL_Init:	
  1333                           ; 1 bytes @ 0x18
  1334                           
  1335     0038                     LcdALL_Set_Cursor@b:	
  1336                           ; 1 bytes @ 0x18
  1337                           
  1338     0038                     ___awmod@sign:	
  1339                           ; 1 bytes @ 0x18
  1340                           
  1341     0038                     __Umul8_16@word_mpld:	
  1342                           ; 1 bytes @ 0x18
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x18
  1346     0038                     	ds	1
  1347     0039                     ??_LcdALL_Set_Cursor:
  1348     0039                     ?___awdiv:	
  1349                           ; 1 bytes @ 0x19
  1350                           
  1351     0039                     LcdALL_Set_Cursor@a:	
  1352                           ; 2 bytes @ 0x19
  1353                           
  1354     0039                     LcdALL_Write_String@a:	
  1355                           ; 1 bytes @ 0x19
  1356                           
  1357     0039                     ___awdiv@divisor:	
  1358                           ; 1 bytes @ 0x19
  1359                           
  1360                           
  1361                           ; 2 bytes @ 0x19
  1362     0039                     	ds	1
  1363     003A                     ??___aldiv:
  1364     003A                     LcdALL_Set_Cursor@temp:	
  1365                           ; 1 bytes @ 0x1A
  1366                           
  1367     003A                     __Umul8_16@multiplier:	
  1368                           ; 1 bytes @ 0x1A
  1369                           
  1370     003A                     ___xxtofl@sign:	
  1371                           ; 1 bytes @ 0x1A
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x1A
  1375     003A                     	ds	1
  1376     003B                     ?___fladd:
  1377     003B                     ___aldiv@counter:	
  1378                           ; 4 bytes @ 0x1B
  1379                           
  1380     003B                     ___xxtofl@exp:	
  1381                           ; 1 bytes @ 0x1B
  1382                           
  1383     003B                     ___awdiv@dividend:	
  1384                           ; 1 bytes @ 0x1B
  1385                           
  1386     003B                     ___fladd@b:	
  1387                           ; 2 bytes @ 0x1B
  1388                           
  1389                           
  1390                           ; 4 bytes @ 0x1B
  1391     003B                     	ds	1
  1392     003C                     ___aldiv@sign:
  1393     003C                     ___xxtofl@arg:	
  1394                           ; 1 bytes @ 0x1C
  1395                           
  1396                           
  1397                           ; 4 bytes @ 0x1C
  1398     003C                     	ds	1
  1399     003D                     ??___awdiv:
  1400     003D                     ___aldiv@quotient:	
  1401                           ; 1 bytes @ 0x1D
  1402                           
  1403                           
  1404                           ; 4 bytes @ 0x1D
  1405     003D                     	ds	1
  1406     003E                     ___awdiv@counter:
  1407                           
  1408                           ; 1 bytes @ 0x1E
  1409     003E                     	ds	1
  1410     003F                     ___awdiv@sign:
  1411     003F                     ___fladd@a:	
  1412                           ; 1 bytes @ 0x1F
  1413                           
  1414                           
  1415                           ; 4 bytes @ 0x1F
  1416     003F                     	ds	1
  1417     0040                     ___awdiv@quotient:
  1418                           
  1419                           ; 2 bytes @ 0x20
  1420     0040                     	ds	1
  1421     0041                     ?_UART_RX_config:
  1422     0041                     UART_RX_config@baudrate:	
  1423                           ; 1 bytes @ 0x21
  1424                           
  1425                           
  1426                           ; 2 bytes @ 0x21
  1427     0041                     	ds	1
  1428     0042                     ?_LcdALL_set_value:
  1429     0042                     ?_LcdALLb_set_value:	
  1430                           ; 1 bytes @ 0x22
  1431                           
  1432     0042                     LcdALL_set_value@byte_value:	
  1433                           ; 1 bytes @ 0x22
  1434                           
  1435     0042                     LcdALLb_set_value@byte_value:	
  1436                           ; 2 bytes @ 0x22
  1437                           
  1438                           
  1439                           ; 2 bytes @ 0x22
  1440     0042                     	ds	1
  1441     0043                     ??_UART_RX_config:
  1442     0043                     ??___fladd:	
  1443                           ; 1 bytes @ 0x23
  1444                           
  1445     0043                     _UART_RX_config$1555:	
  1446                           ; 1 bytes @ 0x23
  1447                           
  1448                           
  1449                           ; 4 bytes @ 0x23
  1450     0043                     	ds	1
  1451     0044                     ??_LcdALL_set_value:
  1452     0044                     ??_LcdALLb_set_value:	
  1453                           ; 1 bytes @ 0x24
  1454                           
  1455     0044                     LcdALL_set_value@centenas:	
  1456                           ; 1 bytes @ 0x24
  1457                           
  1458     0044                     LcdALLb_set_value@centenas:	
  1459                           ; 2 bytes @ 0x24
  1460                           
  1461                           
  1462                           ; 2 bytes @ 0x24
  1463     0044                     	ds	2
  1464     0046                     LcdALL_set_value@decenas:
  1465     0046                     LcdALLb_set_value@decenas:	
  1466                           ; 2 bytes @ 0x26
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x26
  1470     0046                     	ds	1
  1471     0047                     UART_RX_config@baud_value:
  1472                           
  1473                           ; 2 bytes @ 0x27
  1474     0047                     	ds	1
  1475     0048                     LcdALL_set_value@unidades:
  1476     0048                     LcdALLb_set_value@unidades:	
  1477                           ; 2 bytes @ 0x28
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x28
  1481     0048                     	ds	3
  1482     004B                     ??_LcdALL_map:
  1483     004B                     ??___flsub:	
  1484                           ; 1 bytes @ 0x2B
  1485                           
  1486     004B                     ___fltol@sign1:	
  1487                           ; 1 bytes @ 0x2B
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x2B
  1491     004B                     	ds	1
  1492     004C                     ___fltol@exp1:
  1493                           
  1494                           ; 1 bytes @ 0x2C
  1495     004C                     	ds	1
  1496                           
  1497                           	psect	maintext
  1498     06C3                     __pmaintext:	
  1499 ;;
  1500 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1501 ;;
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 71 in file "POSTLAB_02.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  a               2    0        unsigned int 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : B00/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       0       4       0
  1521 ;;      Totals:         0       0       0       4       0
  1522 ;;Total ram usage:        4 bytes
  1523 ;; Hardware stack levels required when called: 6
  1524 ;; This function calls:
  1525 ;;		_LcdALL_Init
  1526 ;;		_LcdALL_Set_Cursor
  1527 ;;		_LcdALL_Write_String
  1528 ;;		_LcdALL_map
  1529 ;;		_LcdALL_set_value
  1530 ;;		_LcdALLb_set_value
  1531 ;;		_UART_RX_config
  1532 ;;		___fltol
  1533 ;;		___xxtofl
  1534 ;;		_adc_init
  1535 ;;		_adc_read
  1536 ;;		_setup
  1537 ;; This function is called by:
  1538 ;;		Startup code after reset
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542     06C3                     _main:	
  1543                           ;psect for function _main
  1544                           
  1545     06C3                     l4012:	
  1546                           ;incstack = 0
  1547                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1548                           
  1549                           
  1550                           ;POSTLAB_02.c: 72:   unsigned int a;;POSTLAB_02.c: 73:   setup();
  1551     06C3  160A  118A  254F  120A  118A  	fcall	_setup
  1552                           
  1553                           ;POSTLAB_02.c: 74:   LcdALL_Init();
  1554     06C8  120A  118A  27B7  120A  118A  	fcall	_LcdALL_Init
  1555     06CD                     l4014:
  1556                           
  1557                           ;POSTLAB_02.c: 75:   adc_init(0);
  1558     06CD  3000               	movlw	0
  1559     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1560     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1561     06D0  00B2               	movwf	adc_init@channel
  1562     06D1  00B3               	movwf	adc_init@channel+1
  1563     06D2  120A  158A  2431  120A  118A  	fcall	_adc_init
  1564     06D7                     l4016:
  1565                           
  1566                           ;POSTLAB_02.c: 76:   UART_RX_config(9600);
  1567     06D7  3080               	movlw	128
  1568     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1569     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1570     06DA  00C1               	movwf	UART_RX_config@baudrate
  1571     06DB  3025               	movlw	37
  1572     06DC  00C2               	movwf	UART_RX_config@baudrate+1
  1573     06DD  160A  118A  26E3  120A  118A  	fcall	_UART_RX_config
  1574     06E2                     l4018:
  1575                           
  1576                           ;POSTLAB_02.c: 79:   {;POSTLAB_02.c: 80:     adc_read();
  1577     06E2  160A  118A  24EE  120A  118A  	fcall	_adc_read
  1578     06E7                     l4020:
  1579                           
  1580                           ;POSTLAB_02.c: 82:     LcdALL_Set_Cursor(1,1);
  1581     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1582     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1583     06E9  01B8               	clrf	LcdALL_Set_Cursor@b
  1584     06EA  0AB8               	incf	LcdALL_Set_Cursor@b,f
  1585     06EB  3001               	movlw	1
  1586     06EC  160A  118A  258B  120A  118A  	fcall	_LcdALL_Set_Cursor
  1587                           
  1588                           ;POSTLAB_02.c: 83:     LcdALL_Write_String("Pot1:  CPU:");
  1589     06F1  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1590     06F2  160A  118A  25AD  120A  118A  	fcall	_LcdALL_Write_String
  1591     06F7                     l4022:
  1592                           
  1593                           ;POSTLAB_02.c: 84:     LcdALL_Set_Cursor(2,1);
  1594     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1595     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1596     06F9  01B8               	clrf	LcdALL_Set_Cursor@b
  1597     06FA  0AB8               	incf	LcdALL_Set_Cursor@b,f
  1598     06FB  3002               	movlw	2
  1599     06FC  160A  118A  258B  120A  118A  	fcall	_LcdALL_Set_Cursor
  1600     0701                     l4024:
  1601                           
  1602                           ;POSTLAB_02.c: 85:     mapeado = LcdALL_map(ADRESH, 0, 255, 0, 500);
  1603     0701  3043               	movlw	67
  1604     0702  1683               	bsf	3,5	;RP0=1, select bank3
  1605     0703  1703               	bsf	3,6	;RP1=1, select bank3
  1606     0704  00A3               	movwf	(LcdALL_map@nuevo_max+3)^(0+384)
  1607     0705  30FA               	movlw	250
  1608     0706  00A2               	movwf	(LcdALL_map@nuevo_max+2)^(0+384)
  1609     0707  3000               	movlw	0
  1610     0708  00A1               	movwf	(LcdALL_map@nuevo_max+1)^(0+384)
  1611     0709  3000               	movlw	0
  1612     070A  00A0               	movwf	LcdALL_map@nuevo_max^(0+384)
  1613     070B  3000               	movlw	0
  1614     070C  009F               	movwf	(LcdALL_map@nuevo_min+3)^(0+384)
  1615     070D  3000               	movlw	0
  1616     070E  009E               	movwf	(LcdALL_map@nuevo_min+2)^(0+384)
  1617     070F  3000               	movlw	0
  1618     0710  009D               	movwf	(LcdALL_map@nuevo_min+1)^(0+384)
  1619     0711  3000               	movlw	0
  1620     0712  009C               	movwf	LcdALL_map@nuevo_min^(0+384)
  1621     0713  3043               	movlw	67
  1622     0714  009B               	movwf	(LcdALL_map@rango_max+3)^(0+384)
  1623     0715  307F               	movlw	127
  1624     0716  009A               	movwf	(LcdALL_map@rango_max+2)^(0+384)
  1625     0717  3000               	movlw	0
  1626     0718  0099               	movwf	(LcdALL_map@rango_max+1)^(0+384)
  1627     0719  3000               	movlw	0
  1628     071A  0098               	movwf	LcdALL_map@rango_max^(0+384)
  1629     071B  3000               	movlw	0
  1630     071C  0097               	movwf	(LcdALL_map@rango_min+3)^(0+384)
  1631     071D  3000               	movlw	0
  1632     071E  0096               	movwf	(LcdALL_map@rango_min+2)^(0+384)
  1633     071F  3000               	movlw	0
  1634     0720  0095               	movwf	(LcdALL_map@rango_min+1)^(0+384)
  1635     0721  3000               	movlw	0
  1636     0722  0094               	movwf	LcdALL_map@rango_min^(0+384)
  1637     0723  1283               	bcf	3,5	;RP0=0, select bank0
  1638     0724  1303               	bcf	3,6	;RP1=0, select bank0
  1639     0725  081E               	movf	30,w	;volatile
  1640     0726  1683               	bsf	3,5	;RP0=1, select bank3
  1641     0727  1703               	bsf	3,6	;RP1=1, select bank3
  1642     0728  00A4               	movwf	??_main^(0+384)
  1643     0729  01A5               	clrf	(??_main^(0+384)+1)
  1644     072A  01A6               	clrf	(??_main^(0+384)+2)
  1645     072B  01A7               	clrf	(??_main^(0+384)+3)
  1646     072C  0827               	movf	(??_main+3)^(0+384),w
  1647     072D  1283               	bcf	3,5	;RP0=0, select bank0
  1648     072E  1303               	bcf	3,6	;RP1=0, select bank0
  1649     072F  00B5               	movwf	___xxtofl@val+3
  1650     0730  1683               	bsf	3,5	;RP0=1, select bank3
  1651     0731  1703               	bsf	3,6	;RP1=1, select bank3
  1652     0732  0826               	movf	(??_main+2)^(0+384),w
  1653     0733  1283               	bcf	3,5	;RP0=0, select bank0
  1654     0734  1303               	bcf	3,6	;RP1=0, select bank0
  1655     0735  00B4               	movwf	___xxtofl@val+2
  1656     0736  1683               	bsf	3,5	;RP0=1, select bank3
  1657     0737  1703               	bsf	3,6	;RP1=1, select bank3
  1658     0738  0825               	movf	(??_main+1)^(0+384),w
  1659     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1660     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1661     073B  00B3               	movwf	___xxtofl@val+1
  1662     073C  1683               	bsf	3,5	;RP0=1, select bank3
  1663     073D  1703               	bsf	3,6	;RP1=1, select bank3
  1664     073E  0824               	movf	??_main^(0+384),w
  1665     073F  1283               	bcf	3,5	;RP0=0, select bank0
  1666     0740  1303               	bcf	3,6	;RP1=0, select bank0
  1667     0741  00B2               	movwf	___xxtofl@val
  1668     0742  3000               	movlw	0
  1669     0743  120A  158A  2377  120A  118A  	fcall	___xxtofl
  1670     0748  1283               	bcf	3,5	;RP0=0, select bank0
  1671     0749  1303               	bcf	3,6	;RP1=0, select bank0
  1672     074A  0835               	movf	?___xxtofl+3,w
  1673     074B  1683               	bsf	3,5	;RP0=1, select bank3
  1674     074C  1703               	bsf	3,6	;RP1=1, select bank3
  1675     074D  0093               	movwf	(LcdALL_map@valor+3)^(0+384)
  1676     074E  1283               	bcf	3,5	;RP0=0, select bank0
  1677     074F  1303               	bcf	3,6	;RP1=0, select bank0
  1678     0750  0834               	movf	?___xxtofl+2,w
  1679     0751  1683               	bsf	3,5	;RP0=1, select bank3
  1680     0752  1703               	bsf	3,6	;RP1=1, select bank3
  1681     0753  0092               	movwf	(LcdALL_map@valor+2)^(0+384)
  1682     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1683     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1684     0756  0833               	movf	?___xxtofl+1,w
  1685     0757  1683               	bsf	3,5	;RP0=1, select bank3
  1686     0758  1703               	bsf	3,6	;RP1=1, select bank3
  1687     0759  0091               	movwf	(LcdALL_map@valor+1)^(0+384)
  1688     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1689     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1690     075C  0832               	movf	?___xxtofl,w
  1691     075D  1683               	bsf	3,5	;RP0=1, select bank3
  1692     075E  1703               	bsf	3,6	;RP1=1, select bank3
  1693     075F  0090               	movwf	LcdALL_map@valor^(0+384)
  1694     0760  120A  158A  24EE  120A  118A  	fcall	_LcdALL_map
  1695     0765  1683               	bsf	3,5	;RP0=1, select bank3
  1696     0766  1703               	bsf	3,6	;RP1=1, select bank3
  1697     0767  0813               	movf	(?_LcdALL_map+3)^(0+384),w
  1698     0768  1683               	bsf	3,5	;RP0=1, select bank1
  1699     0769  1303               	bcf	3,6	;RP1=0, select bank1
  1700     076A  00EB               	movwf	(___fltol@f1+3)^(0+128)
  1701     076B  1683               	bsf	3,5	;RP0=1, select bank3
  1702     076C  1703               	bsf	3,6	;RP1=1, select bank3
  1703     076D  0812               	movf	(?_LcdALL_map+2)^(0+384),w
  1704     076E  1683               	bsf	3,5	;RP0=1, select bank1
  1705     076F  1303               	bcf	3,6	;RP1=0, select bank1
  1706     0770  00EA               	movwf	(___fltol@f1+2)^(0+128)
  1707     0771  1683               	bsf	3,5	;RP0=1, select bank3
  1708     0772  1703               	bsf	3,6	;RP1=1, select bank3
  1709     0773  0811               	movf	(?_LcdALL_map+1)^(0+384),w
  1710     0774  1683               	bsf	3,5	;RP0=1, select bank1
  1711     0775  1303               	bcf	3,6	;RP1=0, select bank1
  1712     0776  00E9               	movwf	(___fltol@f1+1)^(0+128)
  1713     0777  1683               	bsf	3,5	;RP0=1, select bank3
  1714     0778  1703               	bsf	3,6	;RP1=1, select bank3
  1715     0779  0810               	movf	?_LcdALL_map^(0+384),w
  1716     077A  1683               	bsf	3,5	;RP0=1, select bank1
  1717     077B  1303               	bcf	3,6	;RP1=0, select bank1
  1718     077C  00E8               	movwf	___fltol@f1^(0+128)
  1719     077D  120A  158A  224C  120A  118A  	fcall	___fltol
  1720     0782  1683               	bsf	3,5	;RP0=1, select bank1
  1721     0783  1303               	bcf	3,6	;RP1=0, select bank1
  1722     0784  0869               	movf	(?___fltol+1)^(0+128),w
  1723     0785  1283               	bcf	3,5	;RP0=0, select bank0
  1724     0786  1303               	bcf	3,6	;RP1=0, select bank0
  1725     0787  00D2               	movwf	_mapeado+1
  1726     0788  1683               	bsf	3,5	;RP0=1, select bank1
  1727     0789  1303               	bcf	3,6	;RP1=0, select bank1
  1728     078A  0868               	movf	?___fltol^(0+128),w
  1729     078B  1283               	bcf	3,5	;RP0=0, select bank0
  1730     078C  1303               	bcf	3,6	;RP1=0, select bank0
  1731     078D  00D1               	movwf	_mapeado
  1732     078E                     l4026:
  1733                           
  1734                           ;POSTLAB_02.c: 86:     LcdALL_set_value(mapeado);
  1735     078E  0852               	movf	_mapeado+1,w
  1736     078F  00C3               	movwf	LcdALL_set_value@byte_value+1
  1737     0790  0851               	movf	_mapeado,w
  1738     0791  00C2               	movwf	LcdALL_set_value@byte_value
  1739     0792  120A  158A  214F  120A  118A  	fcall	_LcdALL_set_value
  1740     0797                     l4028:
  1741                           
  1742                           ;POSTLAB_02.c: 87:     LcdALL_Write_String("   ");
  1743     0797  3024               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1744     0798  160A  118A  25AD  120A  118A  	fcall	_LcdALL_Write_String
  1745     079D                     l4030:
  1746                           
  1747                           ;POSTLAB_02.c: 88:     LcdALLb_set_value(cont);
  1748     079D  1283               	bcf	3,5	;RP0=0, select bank0
  1749     079E  1303               	bcf	3,6	;RP1=0, select bank0
  1750     079F  084E               	movf	_cont+1,w
  1751     07A0  00C3               	movwf	LcdALLb_set_value@byte_value+1
  1752     07A1  084D               	movf	_cont,w
  1753     07A2  00C2               	movwf	LcdALLb_set_value@byte_value
  1754     07A3  120A  158A  2071  120A  118A  	fcall	_LcdALLb_set_value
  1755     07A8                     l4032:
  1756                           
  1757                           ;POSTLAB_02.c: 89:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1758     07A8  3006               	movlw	6
  1759     07A9  1683               	bsf	3,5	;RP0=1, select bank3
  1760     07AA  1703               	bsf	3,6	;RP1=1, select bank3
  1761     07AB  00A5               	movwf	(??_main^(0+384)+1)
  1762     07AC  302F               	movlw	47
  1763     07AD  00A4               	movwf	??_main^(0+384)
  1764     07AE                     u5807:
  1765     07AE  0BA4               	decfsz	??_main^(0+384),f
  1766     07AF  2FAE               	goto	u5807
  1767     07B0  0BA5               	decfsz	(??_main^(0+384)+1),f
  1768     07B1  2FAE               	goto	u5807
  1769     07B2  2FB3               	nop2
  1770     07B3  2EE2               	goto	l4018
  1771     07B4  120A  118A  2812   	ljmp	start
  1772     07B7                     __end_of_main:
  1773                           
  1774                           	psect	text1
  1775     154F                     __ptext1:	
  1776 ;; *************** function _setup *****************
  1777 ;; Defined at:
  1778 ;;		line 94 in file "POSTLAB_02.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 3
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806     154F                     _setup:	
  1807                           ;psect for function _setup
  1808                           
  1809     154F                     l3286:	
  1810                           ;incstack = 0
  1811                           ; Regs used in _setup: [wreg+status,2+status,0]
  1812                           
  1813                           
  1814                           ;POSTLAB_02.c: 95:     ANSEL = 0;
  1815     154F  1683               	bsf	3,5	;RP0=1, select bank3
  1816     1550  1703               	bsf	3,6	;RP1=1, select bank3
  1817     1551  0188               	clrf	8	;volatile
  1818                           
  1819                           ;POSTLAB_02.c: 96:     ANSELH = 0;
  1820     1552  0189               	clrf	9	;volatile
  1821                           
  1822                           ;POSTLAB_02.c: 99:     TRISA = 0;
  1823     1553  1683               	bsf	3,5	;RP0=1, select bank1
  1824     1554  1303               	bcf	3,6	;RP1=0, select bank1
  1825     1555  0185               	clrf	5	;volatile
  1826                           
  1827                           ;POSTLAB_02.c: 100:     PORTA = 0;
  1828     1556  1283               	bcf	3,5	;RP0=0, select bank0
  1829     1557  1303               	bcf	3,6	;RP1=0, select bank0
  1830     1558  0185               	clrf	5	;volatile
  1831                           
  1832                           ;POSTLAB_02.c: 101:     TRISD = 0;
  1833     1559  1683               	bsf	3,5	;RP0=1, select bank1
  1834     155A  1303               	bcf	3,6	;RP1=0, select bank1
  1835     155B  0188               	clrf	8	;volatile
  1836                           
  1837                           ;POSTLAB_02.c: 102:     TRISE = 0;
  1838     155C  0189               	clrf	9	;volatile
  1839                           
  1840                           ;POSTLAB_02.c: 103:     PORTD = 0;
  1841     155D  1283               	bcf	3,5	;RP0=0, select bank0
  1842     155E  1303               	bcf	3,6	;RP1=0, select bank0
  1843     155F  0188               	clrf	8	;volatile
  1844     1560                     l3288:
  1845                           
  1846                           ;POSTLAB_02.c: 106:     OSCCONbits.IRCF = 0b111;
  1847     1560  3070               	movlw	112
  1848     1561  1683               	bsf	3,5	;RP0=1, select bank1
  1849     1562  1303               	bcf	3,6	;RP1=0, select bank1
  1850     1563  048F               	iorwf	15,f	;volatile
  1851     1564                     l3290:
  1852                           
  1853                           ;POSTLAB_02.c: 107:     OSCCONbits.SCS = 1;
  1854     1564  140F               	bsf	15,0	;volatile
  1855     1565                     l3292:
  1856                           
  1857                           ;POSTLAB_02.c: 110:     INTCONbits.GIE = 1;
  1858     1565  178B               	bsf	11,7	;volatile
  1859     1566                     l3294:
  1860                           
  1861                           ;POSTLAB_02.c: 111:     PIE1bits.RCIE = 1;
  1862     1566  168C               	bsf	12,5	;volatile
  1863     1567                     l3296:
  1864                           
  1865                           ;POSTLAB_02.c: 112:     PIR1bits.RCIF = 0;
  1866     1567  1283               	bcf	3,5	;RP0=0, select bank0
  1867     1568  1303               	bcf	3,6	;RP1=0, select bank0
  1868     1569  128C               	bcf	12,5	;volatile
  1869     156A                     l3298:
  1870                           
  1871                           ;POSTLAB_02.c: 113:     INTCONbits.PEIE = 1;
  1872     156A  170B               	bsf	11,6	;volatile
  1873     156B                     l412:
  1874     156B  0008               	return
  1875     156C                     __end_of_setup:
  1876                           
  1877                           	psect	text2
  1878     14EE                     __ptext2:	
  1879 ;; *************** function _adc_read *****************
  1880 ;; Defined at:
  1881 ;;		line 86 in file "ADC_Library.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2   36[None  ] int 
  1888 ;; Registers used:
  1889 ;;		wreg
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0
  1897 ;;      Temps:          0       2       0       0       0
  1898 ;;      Totals:         0       2       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 3
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909     14EE                     _adc_read:	
  1910                           ;psect for function _adc_read
  1911                           
  1912     14EE                     l3194:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _adc_read: [wreg]
  1915                           
  1916                           
  1917                           ;ADC_Library.c: 87:     if (ADCON0bits.GO == 0){
  1918     14EE  1283               	bcf	3,5	;RP0=0, select bank0
  1919     14EF  1303               	bcf	3,6	;RP1=0, select bank0
  1920     14F0  189F               	btfsc	31,1	;volatile
  1921     14F1  2CF3               	goto	u4221
  1922     14F2  2CF4               	goto	u4220
  1923     14F3                     u4221:
  1924     14F3  2D00               	goto	l38
  1925     14F4                     u4220:
  1926     14F4                     l3196:
  1927                           
  1928                           ;ADC_Library.c: 88:         ADCON0bits.GO = 1;
  1929     14F4  149F               	bsf	31,1	;volatile
  1930     14F5                     l3198:
  1931                           
  1932                           ;ADC_Library.c: 89:         _delay((unsigned long)((2)*(8000000/4000.0)));
  1933     14F5  3006               	movlw	6
  1934     14F6  1283               	bcf	3,5	;RP0=0, select bank0
  1935     14F7  1303               	bcf	3,6	;RP1=0, select bank0
  1936     14F8  00B3               	movwf	??_adc_read+1
  1937     14F9  302F               	movlw	47
  1938     14FA  00B2               	movwf	??_adc_read
  1939     14FB                     u5817:
  1940     14FB  0BB2               	decfsz	??_adc_read,f
  1941     14FC  2CFB               	goto	u5817
  1942     14FD  0BB3               	decfsz	??_adc_read+1,f
  1943     14FE  2CFB               	goto	u5817
  1944     14FF  2D00               	nop2
  1945     1500                     l38:
  1946     1500  0008               	return
  1947     1501                     __end_of_adc_read:
  1948                           
  1949                           	psect	text3
  1950     0C31                     __ptext3:	
  1951 ;; *************** function _adc_init *****************
  1952 ;; Defined at:
  1953 ;;		line 15 in file "ADC_Library.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  channel         2   18[BANK0 ] int 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2   18[BANK0 ] int 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         0       2       0       0       0
  1968 ;;      Locals:         0       0       0       0       0
  1969 ;;      Temps:          0       2       0       0       0
  1970 ;;      Totals:         0       4       0       0       0
  1971 ;;Total ram usage:        4 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 3
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981     0C31                     _adc_init:	
  1982                           ;psect for function _adc_init
  1983                           
  1984     0C31                     l3136:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1987                           
  1988                           
  1989                           ;ADC_Library.c: 17: PIR1bits.ADIF = 0;
  1990     0C31  1283               	bcf	3,5	;RP0=0, select bank0
  1991     0C32  1303               	bcf	3,6	;RP1=0, select bank0
  1992     0C33  130C               	bcf	12,6	;volatile
  1993                           
  1994                           ;ADC_Library.c: 18: PIE1bits.ADIE = 1;
  1995     0C34  1683               	bsf	3,5	;RP0=1, select bank1
  1996     0C35  1303               	bcf	3,6	;RP1=0, select bank1
  1997     0C36  170C               	bsf	12,6	;volatile
  1998                           
  1999                           ;ADC_Library.c: 19: INTCONbits.PEIE = 1;
  2000     0C37  170B               	bsf	11,6	;volatile
  2001                           
  2002                           ;ADC_Library.c: 21: switch (channel) {
  2003     0C38  2CB3               	goto	l3174
  2004     0C39                     l3138:
  2005                           
  2006                           ;ADC_Library.c: 24:         ANSEL = channel;
  2007     0C39  3001               	movlw	1
  2008     0C3A  1683               	bsf	3,5	;RP0=1, select bank3
  2009     0C3B  1703               	bsf	3,6	;RP1=1, select bank3
  2010     0C3C  0088               	movwf	8	;volatile
  2011                           
  2012                           ;ADC_Library.c: 25:         TRISA = channel;
  2013     0C3D  3001               	movlw	1
  2014     0C3E  1683               	bsf	3,5	;RP0=1, select bank1
  2015     0C3F  1303               	bcf	3,6	;RP1=0, select bank1
  2016     0C40  0085               	movwf	5	;volatile
  2017     0C41                     l3140:
  2018                           
  2019                           ;ADC_Library.c: 26:         ADCON0bits.CHS = 0b0000;
  2020     0C41  30C3               	movlw	-61
  2021     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  2022     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  2023     0C44  059F               	andwf	31,f	;volatile
  2024                           
  2025                           ;ADC_Library.c: 27:         break;
  2026     0C45  2CD4               	goto	l3176
  2027     0C46                     l3142:
  2028                           
  2029                           ;ADC_Library.c: 30:         ANSEL = channel;
  2030     0C46  3002               	movlw	2
  2031     0C47  1683               	bsf	3,5	;RP0=1, select bank3
  2032     0C48  1703               	bsf	3,6	;RP1=1, select bank3
  2033     0C49  0088               	movwf	8	;volatile
  2034                           
  2035                           ;ADC_Library.c: 31:         TRISA = channel;
  2036     0C4A  3002               	movlw	2
  2037     0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  2038     0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  2039     0C4D  0085               	movwf	5	;volatile
  2040     0C4E                     l3144:
  2041                           
  2042                           ;ADC_Library.c: 32:         ADCON0bits.CHS = 0b0001;
  2043     0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  2044     0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  2045     0C50  081F               	movf	31,w	;volatile
  2046     0C51  39C3               	andlw	-61
  2047     0C52  3804               	iorlw	4
  2048     0C53  009F               	movwf	31	;volatile
  2049                           
  2050                           ;ADC_Library.c: 33:         break;
  2051     0C54  2CD4               	goto	l3176
  2052     0C55                     l3146:
  2053                           
  2054                           ;ADC_Library.c: 36:         ANSEL = channel;
  2055     0C55  3004               	movlw	4
  2056     0C56  1683               	bsf	3,5	;RP0=1, select bank3
  2057     0C57  1703               	bsf	3,6	;RP1=1, select bank3
  2058     0C58  0088               	movwf	8	;volatile
  2059                           
  2060                           ;ADC_Library.c: 37:         TRISA = channel;
  2061     0C59  3004               	movlw	4
  2062     0C5A  1683               	bsf	3,5	;RP0=1, select bank1
  2063     0C5B  1303               	bcf	3,6	;RP1=0, select bank1
  2064     0C5C  0085               	movwf	5	;volatile
  2065     0C5D                     l3148:
  2066                           
  2067                           ;ADC_Library.c: 38:         ADCON0bits.CHS = 0b0010;
  2068     0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  2069     0C5E  1303               	bcf	3,6	;RP1=0, select bank0
  2070     0C5F  081F               	movf	31,w	;volatile
  2071     0C60  39C3               	andlw	-61
  2072     0C61  3808               	iorlw	8
  2073     0C62  009F               	movwf	31	;volatile
  2074                           
  2075                           ;ADC_Library.c: 39:         break;
  2076     0C63  2CD4               	goto	l3176
  2077     0C64                     l3150:
  2078                           
  2079                           ;ADC_Library.c: 42:         ANSEL = channel;
  2080     0C64  3008               	movlw	8
  2081     0C65  1683               	bsf	3,5	;RP0=1, select bank3
  2082     0C66  1703               	bsf	3,6	;RP1=1, select bank3
  2083     0C67  0088               	movwf	8	;volatile
  2084                           
  2085                           ;ADC_Library.c: 43:         TRISA = channel;
  2086     0C68  3008               	movlw	8
  2087     0C69  1683               	bsf	3,5	;RP0=1, select bank1
  2088     0C6A  1303               	bcf	3,6	;RP1=0, select bank1
  2089     0C6B  0085               	movwf	5	;volatile
  2090     0C6C                     l3152:
  2091                           
  2092                           ;ADC_Library.c: 44:         ADCON0bits.CHS = 0b0011;
  2093     0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  2094     0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  2095     0C6E  081F               	movf	31,w	;volatile
  2096     0C6F  39C3               	andlw	-61
  2097     0C70  380C               	iorlw	12
  2098     0C71  009F               	movwf	31	;volatile
  2099                           
  2100                           ;ADC_Library.c: 45:         break;
  2101     0C72  2CD4               	goto	l3176
  2102     0C73                     l3154:
  2103                           
  2104                           ;ADC_Library.c: 48:         ANSEL = channel;
  2105     0C73  3010               	movlw	16
  2106     0C74  1683               	bsf	3,5	;RP0=1, select bank3
  2107     0C75  1703               	bsf	3,6	;RP1=1, select bank3
  2108     0C76  0088               	movwf	8	;volatile
  2109                           
  2110                           ;ADC_Library.c: 49:         TRISA = 0b00100000;
  2111     0C77  3020               	movlw	32
  2112     0C78  1683               	bsf	3,5	;RP0=1, select bank1
  2113     0C79  1303               	bcf	3,6	;RP1=0, select bank1
  2114     0C7A  0085               	movwf	5	;volatile
  2115     0C7B                     l3156:
  2116                           
  2117                           ;ADC_Library.c: 50:         ADCON0bits.CHS = 0b0100;
  2118     0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0C7D  081F               	movf	31,w	;volatile
  2121     0C7E  39C3               	andlw	-61
  2122     0C7F  3810               	iorlw	16
  2123     0C80  009F               	movwf	31	;volatile
  2124                           
  2125                           ;ADC_Library.c: 51:         break;
  2126     0C81  2CD4               	goto	l3176
  2127     0C82                     l3158:
  2128                           
  2129                           ;ADC_Library.c: 54:         ANSEL = channel;
  2130     0C82  3020               	movlw	32
  2131     0C83  1683               	bsf	3,5	;RP0=1, select bank3
  2132     0C84  1703               	bsf	3,6	;RP1=1, select bank3
  2133     0C85  0088               	movwf	8	;volatile
  2134                           
  2135                           ;ADC_Library.c: 55:         TRISE = 0b001;
  2136     0C86  3001               	movlw	1
  2137     0C87  1683               	bsf	3,5	;RP0=1, select bank1
  2138     0C88  1303               	bcf	3,6	;RP1=0, select bank1
  2139     0C89  0089               	movwf	9	;volatile
  2140     0C8A                     l3160:
  2141                           
  2142                           ;ADC_Library.c: 56:         ADCON0bits.CHS = 0b0101;
  2143     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2144     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  2145     0C8C  081F               	movf	31,w	;volatile
  2146     0C8D  39C3               	andlw	-61
  2147     0C8E  3814               	iorlw	20
  2148     0C8F  009F               	movwf	31	;volatile
  2149                           
  2150                           ;ADC_Library.c: 57:         break;
  2151     0C90  2CD4               	goto	l3176
  2152     0C91                     l3162:
  2153                           
  2154                           ;ADC_Library.c: 60:         ANSEL = channel;
  2155     0C91  3040               	movlw	64
  2156     0C92  1683               	bsf	3,5	;RP0=1, select bank3
  2157     0C93  1703               	bsf	3,6	;RP1=1, select bank3
  2158     0C94  0088               	movwf	8	;volatile
  2159                           
  2160                           ;ADC_Library.c: 61:         TRISE = 0b010;
  2161     0C95  3002               	movlw	2
  2162     0C96  1683               	bsf	3,5	;RP0=1, select bank1
  2163     0C97  1303               	bcf	3,6	;RP1=0, select bank1
  2164     0C98  0089               	movwf	9	;volatile
  2165     0C99                     l3164:
  2166                           
  2167                           ;ADC_Library.c: 62:         ADCON0bits.CHS = 0b0110;
  2168     0C99  1283               	bcf	3,5	;RP0=0, select bank0
  2169     0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  2170     0C9B  081F               	movf	31,w	;volatile
  2171     0C9C  39C3               	andlw	-61
  2172     0C9D  3818               	iorlw	24
  2173     0C9E  009F               	movwf	31	;volatile
  2174                           
  2175                           ;ADC_Library.c: 63:         break;
  2176     0C9F  2CD4               	goto	l3176
  2177     0CA0                     l3166:
  2178                           
  2179                           ;ADC_Library.c: 66:         ANSEL = channel;
  2180     0CA0  3080               	movlw	128
  2181     0CA1  1683               	bsf	3,5	;RP0=1, select bank3
  2182     0CA2  1703               	bsf	3,6	;RP1=1, select bank3
  2183     0CA3  0088               	movwf	8	;volatile
  2184                           
  2185                           ;ADC_Library.c: 67:         TRISE = 0b100;
  2186     0CA4  3004               	movlw	4
  2187     0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  2188     0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  2189     0CA7  0089               	movwf	9	;volatile
  2190     0CA8                     l3168:
  2191                           
  2192                           ;ADC_Library.c: 68:         ADCON0bits.CHS = 0b0111;
  2193     0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  2194     0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  2195     0CAA  081F               	movf	31,w	;volatile
  2196     0CAB  39C3               	andlw	-61
  2197     0CAC  381C               	iorlw	28
  2198     0CAD  009F               	movwf	31	;volatile
  2199                           
  2200                           ;ADC_Library.c: 69:         break;
  2201     0CAE  2CD4               	goto	l3176
  2202     0CAF                     l3170:
  2203                           
  2204                           ;ADC_Library.c: 71:         ANSEL = 0b00000000;
  2205     0CAF  1683               	bsf	3,5	;RP0=1, select bank3
  2206     0CB0  1703               	bsf	3,6	;RP1=1, select bank3
  2207     0CB1  0188               	clrf	8	;volatile
  2208                           
  2209                           ;ADC_Library.c: 73:         break;
  2210     0CB2  2CD4               	goto	l3176
  2211     0CB3                     l3174:
  2212                           
  2213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 1, Range of values is 0 to 0
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            4     3 (average)
  2219                           ; direct_byte           11     8 (fixed)
  2220                           ; jumptable            260     6 (fixed)
  2221                           ;	Chosen strategy is simple_byte
  2222     0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  2223     0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  2224     0CB5  0833               	movf	adc_init@channel+1,w
  2225     0CB6  3A00               	xorlw	0	; case 0
  2226     0CB7  1903               	skipnz
  2227     0CB8  2CBA               	goto	l4054
  2228     0CB9  2CAF               	goto	l3170
  2229     0CBA                     l4054:
  2230                           
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 8, Range of values is 0 to 7
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte           25    13 (average)
  2236                           ; direct_byte           32     8 (fixed)
  2237                           ; jumptable            260     6 (fixed)
  2238                           ;	Chosen strategy is simple_byte
  2239     0CBA  0832               	movf	adc_init@channel,w
  2240     0CBB  3A00               	xorlw	0	; case 0
  2241     0CBC  1903               	skipnz
  2242     0CBD  2C39               	goto	l3138
  2243     0CBE  3A01               	xorlw	1	; case 1
  2244     0CBF  1903               	skipnz
  2245     0CC0  2C46               	goto	l3142
  2246     0CC1  3A03               	xorlw	3	; case 2
  2247     0CC2  1903               	skipnz
  2248     0CC3  2C55               	goto	l3146
  2249     0CC4  3A01               	xorlw	1	; case 3
  2250     0CC5  1903               	skipnz
  2251     0CC6  2C64               	goto	l3150
  2252     0CC7  3A07               	xorlw	7	; case 4
  2253     0CC8  1903               	skipnz
  2254     0CC9  2C73               	goto	l3154
  2255     0CCA  3A01               	xorlw	1	; case 5
  2256     0CCB  1903               	skipnz
  2257     0CCC  2C82               	goto	l3158
  2258     0CCD  3A03               	xorlw	3	; case 6
  2259     0CCE  1903               	skipnz
  2260     0CCF  2C91               	goto	l3162
  2261     0CD0  3A01               	xorlw	1	; case 7
  2262     0CD1  1903               	skipnz
  2263     0CD2  2CA0               	goto	l3166
  2264     0CD3  2CAF               	goto	l3170
  2265     0CD4                     l3176:
  2266                           
  2267                           ;ADC_Library.c: 77:     ADCON0bits.ADCS = 0b10;
  2268     0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  2269     0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  2270     0CD6  081F               	movf	31,w	;volatile
  2271     0CD7  393F               	andlw	-193
  2272     0CD8  3880               	iorlw	128
  2273     0CD9  009F               	movwf	31	;volatile
  2274     0CDA                     l3178:
  2275                           
  2276                           ;ADC_Library.c: 78:     ADCON1bits.ADFM = 0;
  2277     0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  2278     0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  2279     0CDC  139F               	bcf	31,7	;volatile
  2280     0CDD                     l3180:
  2281                           
  2282                           ;ADC_Library.c: 79:     ADCON1bits.VCFG0 = 0;
  2283     0CDD  121F               	bcf	31,4	;volatile
  2284     0CDE                     l3182:
  2285                           
  2286                           ;ADC_Library.c: 80:     ADCON1bits.VCFG1 = 0;
  2287     0CDE  129F               	bcf	31,5	;volatile
  2288     0CDF                     l3184:
  2289                           
  2290                           ;ADC_Library.c: 81:     ADCON0bits.ADON = 1;
  2291     0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  2292     0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  2293     0CE1  141F               	bsf	31,0	;volatile
  2294     0CE2                     l3186:
  2295                           
  2296                           ;ADC_Library.c: 82:     ADIF = 0;
  2297     0CE2  130C               	bcf	12,6	;volatile
  2298     0CE3                     l3188:
  2299                           
  2300                           ;ADC_Library.c: 83:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2301     0CE3  300D               	movlw	13
  2302     0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  2304     0CE6  00B5               	movwf	??_adc_init+1
  2305     0CE7  30FB               	movlw	251
  2306     0CE8  00B4               	movwf	??_adc_init
  2307     0CE9                     u5827:
  2308     0CE9  0BB4               	decfsz	??_adc_init,f
  2309     0CEA  2CE9               	goto	u5827
  2310     0CEB  0BB5               	decfsz	??_adc_init+1,f
  2311     0CEC  2CE9               	goto	u5827
  2312     0CED                     l34:
  2313     0CED  0008               	return
  2314     0CEE                     __end_of_adc_init:
  2315                           
  2316                           	psect	text4
  2317     0B77                     __ptext4:	
  2318 ;; *************** function ___xxtofl *****************
  2319 ;; Defined at:
  2320 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  sign            1    wreg     unsigned char 
  2323 ;;  val             4   18[BANK0 ] long 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  sign            1   26[BANK0 ] unsigned char 
  2326 ;;  arg             4   28[BANK0 ] unsigned long 
  2327 ;;  exp             1   27[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  4   18[BANK0 ] unsigned char 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       4       0       0       0
  2338 ;;      Locals:         0       6       0       0       0
  2339 ;;      Temps:          0       4       0       0       0
  2340 ;;      Totals:         0      14       0       0       0
  2341 ;;Total ram usage:       14 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 3
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     0B77                     ___xxtofl:	
  2352                           ;psect for function ___xxtofl
  2353                           
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2357                           ;___xxtofl@sign stored from wreg
  2358     0B77  1283               	bcf	3,5	;RP0=0, select bank0
  2359     0B78  1303               	bcf	3,6	;RP1=0, select bank0
  2360     0B79  00BA               	movwf	___xxtofl@sign
  2361     0B7A                     l3338:
  2362     0B7A  083A               	movf	___xxtofl@sign,w
  2363     0B7B  1903               	btfsc	3,2
  2364     0B7C  2B7E               	goto	u4391
  2365     0B7D  2B7F               	goto	u4390
  2366     0B7E                     u4391:
  2367     0B7E  2B93               	goto	l3344
  2368     0B7F                     u4390:
  2369     0B7F                     l3340:
  2370     0B7F  1FB5               	btfss	___xxtofl@val+3,7
  2371     0B80  2B82               	goto	u4401
  2372     0B81  2B83               	goto	u4400
  2373     0B82                     u4401:
  2374     0B82  2B93               	goto	l3344
  2375     0B83                     u4400:
  2376     0B83                     l3342:
  2377     0B83  0932               	comf	___xxtofl@val,w
  2378     0B84  00BC               	movwf	___xxtofl@arg
  2379     0B85  0933               	comf	___xxtofl@val+1,w
  2380     0B86  00BD               	movwf	___xxtofl@arg+1
  2381     0B87  0934               	comf	___xxtofl@val+2,w
  2382     0B88  00BE               	movwf	___xxtofl@arg+2
  2383     0B89  0935               	comf	___xxtofl@val+3,w
  2384     0B8A  00BF               	movwf	___xxtofl@arg+3
  2385     0B8B  0ABC               	incf	___xxtofl@arg,f
  2386     0B8C  1903               	skipnz
  2387     0B8D  0ABD               	incf	___xxtofl@arg+1,f
  2388     0B8E  1903               	skipnz
  2389     0B8F  0ABE               	incf	___xxtofl@arg+2,f
  2390     0B90  1903               	skipnz
  2391     0B91  0ABF               	incf	___xxtofl@arg+3,f
  2392     0B92  2B9B               	goto	l931
  2393     0B93                     l3344:
  2394     0B93  0835               	movf	___xxtofl@val+3,w
  2395     0B94  00BF               	movwf	___xxtofl@arg+3
  2396     0B95  0834               	movf	___xxtofl@val+2,w
  2397     0B96  00BE               	movwf	___xxtofl@arg+2
  2398     0B97  0833               	movf	___xxtofl@val+1,w
  2399     0B98  00BD               	movwf	___xxtofl@arg+1
  2400     0B99  0832               	movf	___xxtofl@val,w
  2401     0B9A  00BC               	movwf	___xxtofl@arg
  2402     0B9B                     l931:
  2403     0B9B  0835               	movf	___xxtofl@val+3,w
  2404     0B9C  0434               	iorwf	___xxtofl@val+2,w
  2405     0B9D  0433               	iorwf	___xxtofl@val+1,w
  2406     0B9E  0432               	iorwf	___xxtofl@val,w
  2407     0B9F  1D03               	skipz
  2408     0BA0  2BA2               	goto	u4411
  2409     0BA1  2BA3               	goto	u4410
  2410     0BA2                     u4411:
  2411     0BA2  2BAC               	goto	l3350
  2412     0BA3                     u4410:
  2413     0BA3                     l3346:
  2414     0BA3  3000               	movlw	0
  2415     0BA4  00B5               	movwf	?___xxtofl+3
  2416     0BA5  3000               	movlw	0
  2417     0BA6  00B4               	movwf	?___xxtofl+2
  2418     0BA7  3000               	movlw	0
  2419     0BA8  00B3               	movwf	?___xxtofl+1
  2420     0BA9  3000               	movlw	0
  2421     0BAA  00B2               	movwf	?___xxtofl
  2422     0BAB  2C30               	goto	l933
  2423     0BAC                     l3350:
  2424     0BAC  3096               	movlw	150
  2425     0BAD  00BB               	movwf	___xxtofl@exp
  2426     0BAE  2BBC               	goto	l3354
  2427     0BAF                     l3352:
  2428     0BAF  3001               	movlw	1
  2429     0BB0  00B6               	movwf	??___xxtofl
  2430     0BB1  0836               	movf	??___xxtofl,w
  2431     0BB2  07BB               	addwf	___xxtofl@exp,f
  2432     0BB3  3001               	movlw	1
  2433     0BB4                     u4425:
  2434     0BB4  1003               	clrc
  2435     0BB5  0CBF               	rrf	___xxtofl@arg+3,f
  2436     0BB6  0CBE               	rrf	___xxtofl@arg+2,f
  2437     0BB7  0CBD               	rrf	___xxtofl@arg+1,f
  2438     0BB8  0CBC               	rrf	___xxtofl@arg,f
  2439     0BB9  3EFF               	addlw	-1
  2440     0BBA  1D03               	skipz
  2441     0BBB  2BB4               	goto	u4425
  2442     0BBC                     l3354:
  2443     0BBC  30FE               	movlw	254
  2444     0BBD  053F               	andwf	___xxtofl@arg+3,w
  2445     0BBE  1D03               	btfss	3,2
  2446     0BBF  2BC1               	goto	u4431
  2447     0BC0  2BC2               	goto	u4430
  2448     0BC1                     u4431:
  2449     0BC1  2BAF               	goto	l3352
  2450     0BC2                     u4430:
  2451     0BC2  2BDE               	goto	l937
  2452     0BC3                     l3356:
  2453     0BC3  3001               	movlw	1
  2454     0BC4  00B6               	movwf	??___xxtofl
  2455     0BC5  0836               	movf	??___xxtofl,w
  2456     0BC6  07BB               	addwf	___xxtofl@exp,f
  2457     0BC7                     l3358:
  2458     0BC7  3001               	movlw	1
  2459     0BC8  07BC               	addwf	___xxtofl@arg,f
  2460     0BC9  3000               	movlw	0
  2461     0BCA  1803               	skipnc
  2462     0BCB  3001               	movlw	1
  2463     0BCC  07BD               	addwf	___xxtofl@arg+1,f
  2464     0BCD  3000               	movlw	0
  2465     0BCE  1803               	skipnc
  2466     0BCF  3001               	movlw	1
  2467     0BD0  07BE               	addwf	___xxtofl@arg+2,f
  2468     0BD1  3000               	movlw	0
  2469     0BD2  1803               	skipnc
  2470     0BD3  3001               	movlw	1
  2471     0BD4  07BF               	addwf	___xxtofl@arg+3,f
  2472     0BD5                     l3360:
  2473     0BD5  3001               	movlw	1
  2474     0BD6                     u4445:
  2475     0BD6  1003               	clrc
  2476     0BD7  0CBF               	rrf	___xxtofl@arg+3,f
  2477     0BD8  0CBE               	rrf	___xxtofl@arg+2,f
  2478     0BD9  0CBD               	rrf	___xxtofl@arg+1,f
  2479     0BDA  0CBC               	rrf	___xxtofl@arg,f
  2480     0BDB  3EFF               	addlw	-1
  2481     0BDC  1D03               	skipz
  2482     0BDD  2BD6               	goto	u4445
  2483     0BDE                     l937:
  2484     0BDE  30FF               	movlw	255
  2485     0BDF  053F               	andwf	___xxtofl@arg+3,w
  2486     0BE0  1D03               	btfss	3,2
  2487     0BE1  2BE3               	goto	u4451
  2488     0BE2  2BE4               	goto	u4450
  2489     0BE3                     u4451:
  2490     0BE3  2BC3               	goto	l3356
  2491     0BE4                     u4450:
  2492     0BE4  2BF0               	goto	l3364
  2493     0BE5                     l3362:
  2494     0BE5  3001               	movlw	1
  2495     0BE6  02BB               	subwf	___xxtofl@exp,f
  2496     0BE7  3001               	movlw	1
  2497     0BE8  00B6               	movwf	??___xxtofl
  2498     0BE9                     u4465:
  2499     0BE9  1003               	clrc
  2500     0BEA  0DBC               	rlf	___xxtofl@arg,f
  2501     0BEB  0DBD               	rlf	___xxtofl@arg+1,f
  2502     0BEC  0DBE               	rlf	___xxtofl@arg+2,f
  2503     0BED  0DBF               	rlf	___xxtofl@arg+3,f
  2504     0BEE  0BB6               	decfsz	??___xxtofl,f
  2505     0BEF  2BE9               	goto	u4465
  2506     0BF0                     l3364:
  2507     0BF0  1BBE               	btfsc	___xxtofl@arg+2,7
  2508     0BF1  2BF3               	goto	u4471
  2509     0BF2  2BF4               	goto	u4470
  2510     0BF3                     u4471:
  2511     0BF3  2BFA               	goto	l944
  2512     0BF4                     u4470:
  2513     0BF4                     l3366:
  2514     0BF4  3002               	movlw	2
  2515     0BF5  023B               	subwf	___xxtofl@exp,w
  2516     0BF6  1803               	skipnc
  2517     0BF7  2BF9               	goto	u4481
  2518     0BF8  2BFA               	goto	u4480
  2519     0BF9                     u4481:
  2520     0BF9  2BE5               	goto	l3362
  2521     0BFA                     u4480:
  2522     0BFA                     l944:
  2523     0BFA  183B               	btfsc	___xxtofl@exp,0
  2524     0BFB  2BFD               	goto	u4491
  2525     0BFC  2BFE               	goto	u4490
  2526     0BFD                     u4491:
  2527     0BFD  2C06               	goto	l945
  2528     0BFE                     u4490:
  2529     0BFE                     l3368:
  2530     0BFE  30FF               	movlw	255
  2531     0BFF  05BC               	andwf	___xxtofl@arg,f
  2532     0C00  30FF               	movlw	255
  2533     0C01  05BD               	andwf	___xxtofl@arg+1,f
  2534     0C02  307F               	movlw	127
  2535     0C03  05BE               	andwf	___xxtofl@arg+2,f
  2536     0C04  30FF               	movlw	255
  2537     0C05  05BF               	andwf	___xxtofl@arg+3,f
  2538     0C06                     l945:
  2539     0C06  1003               	clrc
  2540     0C07  0CBB               	rrf	___xxtofl@exp,f
  2541     0C08                     l3370:
  2542     0C08  083B               	movf	___xxtofl@exp,w
  2543     0C09  00B6               	movwf	??___xxtofl
  2544     0C0A  01B7               	clrf	??___xxtofl+1
  2545     0C0B  01B8               	clrf	??___xxtofl+2
  2546     0C0C  01B9               	clrf	??___xxtofl+3
  2547     0C0D  3018               	movlw	24
  2548     0C0E                     u4505:
  2549     0C0E  1003               	clrc
  2550     0C0F  0DB6               	rlf	??___xxtofl,f
  2551     0C10  0DB7               	rlf	??___xxtofl+1,f
  2552     0C11  0DB8               	rlf	??___xxtofl+2,f
  2553     0C12  0DB9               	rlf	??___xxtofl+3,f
  2554     0C13                     u4500:
  2555     0C13  3EFF               	addlw	-1
  2556     0C14  1D03               	skipz
  2557     0C15  2C0E               	goto	u4505
  2558     0C16  0836               	movf	??___xxtofl,w
  2559     0C17  04BC               	iorwf	___xxtofl@arg,f
  2560     0C18  0837               	movf	??___xxtofl+1,w
  2561     0C19  04BD               	iorwf	___xxtofl@arg+1,f
  2562     0C1A  0838               	movf	??___xxtofl+2,w
  2563     0C1B  04BE               	iorwf	___xxtofl@arg+2,f
  2564     0C1C  0839               	movf	??___xxtofl+3,w
  2565     0C1D  04BF               	iorwf	___xxtofl@arg+3,f
  2566     0C1E                     l3372:
  2567     0C1E  083A               	movf	___xxtofl@sign,w
  2568     0C1F  1903               	btfsc	3,2
  2569     0C20  2C22               	goto	u4511
  2570     0C21  2C23               	goto	u4510
  2571     0C22                     u4511:
  2572     0C22  2C28               	goto	l3378
  2573     0C23                     u4510:
  2574     0C23                     l3374:
  2575     0C23  1FB5               	btfss	___xxtofl@val+3,7
  2576     0C24  2C26               	goto	u4521
  2577     0C25  2C27               	goto	u4520
  2578     0C26                     u4521:
  2579     0C26  2C28               	goto	l3378
  2580     0C27                     u4520:
  2581     0C27                     l3376:
  2582     0C27  17BF               	bsf	___xxtofl@arg+3,7
  2583     0C28                     l3378:
  2584     0C28  083F               	movf	___xxtofl@arg+3,w
  2585     0C29  00B5               	movwf	?___xxtofl+3
  2586     0C2A  083E               	movf	___xxtofl@arg+2,w
  2587     0C2B  00B4               	movwf	?___xxtofl+2
  2588     0C2C  083D               	movf	___xxtofl@arg+1,w
  2589     0C2D  00B3               	movwf	?___xxtofl+1
  2590     0C2E  083C               	movf	___xxtofl@arg,w
  2591     0C2F  00B2               	movwf	?___xxtofl
  2592     0C30                     l933:
  2593     0C30  0008               	return
  2594     0C31                     __end_of___xxtofl:
  2595                           
  2596                           	psect	text5
  2597     0A4C                     __ptext5:	
  2598 ;; *************** function ___fltol *****************
  2599 ;; Defined at:
  2600 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  f1              4   72[BANK1 ] unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  exp1            1   44[BANK0 ] unsigned char 
  2605 ;;  sign1           1   43[BANK0 ] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  4   72[BANK1 ] long 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       4       0       0
  2616 ;;      Locals:         0       2       0       0       0
  2617 ;;      Temps:          0       0       4       0       0
  2618 ;;      Totals:         0       2       8       0       0
  2619 ;;Total ram usage:       10 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 3
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629     0A4C                     ___fltol:	
  2630                           ;psect for function ___fltol
  2631                           
  2632     0A4C                     l3976:	
  2633                           ;incstack = 0
  2634                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2635                           
  2636     0A4C  1003               	clrc
  2637     0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  2638     0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  2639     0A4F  0D6A               	rlf	(___fltol@f1+2)^(0+128),w
  2640     0A50  0D6B               	rlf	(___fltol@f1+3)^(0+128),w
  2641     0A51  1283               	bcf	3,5	;RP0=0, select bank0
  2642     0A52  1303               	bcf	3,6	;RP1=0, select bank0
  2643     0A53  00CC               	movwf	___fltol@exp1
  2644     0A54  084C               	movf	___fltol@exp1,w
  2645     0A55  1D03               	btfss	3,2
  2646     0A56  2A58               	goto	u5701
  2647     0A57  2A59               	goto	u5700
  2648     0A58                     u5701:
  2649     0A58  2A64               	goto	l3982
  2650     0A59                     u5700:
  2651     0A59                     l3978:
  2652     0A59  3000               	movlw	0
  2653     0A5A  1683               	bsf	3,5	;RP0=1, select bank1
  2654     0A5B  1303               	bcf	3,6	;RP1=0, select bank1
  2655     0A5C  00EB               	movwf	(?___fltol+3)^(0+128)
  2656     0A5D  3000               	movlw	0
  2657     0A5E  00EA               	movwf	(?___fltol+2)^(0+128)
  2658     0A5F  3000               	movlw	0
  2659     0A60  00E9               	movwf	(?___fltol+1)^(0+128)
  2660     0A61  3000               	movlw	0
  2661     0A62  00E8               	movwf	?___fltol^(0+128)
  2662     0A63  2AD9               	goto	l684
  2663     0A64                     l3982:
  2664     0A64  1683               	bsf	3,5	;RP0=1, select bank1
  2665     0A65  1303               	bcf	3,6	;RP1=0, select bank1
  2666     0A66  0868               	movf	___fltol@f1^(0+128),w
  2667     0A67  00EC               	movwf	??___fltol^(0+128)
  2668     0A68  0869               	movf	(___fltol@f1+1)^(0+128),w
  2669     0A69  00ED               	movwf	(??___fltol^(0+128)+1)
  2670     0A6A  086A               	movf	(___fltol@f1+2)^(0+128),w
  2671     0A6B  00EE               	movwf	(??___fltol^(0+128)+2)
  2672     0A6C  086B               	movf	(___fltol@f1+3)^(0+128),w
  2673     0A6D  00EF               	movwf	(??___fltol^(0+128)+3)
  2674     0A6E  301F               	movlw	31
  2675     0A6F                     u5715:
  2676     0A6F  1003               	clrc
  2677     0A70  0CEF               	rrf	(??___fltol^(0+128)+3),f
  2678     0A71  0CEE               	rrf	(??___fltol^(0+128)+2),f
  2679     0A72  0CED               	rrf	(??___fltol^(0+128)+1),f
  2680     0A73  0CEC               	rrf	??___fltol^(0+128),f
  2681     0A74                     u5710:
  2682     0A74  3EFF               	addlw	-1
  2683     0A75  1D03               	skipz
  2684     0A76  2A6F               	goto	u5715
  2685     0A77  086C               	movf	??___fltol^(0+128),w
  2686     0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2687     0A79  1303               	bcf	3,6	;RP1=0, select bank0
  2688     0A7A  00CB               	movwf	___fltol@sign1
  2689     0A7B                     l3984:
  2690     0A7B  1683               	bsf	3,5	;RP0=1, select bank1
  2691     0A7C  1303               	bcf	3,6	;RP1=0, select bank1
  2692     0A7D  17EA               	bsf	(___fltol@f1^(0+128)+2),7
  2693     0A7E                     l3986:
  2694     0A7E  30FF               	movlw	255
  2695     0A7F  05E8               	andwf	___fltol@f1^(0+128),f
  2696     0A80  30FF               	movlw	255
  2697     0A81  05E9               	andwf	(___fltol@f1+1)^(0+128),f
  2698     0A82  30FF               	movlw	255
  2699     0A83  05EA               	andwf	(___fltol@f1+2)^(0+128),f
  2700     0A84  3000               	movlw	0
  2701     0A85  05EB               	andwf	(___fltol@f1+3)^(0+128),f
  2702     0A86                     l3988:
  2703     0A86  3096               	movlw	150
  2704     0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2705     0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2706     0A89  02CC               	subwf	___fltol@exp1,f
  2707     0A8A                     l3990:
  2708     0A8A  1FCC               	btfss	___fltol@exp1,7
  2709     0A8B  2A8D               	goto	u5721
  2710     0A8C  2A8E               	goto	u5720
  2711     0A8D                     u5721:
  2712     0A8D  2AAC               	goto	l4000
  2713     0A8E                     u5720:
  2714     0A8E                     l3992:
  2715     0A8E  084C               	movf	___fltol@exp1,w
  2716     0A8F  3A80               	xorlw	128
  2717     0A90  3E97               	addlw	151
  2718     0A91  1803               	skipnc
  2719     0A92  2A94               	goto	u5731
  2720     0A93  2A95               	goto	u5730
  2721     0A94                     u5731:
  2722     0A94  2A96               	goto	l3998
  2723     0A95                     u5730:
  2724     0A95  2A59               	goto	l3978
  2725     0A96                     l3998:
  2726     0A96  3001               	movlw	1
  2727     0A97                     u5745:
  2728     0A97  1003               	clrc
  2729     0A98  1683               	bsf	3,5	;RP0=1, select bank1
  2730     0A99  1303               	bcf	3,6	;RP1=0, select bank1
  2731     0A9A  0CEB               	rrf	(___fltol@f1+3)^(0+128),f
  2732     0A9B  0CEA               	rrf	(___fltol@f1+2)^(0+128),f
  2733     0A9C  0CE9               	rrf	(___fltol@f1+1)^(0+128),f
  2734     0A9D  0CE8               	rrf	___fltol@f1^(0+128),f
  2735     0A9E  3EFF               	addlw	-1
  2736     0A9F  1D03               	skipz
  2737     0AA0  2A97               	goto	u5745
  2738     0AA1  3001               	movlw	1
  2739     0AA2  00EC               	movwf	??___fltol^(0+128)
  2740     0AA3  086C               	movf	??___fltol^(0+128),w
  2741     0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  2742     0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  2743     0AA6  07CC               	addwf	___fltol@exp1,f
  2744     0AA7  1D03               	btfss	3,2
  2745     0AA8  2AAA               	goto	u5751
  2746     0AA9  2AAB               	goto	u5750
  2747     0AAA                     u5751:
  2748     0AAA  2A96               	goto	l3998
  2749     0AAB                     u5750:
  2750     0AAB  2AC7               	goto	l4008
  2751     0AAC                     l4000:
  2752     0AAC  3020               	movlw	32
  2753     0AAD  024C               	subwf	___fltol@exp1,w
  2754     0AAE  1C03               	skipc
  2755     0AAF  2AB1               	goto	u5761
  2756     0AB0  2AB2               	goto	u5760
  2757     0AB1                     u5761:
  2758     0AB1  2AC2               	goto	l691
  2759     0AB2                     u5760:
  2760     0AB2  2A59               	goto	l3978
  2761     0AB3                     l4006:
  2762     0AB3  3001               	movlw	1
  2763     0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  2764     0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  2765     0AB6  00EC               	movwf	??___fltol^(0+128)
  2766     0AB7                     u5775:
  2767     0AB7  1003               	clrc
  2768     0AB8  0DE8               	rlf	___fltol@f1^(0+128),f
  2769     0AB9  0DE9               	rlf	(___fltol@f1+1)^(0+128),f
  2770     0ABA  0DEA               	rlf	(___fltol@f1+2)^(0+128),f
  2771     0ABB  0DEB               	rlf	(___fltol@f1+3)^(0+128),f
  2772     0ABC  0BEC               	decfsz	??___fltol^(0+128),f
  2773     0ABD  2AB7               	goto	u5775
  2774     0ABE  3001               	movlw	1
  2775     0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  2776     0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  2777     0AC1  02CC               	subwf	___fltol@exp1,f
  2778     0AC2                     l691:
  2779     0AC2  084C               	movf	___fltol@exp1,w
  2780     0AC3  1D03               	btfss	3,2
  2781     0AC4  2AC6               	goto	u5781
  2782     0AC5  2AC7               	goto	u5780
  2783     0AC6                     u5781:
  2784     0AC6  2AB3               	goto	l4006
  2785     0AC7                     u5780:
  2786     0AC7                     l4008:
  2787     0AC7  084B               	movf	___fltol@sign1,w
  2788     0AC8  1903               	btfsc	3,2
  2789     0AC9  2ACB               	goto	u5791
  2790     0ACA  2ACC               	goto	u5790
  2791     0ACB                     u5791:
  2792     0ACB  2AD9               	goto	l694
  2793     0ACC                     u5790:
  2794     0ACC                     l4010:
  2795     0ACC  1683               	bsf	3,5	;RP0=1, select bank1
  2796     0ACD  1303               	bcf	3,6	;RP1=0, select bank1
  2797     0ACE  09E8               	comf	___fltol@f1^(0+128),f
  2798     0ACF  09E9               	comf	(___fltol@f1+1)^(0+128),f
  2799     0AD0  09EA               	comf	(___fltol@f1+2)^(0+128),f
  2800     0AD1  09EB               	comf	(___fltol@f1+3)^(0+128),f
  2801     0AD2  0AE8               	incf	___fltol@f1^(0+128),f
  2802     0AD3  1903               	skipnz
  2803     0AD4  0AE9               	incf	(___fltol@f1+1)^(0+128),f
  2804     0AD5  1903               	skipnz
  2805     0AD6  0AEA               	incf	(___fltol@f1+2)^(0+128),f
  2806     0AD7  1903               	skipnz
  2807     0AD8  0AEB               	incf	(___fltol@f1+3)^(0+128),f
  2808     0AD9                     l694:
  2809     0AD9                     l684:
  2810     0AD9  0008               	return
  2811     0ADA                     __end_of___fltol:
  2812                           
  2813                           	psect	text6
  2814     16E3                     __ptext6:	
  2815 ;; *************** function _UART_RX_config *****************
  2816 ;; Defined at:
  2817 ;;		line 9 in file "USART_Library.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  baudrate        2   33[BANK0 ] unsigned int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  baud_value      2   39[BANK0 ] unsigned int 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         0       2       0       0       0
  2832 ;;      Locals:         0       6       0       0       0
  2833 ;;      Temps:          0       0       0       0       0
  2834 ;;      Totals:         0       8       0       0       0
  2835 ;;Total ram usage:        8 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 4
  2838 ;; This function calls:
  2839 ;;		___aldiv
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845     16E3                     _UART_RX_config:	
  2846                           ;psect for function _UART_RX_config
  2847                           
  2848     16E3                     l3240:	
  2849                           ;incstack = 0
  2850                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0+pclath+cstack]
  2851                           
  2852                           
  2853                           ;USART_Library.c: 11:     uint16_t baud_value = ((8000000 / baudrate)/64)-1;
  2854     16E3  1283               	bcf	3,5	;RP0=0, select bank0
  2855     16E4  1303               	bcf	3,6	;RP1=0, select bank0
  2856     16E5  0841               	movf	UART_RX_config@baudrate,w
  2857     16E6  00B2               	movwf	___aldiv@divisor
  2858     16E7  0842               	movf	UART_RX_config@baudrate+1,w
  2859     16E8  00B3               	movwf	___aldiv@divisor+1
  2860     16E9  01B4               	clrf	___aldiv@divisor+2
  2861     16EA  01B5               	clrf	___aldiv@divisor+3
  2862     16EB  3000               	movlw	0
  2863     16EC  00B9               	movwf	___aldiv@dividend+3
  2864     16ED  307A               	movlw	122
  2865     16EE  00B8               	movwf	___aldiv@dividend+2
  2866     16EF  3012               	movlw	18
  2867     16F0  00B7               	movwf	___aldiv@dividend+1
  2868     16F1  3000               	movlw	0
  2869     16F2  00B6               	movwf	___aldiv@dividend
  2870     16F3  120A  158A  22DA  160A  118A  	fcall	___aldiv
  2871     16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2872     16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2873     16FA  0835               	movf	?___aldiv+3,w
  2874     16FB  00C6               	movwf	_UART_RX_config$1555+3
  2875     16FC  0834               	movf	?___aldiv+2,w
  2876     16FD  00C5               	movwf	_UART_RX_config$1555+2
  2877     16FE  0833               	movf	?___aldiv+1,w
  2878     16FF  00C4               	movwf	_UART_RX_config$1555+1
  2879     1700  0832               	movf	?___aldiv,w
  2880     1701  00C3               	movwf	_UART_RX_config$1555
  2881                           
  2882                           ;USART_Library.c: 11:     uint16_t baud_value = ((8000000 / baudrate)/64)-1;
  2883     1702  3000               	movlw	0
  2884     1703  00B5               	movwf	___aldiv@divisor+3
  2885     1704  3000               	movlw	0
  2886     1705  00B4               	movwf	___aldiv@divisor+2
  2887     1706  3000               	movlw	0
  2888     1707  00B3               	movwf	___aldiv@divisor+1
  2889     1708  3040               	movlw	64
  2890     1709  00B2               	movwf	___aldiv@divisor
  2891     170A  0846               	movf	_UART_RX_config$1555+3,w
  2892     170B  00B9               	movwf	___aldiv@dividend+3
  2893     170C  0845               	movf	_UART_RX_config$1555+2,w
  2894     170D  00B8               	movwf	___aldiv@dividend+2
  2895     170E  0844               	movf	_UART_RX_config$1555+1,w
  2896     170F  00B7               	movwf	___aldiv@dividend+1
  2897     1710  0843               	movf	_UART_RX_config$1555,w
  2898     1711  00B6               	movwf	___aldiv@dividend
  2899     1712  120A  158A  22DA  160A  118A  	fcall	___aldiv
  2900     1717  1283               	bcf	3,5	;RP0=0, select bank0
  2901     1718  1303               	bcf	3,6	;RP1=0, select bank0
  2902     1719  0832               	movf	?___aldiv,w
  2903     171A  3EFF               	addlw	255
  2904     171B  00C7               	movwf	UART_RX_config@baud_value
  2905     171C  0833               	movf	?___aldiv+1,w
  2906     171D  1803               	skipnc
  2907     171E  3E01               	addlw	1
  2908     171F  3EFF               	addlw	255
  2909     1720  00C8               	movwf	UART_RX_config@baud_value+1
  2910     1721                     l3242:
  2911                           
  2912                           ;USART_Library.c: 16:     SPBRG = baud_value & 0xFF;
  2913     1721  0847               	movf	UART_RX_config@baud_value,w
  2914     1722  1683               	bsf	3,5	;RP0=1, select bank1
  2915     1723  1303               	bcf	3,6	;RP1=0, select bank1
  2916     1724  0099               	movwf	25	;volatile
  2917     1725                     l3244:
  2918                           
  2919                           ;USART_Library.c: 17:     SPBRGH = (baud_value >> 8) & 0xFF;
  2920     1725  1283               	bcf	3,5	;RP0=0, select bank0
  2921     1726  1303               	bcf	3,6	;RP1=0, select bank0
  2922     1727  0848               	movf	UART_RX_config@baud_value+1,w
  2923     1728  1683               	bsf	3,5	;RP0=1, select bank1
  2924     1729  1303               	bcf	3,6	;RP1=0, select bank1
  2925     172A  009A               	movwf	26	;volatile
  2926     172B                     l3246:
  2927                           
  2928                           ;USART_Library.c: 20:     TXSTAbits.BRGH = 0;
  2929     172B  1118               	bcf	24,2	;volatile
  2930     172C                     l3248:
  2931                           
  2932                           ;USART_Library.c: 21:     BAUDCTLbits.BRG16 = 0;
  2933     172C  1683               	bsf	3,5	;RP0=1, select bank3
  2934     172D  1703               	bsf	3,6	;RP1=1, select bank3
  2935     172E  1187               	bcf	7,3	;volatile
  2936     172F                     l3250:
  2937                           
  2938                           ;USART_Library.c: 22:     TXSTAbits.SYNC = 0;
  2939     172F  1683               	bsf	3,5	;RP0=1, select bank1
  2940     1730  1303               	bcf	3,6	;RP1=0, select bank1
  2941     1731  1218               	bcf	24,4	;volatile
  2942     1732                     l3252:
  2943                           
  2944                           ;USART_Library.c: 25:     RCSTAbits.SPEN = 1;
  2945     1732  1283               	bcf	3,5	;RP0=0, select bank0
  2946     1733  1303               	bcf	3,6	;RP1=0, select bank0
  2947     1734  1798               	bsf	24,7	;volatile
  2948     1735                     l3254:
  2949                           
  2950                           ;USART_Library.c: 26:     TXSTAbits.TXEN = 1;
  2951     1735  1683               	bsf	3,5	;RP0=1, select bank1
  2952     1736  1303               	bcf	3,6	;RP1=0, select bank1
  2953     1737  1698               	bsf	24,5	;volatile
  2954     1738                     l3256:
  2955                           
  2956                           ;USART_Library.c: 27:     RCSTAbits.CREN = 1;
  2957     1738  1283               	bcf	3,5	;RP0=0, select bank0
  2958     1739  1303               	bcf	3,6	;RP1=0, select bank0
  2959     173A  1618               	bsf	24,4	;volatile
  2960     173B                     l307:
  2961     173B  0008               	return
  2962     173C                     __end_of_UART_RX_config:
  2963                           
  2964                           	psect	text7
  2965     0ADA                     __ptext7:	
  2966 ;; *************** function ___aldiv *****************
  2967 ;; Defined at:
  2968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  divisor         4   18[BANK0 ] long 
  2971 ;;  dividend        4   22[BANK0 ] long 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  quotient        4   29[BANK0 ] long 
  2974 ;;  sign            1   28[BANK0 ] unsigned char 
  2975 ;;  counter         1   27[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  4   18[BANK0 ] long 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       8       0       0       0
  2986 ;;      Locals:         0       6       0       0       0
  2987 ;;      Temps:          0       1       0       0       0
  2988 ;;      Totals:         0      15       0       0       0
  2989 ;;Total ram usage:       15 bytes
  2990 ;; Hardware stack levels used: 1
  2991 ;; Hardware stack levels required when called: 3
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_UART_RX_config
  2996 ;;		_UART_TX_config
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000     0ADA                     ___aldiv:	
  3001                           ;psect for function ___aldiv
  3002                           
  3003     0ADA                     l2644:	
  3004                           ;incstack = 0
  3005                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3006                           
  3007     0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  3008     0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  3009     0ADC  01BC               	clrf	___aldiv@sign
  3010     0ADD                     l2646:
  3011     0ADD  1FB5               	btfss	___aldiv@divisor+3,7
  3012     0ADE  2AE0               	goto	u3081
  3013     0ADF  2AE1               	goto	u3080
  3014     0AE0                     u3081:
  3015     0AE0  2AEE               	goto	l563
  3016     0AE1                     u3080:
  3017     0AE1                     l2648:
  3018     0AE1  09B2               	comf	___aldiv@divisor,f
  3019     0AE2  09B3               	comf	___aldiv@divisor+1,f
  3020     0AE3  09B4               	comf	___aldiv@divisor+2,f
  3021     0AE4  09B5               	comf	___aldiv@divisor+3,f
  3022     0AE5  0AB2               	incf	___aldiv@divisor,f
  3023     0AE6  1903               	skipnz
  3024     0AE7  0AB3               	incf	___aldiv@divisor+1,f
  3025     0AE8  1903               	skipnz
  3026     0AE9  0AB4               	incf	___aldiv@divisor+2,f
  3027     0AEA  1903               	skipnz
  3028     0AEB  0AB5               	incf	___aldiv@divisor+3,f
  3029     0AEC  01BC               	clrf	___aldiv@sign
  3030     0AED  0ABC               	incf	___aldiv@sign,f
  3031     0AEE                     l563:
  3032     0AEE  1FB9               	btfss	___aldiv@dividend+3,7
  3033     0AEF  2AF1               	goto	u3091
  3034     0AF0  2AF2               	goto	u3090
  3035     0AF1                     u3091:
  3036     0AF1  2B01               	goto	l2654
  3037     0AF2                     u3090:
  3038     0AF2                     l2650:
  3039     0AF2  09B6               	comf	___aldiv@dividend,f
  3040     0AF3  09B7               	comf	___aldiv@dividend+1,f
  3041     0AF4  09B8               	comf	___aldiv@dividend+2,f
  3042     0AF5  09B9               	comf	___aldiv@dividend+3,f
  3043     0AF6  0AB6               	incf	___aldiv@dividend,f
  3044     0AF7  1903               	skipnz
  3045     0AF8  0AB7               	incf	___aldiv@dividend+1,f
  3046     0AF9  1903               	skipnz
  3047     0AFA  0AB8               	incf	___aldiv@dividend+2,f
  3048     0AFB  1903               	skipnz
  3049     0AFC  0AB9               	incf	___aldiv@dividend+3,f
  3050     0AFD                     l2652:
  3051     0AFD  3001               	movlw	1
  3052     0AFE  00BA               	movwf	??___aldiv
  3053     0AFF  083A               	movf	??___aldiv,w
  3054     0B00  06BC               	xorwf	___aldiv@sign,f
  3055     0B01                     l2654:
  3056     0B01  3000               	movlw	0
  3057     0B02  00C0               	movwf	___aldiv@quotient+3
  3058     0B03  3000               	movlw	0
  3059     0B04  00BF               	movwf	___aldiv@quotient+2
  3060     0B05  3000               	movlw	0
  3061     0B06  00BE               	movwf	___aldiv@quotient+1
  3062     0B07  3000               	movlw	0
  3063     0B08  00BD               	movwf	___aldiv@quotient
  3064     0B09                     l2656:
  3065     0B09  0835               	movf	___aldiv@divisor+3,w
  3066     0B0A  0434               	iorwf	___aldiv@divisor+2,w
  3067     0B0B  0433               	iorwf	___aldiv@divisor+1,w
  3068     0B0C  0432               	iorwf	___aldiv@divisor,w
  3069     0B0D  1903               	skipnz
  3070     0B0E  2B10               	goto	u3101
  3071     0B0F  2B11               	goto	u3100
  3072     0B10                     u3101:
  3073     0B10  2B5E               	goto	l2676
  3074     0B11                     u3100:
  3075     0B11                     l2658:
  3076     0B11  01BB               	clrf	___aldiv@counter
  3077     0B12  0ABB               	incf	___aldiv@counter,f
  3078     0B13  2B21               	goto	l2662
  3079     0B14                     l2660:
  3080     0B14  3001               	movlw	1
  3081     0B15  00BA               	movwf	??___aldiv
  3082     0B16                     u3115:
  3083     0B16  1003               	clrc
  3084     0B17  0DB2               	rlf	___aldiv@divisor,f
  3085     0B18  0DB3               	rlf	___aldiv@divisor+1,f
  3086     0B19  0DB4               	rlf	___aldiv@divisor+2,f
  3087     0B1A  0DB5               	rlf	___aldiv@divisor+3,f
  3088     0B1B  0BBA               	decfsz	??___aldiv,f
  3089     0B1C  2B16               	goto	u3115
  3090     0B1D  3001               	movlw	1
  3091     0B1E  00BA               	movwf	??___aldiv
  3092     0B1F  083A               	movf	??___aldiv,w
  3093     0B20  07BB               	addwf	___aldiv@counter,f
  3094     0B21                     l2662:
  3095     0B21  1FB5               	btfss	___aldiv@divisor+3,7
  3096     0B22  2B24               	goto	u3121
  3097     0B23  2B25               	goto	u3120
  3098     0B24                     u3121:
  3099     0B24  2B14               	goto	l2660
  3100     0B25                     u3120:
  3101     0B25                     l2664:
  3102     0B25  3001               	movlw	1
  3103     0B26  00BA               	movwf	??___aldiv
  3104     0B27                     u3135:
  3105     0B27  1003               	clrc
  3106     0B28  0DBD               	rlf	___aldiv@quotient,f
  3107     0B29  0DBE               	rlf	___aldiv@quotient+1,f
  3108     0B2A  0DBF               	rlf	___aldiv@quotient+2,f
  3109     0B2B  0DC0               	rlf	___aldiv@quotient+3,f
  3110     0B2C  0BBA               	decfsz	??___aldiv,f
  3111     0B2D  2B27               	goto	u3135
  3112     0B2E                     l2666:
  3113     0B2E  0835               	movf	___aldiv@divisor+3,w
  3114     0B2F  0239               	subwf	___aldiv@dividend+3,w
  3115     0B30  1D03               	skipz
  3116     0B31  2B3C               	goto	u3145
  3117     0B32  0834               	movf	___aldiv@divisor+2,w
  3118     0B33  0238               	subwf	___aldiv@dividend+2,w
  3119     0B34  1D03               	skipz
  3120     0B35  2B3C               	goto	u3145
  3121     0B36  0833               	movf	___aldiv@divisor+1,w
  3122     0B37  0237               	subwf	___aldiv@dividend+1,w
  3123     0B38  1D03               	skipz
  3124     0B39  2B3C               	goto	u3145
  3125     0B3A  0832               	movf	___aldiv@divisor,w
  3126     0B3B  0236               	subwf	___aldiv@dividend,w
  3127     0B3C                     u3145:
  3128     0B3C  1C03               	skipc
  3129     0B3D  2B3F               	goto	u3141
  3130     0B3E  2B40               	goto	u3140
  3131     0B3F                     u3141:
  3132     0B3F  2B4F               	goto	l2672
  3133     0B40                     u3140:
  3134     0B40                     l2668:
  3135     0B40  0832               	movf	___aldiv@divisor,w
  3136     0B41  02B6               	subwf	___aldiv@dividend,f
  3137     0B42  0833               	movf	___aldiv@divisor+1,w
  3138     0B43  1C03               	skipc
  3139     0B44  0F33               	incfsz	___aldiv@divisor+1,w
  3140     0B45  02B7               	subwf	___aldiv@dividend+1,f
  3141     0B46  0834               	movf	___aldiv@divisor+2,w
  3142     0B47  1C03               	skipc
  3143     0B48  0F34               	incfsz	___aldiv@divisor+2,w
  3144     0B49  02B8               	subwf	___aldiv@dividend+2,f
  3145     0B4A  0835               	movf	___aldiv@divisor+3,w
  3146     0B4B  1C03               	skipc
  3147     0B4C  0F35               	incfsz	___aldiv@divisor+3,w
  3148     0B4D  02B9               	subwf	___aldiv@dividend+3,f
  3149     0B4E                     l2670:
  3150     0B4E  143D               	bsf	___aldiv@quotient,0
  3151     0B4F                     l2672:
  3152     0B4F  3001               	movlw	1
  3153     0B50                     u3155:
  3154     0B50  1003               	clrc
  3155     0B51  0CB5               	rrf	___aldiv@divisor+3,f
  3156     0B52  0CB4               	rrf	___aldiv@divisor+2,f
  3157     0B53  0CB3               	rrf	___aldiv@divisor+1,f
  3158     0B54  0CB2               	rrf	___aldiv@divisor,f
  3159     0B55  3EFF               	addlw	-1
  3160     0B56  1D03               	skipz
  3161     0B57  2B50               	goto	u3155
  3162     0B58                     l2674:
  3163     0B58  3001               	movlw	1
  3164     0B59  02BB               	subwf	___aldiv@counter,f
  3165     0B5A  1D03               	btfss	3,2
  3166     0B5B  2B5D               	goto	u3161
  3167     0B5C  2B5E               	goto	u3160
  3168     0B5D                     u3161:
  3169     0B5D  2B25               	goto	l2664
  3170     0B5E                     u3160:
  3171     0B5E                     l2676:
  3172     0B5E  083C               	movf	___aldiv@sign,w
  3173     0B5F  1903               	btfsc	3,2
  3174     0B60  2B62               	goto	u3171
  3175     0B61  2B63               	goto	u3170
  3176     0B62                     u3171:
  3177     0B62  2B6E               	goto	l2680
  3178     0B63                     u3170:
  3179     0B63                     l2678:
  3180     0B63  09BD               	comf	___aldiv@quotient,f
  3181     0B64  09BE               	comf	___aldiv@quotient+1,f
  3182     0B65  09BF               	comf	___aldiv@quotient+2,f
  3183     0B66  09C0               	comf	___aldiv@quotient+3,f
  3184     0B67  0ABD               	incf	___aldiv@quotient,f
  3185     0B68  1903               	skipnz
  3186     0B69  0ABE               	incf	___aldiv@quotient+1,f
  3187     0B6A  1903               	skipnz
  3188     0B6B  0ABF               	incf	___aldiv@quotient+2,f
  3189     0B6C  1903               	skipnz
  3190     0B6D  0AC0               	incf	___aldiv@quotient+3,f
  3191     0B6E                     l2680:
  3192     0B6E  0840               	movf	___aldiv@quotient+3,w
  3193     0B6F  00B5               	movwf	?___aldiv+3
  3194     0B70  083F               	movf	___aldiv@quotient+2,w
  3195     0B71  00B4               	movwf	?___aldiv+2
  3196     0B72  083E               	movf	___aldiv@quotient+1,w
  3197     0B73  00B3               	movwf	?___aldiv+1
  3198     0B74  083D               	movf	___aldiv@quotient,w
  3199     0B75  00B2               	movwf	?___aldiv
  3200     0B76                     l573:
  3201     0B76  0008               	return
  3202     0B77                     __end_of___aldiv:
  3203                           
  3204                           	psect	text8
  3205     0871                     __ptext8:	
  3206 ;; *************** function _LcdALLb_set_value *****************
  3207 ;; Defined at:
  3208 ;;		line 98 in file "LCD_ALL.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  byte_value      2   34[BANK0 ] int 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  unidades        2   40[BANK0 ] int 
  3213 ;;  decenas         2   38[BANK0 ] int 
  3214 ;;  centenas        2   36[BANK0 ] int 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      unsigned char 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         0       2       0       0       0
  3225 ;;      Locals:         0       6       0       0       0
  3226 ;;      Temps:          0       0       0       0       0
  3227 ;;      Totals:         0       8       0       0       0
  3228 ;;Total ram usage:        8 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 5
  3231 ;; This function calls:
  3232 ;;		_LcdALL_Write_Char
  3233 ;;		___awdiv
  3234 ;;		___awmod
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240     0871                     _LcdALLb_set_value:	
  3241                           ;psect for function _LcdALLb_set_value
  3242                           
  3243     0871                     l3232:	
  3244                           ;incstack = 0
  3245                           ; Regs used in _LcdALLb_set_value: [wreg+status,2+status,0+pclath+cstack]
  3246                           
  3247                           
  3248                           ;LCD_ALL.c: 99:     int centenas = (byte_value / 100 + 48);
  3249     0871  3064               	movlw	100
  3250     0872  1283               	bcf	3,5	;RP0=0, select bank0
  3251     0873  1303               	bcf	3,6	;RP1=0, select bank0
  3252     0874  00B9               	movwf	___awdiv@divisor
  3253     0875  3000               	movlw	0
  3254     0876  00BA               	movwf	___awdiv@divisor+1
  3255     0877  0843               	movf	LcdALLb_set_value@byte_value+1,w
  3256     0878  00BC               	movwf	___awdiv@dividend+1
  3257     0879  0842               	movf	LcdALLb_set_value@byte_value,w
  3258     087A  00BB               	movwf	___awdiv@dividend
  3259     087B  120A  158A  2008  120A  158A  	fcall	___awdiv
  3260     0880  1283               	bcf	3,5	;RP0=0, select bank0
  3261     0881  1303               	bcf	3,6	;RP1=0, select bank0
  3262     0882  0839               	movf	?___awdiv,w
  3263     0883  3E30               	addlw	48
  3264     0884  00C4               	movwf	LcdALLb_set_value@centenas
  3265     0885  083A               	movf	?___awdiv+1,w
  3266     0886  1803               	skipnc
  3267     0887  3E01               	addlw	1
  3268     0888  3E00               	addlw	0
  3269     0889  00C5               	movwf	LcdALLb_set_value@centenas+1
  3270                           
  3271                           ;LCD_ALL.c: 100:     int decenas = ((byte_value%100)/10)+48;
  3272     088A  300A               	movlw	10
  3273     088B  00B9               	movwf	___awdiv@divisor
  3274     088C  3000               	movlw	0
  3275     088D  00BA               	movwf	___awdiv@divisor+1
  3276     088E  0843               	movf	LcdALLb_set_value@byte_value+1,w
  3277     088F  00B5               	movwf	___awmod@dividend+1
  3278     0890  0842               	movf	LcdALLb_set_value@byte_value,w
  3279     0891  00B4               	movwf	___awmod@dividend
  3280     0892  3064               	movlw	100
  3281     0893  00B2               	movwf	___awmod@divisor
  3282     0894  3000               	movlw	0
  3283     0895  00B3               	movwf	___awmod@divisor+1
  3284     0896  160A  118A  273C  120A  158A  	fcall	___awmod
  3285     089B  1283               	bcf	3,5	;RP0=0, select bank0
  3286     089C  1303               	bcf	3,6	;RP1=0, select bank0
  3287     089D  0833               	movf	?___awmod+1,w
  3288     089E  00BC               	movwf	___awdiv@dividend+1
  3289     089F  0832               	movf	?___awmod,w
  3290     08A0  00BB               	movwf	___awdiv@dividend
  3291     08A1  120A  158A  2008  120A  158A  	fcall	___awdiv
  3292     08A6  1283               	bcf	3,5	;RP0=0, select bank0
  3293     08A7  1303               	bcf	3,6	;RP1=0, select bank0
  3294     08A8  0839               	movf	?___awdiv,w
  3295     08A9  3E30               	addlw	48
  3296     08AA  00C6               	movwf	LcdALLb_set_value@decenas
  3297     08AB  083A               	movf	?___awdiv+1,w
  3298     08AC  1803               	skipnc
  3299     08AD  3E01               	addlw	1
  3300     08AE  3E00               	addlw	0
  3301     08AF  00C7               	movwf	LcdALLb_set_value@decenas+1
  3302                           
  3303                           ;LCD_ALL.c: 101:     int unidades = (byte_value%10)+48;
  3304     08B0  300A               	movlw	10
  3305     08B1  00B2               	movwf	___awmod@divisor
  3306     08B2  3000               	movlw	0
  3307     08B3  00B3               	movwf	___awmod@divisor+1
  3308     08B4  0843               	movf	LcdALLb_set_value@byte_value+1,w
  3309     08B5  00B5               	movwf	___awmod@dividend+1
  3310     08B6  0842               	movf	LcdALLb_set_value@byte_value,w
  3311     08B7  00B4               	movwf	___awmod@dividend
  3312     08B8  160A  118A  273C  120A  158A  	fcall	___awmod
  3313     08BD  1283               	bcf	3,5	;RP0=0, select bank0
  3314     08BE  1303               	bcf	3,6	;RP1=0, select bank0
  3315     08BF  0832               	movf	?___awmod,w
  3316     08C0  3E30               	addlw	48
  3317     08C1  00C8               	movwf	LcdALLb_set_value@unidades
  3318     08C2  0833               	movf	?___awmod+1,w
  3319     08C3  1803               	skipnc
  3320     08C4  3E01               	addlw	1
  3321     08C5  3E00               	addlw	0
  3322     08C6  00C9               	movwf	LcdALLb_set_value@unidades+1
  3323                           
  3324                           ;LCD_ALL.c: 102:     LcdALL_Write_Char(centenas);
  3325     08C7  0844               	movf	LcdALLb_set_value@centenas,w
  3326     08C8  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3327                           
  3328                           ;LCD_ALL.c: 103:     LcdALL_Write_Char(decenas);
  3329     08CD  1283               	bcf	3,5	;RP0=0, select bank0
  3330     08CE  1303               	bcf	3,6	;RP1=0, select bank0
  3331     08CF  0846               	movf	LcdALLb_set_value@decenas,w
  3332     08D0  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3333                           
  3334                           ;LCD_ALL.c: 104:     LcdALL_Write_Char(unidades);
  3335     08D5  1283               	bcf	3,5	;RP0=0, select bank0
  3336     08D6  1303               	bcf	3,6	;RP1=0, select bank0
  3337     08D7  0848               	movf	LcdALLb_set_value@unidades,w
  3338     08D8  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3339     08DD                     l281:
  3340     08DD  0008               	return
  3341     08DE                     __end_of_LcdALLb_set_value:
  3342                           
  3343                           	psect	text9
  3344     094F                     __ptext9:	
  3345 ;; *************** function _LcdALL_set_value *****************
  3346 ;; Defined at:
  3347 ;;		line 88 in file "LCD_ALL.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  byte_value      2   34[BANK0 ] int 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  unidades        2   40[BANK0 ] int 
  3352 ;;  decenas         2   38[BANK0 ] int 
  3353 ;;  centenas        2   36[BANK0 ] int 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      unsigned char 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, pclath, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3363 ;;      Params:         0       2       0       0       0
  3364 ;;      Locals:         0       6       0       0       0
  3365 ;;      Temps:          0       0       0       0       0
  3366 ;;      Totals:         0       8       0       0       0
  3367 ;;Total ram usage:        8 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 5
  3370 ;; This function calls:
  3371 ;;		_LcdALL_Write_Char
  3372 ;;		___awdiv
  3373 ;;		___awmod
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379     094F                     _LcdALL_set_value:	
  3380                           ;psect for function _LcdALL_set_value
  3381                           
  3382     094F                     l3230:	
  3383                           ;incstack = 0
  3384                           ; Regs used in _LcdALL_set_value: [wreg+status,2+status,0+pclath+cstack]
  3385                           
  3386                           
  3387                           ;LCD_ALL.c: 89:     int centenas = (byte_value / 100 + 48);
  3388     094F  3064               	movlw	100
  3389     0950  1283               	bcf	3,5	;RP0=0, select bank0
  3390     0951  1303               	bcf	3,6	;RP1=0, select bank0
  3391     0952  00B9               	movwf	___awdiv@divisor
  3392     0953  3000               	movlw	0
  3393     0954  00BA               	movwf	___awdiv@divisor+1
  3394     0955  0843               	movf	LcdALL_set_value@byte_value+1,w
  3395     0956  00BC               	movwf	___awdiv@dividend+1
  3396     0957  0842               	movf	LcdALL_set_value@byte_value,w
  3397     0958  00BB               	movwf	___awdiv@dividend
  3398     0959  120A  158A  2008  120A  158A  	fcall	___awdiv
  3399     095E  1283               	bcf	3,5	;RP0=0, select bank0
  3400     095F  1303               	bcf	3,6	;RP1=0, select bank0
  3401     0960  0839               	movf	?___awdiv,w
  3402     0961  3E30               	addlw	48
  3403     0962  00C4               	movwf	LcdALL_set_value@centenas
  3404     0963  083A               	movf	?___awdiv+1,w
  3405     0964  1803               	skipnc
  3406     0965  3E01               	addlw	1
  3407     0966  3E00               	addlw	0
  3408     0967  00C5               	movwf	LcdALL_set_value@centenas+1
  3409                           
  3410                           ;LCD_ALL.c: 90:     int decenas = ((byte_value%100)/10)+48;
  3411     0968  300A               	movlw	10
  3412     0969  00B9               	movwf	___awdiv@divisor
  3413     096A  3000               	movlw	0
  3414     096B  00BA               	movwf	___awdiv@divisor+1
  3415     096C  0843               	movf	LcdALL_set_value@byte_value+1,w
  3416     096D  00B5               	movwf	___awmod@dividend+1
  3417     096E  0842               	movf	LcdALL_set_value@byte_value,w
  3418     096F  00B4               	movwf	___awmod@dividend
  3419     0970  3064               	movlw	100
  3420     0971  00B2               	movwf	___awmod@divisor
  3421     0972  3000               	movlw	0
  3422     0973  00B3               	movwf	___awmod@divisor+1
  3423     0974  160A  118A  273C  120A  158A  	fcall	___awmod
  3424     0979  1283               	bcf	3,5	;RP0=0, select bank0
  3425     097A  1303               	bcf	3,6	;RP1=0, select bank0
  3426     097B  0833               	movf	?___awmod+1,w
  3427     097C  00BC               	movwf	___awdiv@dividend+1
  3428     097D  0832               	movf	?___awmod,w
  3429     097E  00BB               	movwf	___awdiv@dividend
  3430     097F  120A  158A  2008  120A  158A  	fcall	___awdiv
  3431     0984  1283               	bcf	3,5	;RP0=0, select bank0
  3432     0985  1303               	bcf	3,6	;RP1=0, select bank0
  3433     0986  0839               	movf	?___awdiv,w
  3434     0987  3E30               	addlw	48
  3435     0988  00C6               	movwf	LcdALL_set_value@decenas
  3436     0989  083A               	movf	?___awdiv+1,w
  3437     098A  1803               	skipnc
  3438     098B  3E01               	addlw	1
  3439     098C  3E00               	addlw	0
  3440     098D  00C7               	movwf	LcdALL_set_value@decenas+1
  3441                           
  3442                           ;LCD_ALL.c: 91:     int unidades = (byte_value%10)+48;
  3443     098E  300A               	movlw	10
  3444     098F  00B2               	movwf	___awmod@divisor
  3445     0990  3000               	movlw	0
  3446     0991  00B3               	movwf	___awmod@divisor+1
  3447     0992  0843               	movf	LcdALL_set_value@byte_value+1,w
  3448     0993  00B5               	movwf	___awmod@dividend+1
  3449     0994  0842               	movf	LcdALL_set_value@byte_value,w
  3450     0995  00B4               	movwf	___awmod@dividend
  3451     0996  160A  118A  273C  120A  158A  	fcall	___awmod
  3452     099B  1283               	bcf	3,5	;RP0=0, select bank0
  3453     099C  1303               	bcf	3,6	;RP1=0, select bank0
  3454     099D  0832               	movf	?___awmod,w
  3455     099E  3E30               	addlw	48
  3456     099F  00C8               	movwf	LcdALL_set_value@unidades
  3457     09A0  0833               	movf	?___awmod+1,w
  3458     09A1  1803               	skipnc
  3459     09A2  3E01               	addlw	1
  3460     09A3  3E00               	addlw	0
  3461     09A4  00C9               	movwf	LcdALL_set_value@unidades+1
  3462                           
  3463                           ;LCD_ALL.c: 92:     LcdALL_Write_Char(centenas);
  3464     09A5  0844               	movf	LcdALL_set_value@centenas,w
  3465     09A6  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3466                           
  3467                           ;LCD_ALL.c: 93:     LcdALL_Write_Char('.');
  3468     09AB  302E               	movlw	46
  3469     09AC  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3470                           
  3471                           ;LCD_ALL.c: 94:     LcdALL_Write_Char(decenas);
  3472     09B1  1283               	bcf	3,5	;RP0=0, select bank0
  3473     09B2  1303               	bcf	3,6	;RP1=0, select bank0
  3474     09B3  0846               	movf	LcdALL_set_value@decenas,w
  3475     09B4  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3476                           
  3477                           ;LCD_ALL.c: 95:     LcdALL_Write_Char(unidades);
  3478     09B9  1283               	bcf	3,5	;RP0=0, select bank0
  3479     09BA  1303               	bcf	3,6	;RP1=0, select bank0
  3480     09BB  0848               	movf	LcdALL_set_value@unidades,w
  3481     09BC  160A  118A  2501  120A  158A  	fcall	_LcdALL_Write_Char
  3482     09C1                     l278:
  3483     09C1  0008               	return
  3484     09C2                     __end_of_LcdALL_set_value:
  3485                           
  3486                           	psect	text10
  3487     173C                     __ptext10:	
  3488 ;; *************** function ___awmod *****************
  3489 ;; Defined at:
  3490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  divisor         2   18[BANK0 ] int 
  3493 ;;  dividend        2   20[BANK0 ] int 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  sign            1   24[BANK0 ] unsigned char 
  3496 ;;  counter         1   23[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   18[BANK0 ] int 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       4       0       0       0
  3507 ;;      Locals:         0       2       0       0       0
  3508 ;;      Temps:          0       1       0       0       0
  3509 ;;      Totals:         0       7       0       0       0
  3510 ;;Total ram usage:        7 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 3
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_LcdALL_set_value
  3517 ;;		_LcdALLb_set_value
  3518 ;;		_set_value
  3519 ;;		_Lcd_set_value
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523     173C                     ___awmod:	
  3524                           ;psect for function ___awmod
  3525                           
  3526     173C                     l2728:	
  3527                           ;incstack = 0
  3528                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3529                           
  3530     173C  1283               	bcf	3,5	;RP0=0, select bank0
  3531     173D  1303               	bcf	3,6	;RP1=0, select bank0
  3532     173E  01B8               	clrf	___awmod@sign
  3533     173F                     l2730:
  3534     173F  1FB5               	btfss	___awmod@dividend+1,7
  3535     1740  2F42               	goto	u3281
  3536     1741  2F43               	goto	u3280
  3537     1742                     u3281:
  3538     1742  2F4A               	goto	l2736
  3539     1743                     u3280:
  3540     1743                     l2732:
  3541     1743  09B4               	comf	___awmod@dividend,f
  3542     1744  09B5               	comf	___awmod@dividend+1,f
  3543     1745  0AB4               	incf	___awmod@dividend,f
  3544     1746  1903               	skipnz
  3545     1747  0AB5               	incf	___awmod@dividend+1,f
  3546     1748                     l2734:
  3547     1748  01B8               	clrf	___awmod@sign
  3548     1749  0AB8               	incf	___awmod@sign,f
  3549     174A                     l2736:
  3550     174A  1FB3               	btfss	___awmod@divisor+1,7
  3551     174B  2F4D               	goto	u3291
  3552     174C  2F4E               	goto	u3290
  3553     174D                     u3291:
  3554     174D  2F53               	goto	l2740
  3555     174E                     u3290:
  3556     174E                     l2738:
  3557     174E  09B2               	comf	___awmod@divisor,f
  3558     174F  09B3               	comf	___awmod@divisor+1,f
  3559     1750  0AB2               	incf	___awmod@divisor,f
  3560     1751  1903               	skipnz
  3561     1752  0AB3               	incf	___awmod@divisor+1,f
  3562     1753                     l2740:
  3563     1753  0832               	movf	___awmod@divisor,w
  3564     1754  0433               	iorwf	___awmod@divisor+1,w
  3565     1755  1903               	btfsc	3,2
  3566     1756  2F58               	goto	u3301
  3567     1757  2F59               	goto	u3300
  3568     1758                     u3301:
  3569     1758  2F88               	goto	l2758
  3570     1759                     u3300:
  3571     1759                     l2742:
  3572     1759  01B7               	clrf	___awmod@counter
  3573     175A  0AB7               	incf	___awmod@counter,f
  3574     175B  2F67               	goto	l2748
  3575     175C                     l2744:
  3576     175C  3001               	movlw	1
  3577     175D                     u3315:
  3578     175D  1003               	clrc
  3579     175E  0DB2               	rlf	___awmod@divisor,f
  3580     175F  0DB3               	rlf	___awmod@divisor+1,f
  3581     1760  3EFF               	addlw	-1
  3582     1761  1D03               	skipz
  3583     1762  2F5D               	goto	u3315
  3584     1763                     l2746:
  3585     1763  3001               	movlw	1
  3586     1764  00B6               	movwf	??___awmod
  3587     1765  0836               	movf	??___awmod,w
  3588     1766  07B7               	addwf	___awmod@counter,f
  3589     1767                     l2748:
  3590     1767  1FB3               	btfss	___awmod@divisor+1,7
  3591     1768  2F6A               	goto	u3321
  3592     1769  2F6B               	goto	u3320
  3593     176A                     u3321:
  3594     176A  2F5C               	goto	l2744
  3595     176B                     u3320:
  3596     176B                     l2750:
  3597     176B  0833               	movf	___awmod@divisor+1,w
  3598     176C  0235               	subwf	___awmod@dividend+1,w
  3599     176D  1D03               	skipz
  3600     176E  2F71               	goto	u3335
  3601     176F  0832               	movf	___awmod@divisor,w
  3602     1770  0234               	subwf	___awmod@dividend,w
  3603     1771                     u3335:
  3604     1771  1C03               	skipc
  3605     1772  2F74               	goto	u3331
  3606     1773  2F75               	goto	u3330
  3607     1774                     u3331:
  3608     1774  2F7B               	goto	l2754
  3609     1775                     u3330:
  3610     1775                     l2752:
  3611     1775  0832               	movf	___awmod@divisor,w
  3612     1776  02B4               	subwf	___awmod@dividend,f
  3613     1777  0833               	movf	___awmod@divisor+1,w
  3614     1778  1C03               	skipc
  3615     1779  03B5               	decf	___awmod@dividend+1,f
  3616     177A  02B5               	subwf	___awmod@dividend+1,f
  3617     177B                     l2754:
  3618     177B  3001               	movlw	1
  3619     177C                     u3345:
  3620     177C  1003               	clrc
  3621     177D  0CB3               	rrf	___awmod@divisor+1,f
  3622     177E  0CB2               	rrf	___awmod@divisor,f
  3623     177F  3EFF               	addlw	-1
  3624     1780  1D03               	skipz
  3625     1781  2F7C               	goto	u3345
  3626     1782                     l2756:
  3627     1782  3001               	movlw	1
  3628     1783  02B7               	subwf	___awmod@counter,f
  3629     1784  1D03               	btfss	3,2
  3630     1785  2F87               	goto	u3351
  3631     1786  2F88               	goto	u3350
  3632     1787                     u3351:
  3633     1787  2F6B               	goto	l2750
  3634     1788                     u3350:
  3635     1788                     l2758:
  3636     1788  0838               	movf	___awmod@sign,w
  3637     1789  1903               	btfsc	3,2
  3638     178A  2F8C               	goto	u3361
  3639     178B  2F8D               	goto	u3360
  3640     178C                     u3361:
  3641     178C  2F92               	goto	l2762
  3642     178D                     u3360:
  3643     178D                     l2760:
  3644     178D  09B4               	comf	___awmod@dividend,f
  3645     178E  09B5               	comf	___awmod@dividend+1,f
  3646     178F  0AB4               	incf	___awmod@dividend,f
  3647     1790  1903               	skipnz
  3648     1791  0AB5               	incf	___awmod@dividend+1,f
  3649     1792                     l2762:
  3650     1792  0835               	movf	___awmod@dividend+1,w
  3651     1793  00B3               	movwf	?___awmod+1
  3652     1794  0834               	movf	___awmod@dividend,w
  3653     1795  00B2               	movwf	?___awmod
  3654     1796                     l664:
  3655     1796  0008               	return
  3656     1797                     __end_of___awmod:
  3657                           
  3658                           	psect	text11
  3659     0808                     __ptext11:	
  3660 ;; *************** function ___awdiv *****************
  3661 ;; Defined at:
  3662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  divisor         2   25[BANK0 ] int 
  3665 ;;  dividend        2   27[BANK0 ] int 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  quotient        2   32[BANK0 ] int 
  3668 ;;  sign            1   31[BANK0 ] unsigned char 
  3669 ;;  counter         1   30[BANK0 ] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  2   25[BANK0 ] int 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       4       0       0       0
  3680 ;;      Locals:         0       4       0       0       0
  3681 ;;      Temps:          0       1       0       0       0
  3682 ;;      Totals:         0       9       0       0       0
  3683 ;;Total ram usage:        9 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 3
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_LcdALL_set_value
  3690 ;;		_LcdALLb_set_value
  3691 ;;		_TMR0_Init
  3692 ;;		_set_value
  3693 ;;		_Lcd_set_value
  3694 ;;		_Lcd_map
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698     0808                     ___awdiv:	
  3699                           ;psect for function ___awdiv
  3700                           
  3701     0808                     l2684:	
  3702                           ;incstack = 0
  3703                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3704                           
  3705     0808  1283               	bcf	3,5	;RP0=0, select bank0
  3706     0809  1303               	bcf	3,6	;RP1=0, select bank0
  3707     080A  01BF               	clrf	___awdiv@sign
  3708     080B                     l2686:
  3709     080B  1FBA               	btfss	___awdiv@divisor+1,7
  3710     080C  280E               	goto	u3181
  3711     080D  280F               	goto	u3180
  3712     080E                     u3181:
  3713     080E  2816               	goto	l2692
  3714     080F                     u3180:
  3715     080F                     l2688:
  3716     080F  09B9               	comf	___awdiv@divisor,f
  3717     0810  09BA               	comf	___awdiv@divisor+1,f
  3718     0811  0AB9               	incf	___awdiv@divisor,f
  3719     0812  1903               	skipnz
  3720     0813  0ABA               	incf	___awdiv@divisor+1,f
  3721     0814                     l2690:
  3722     0814  01BF               	clrf	___awdiv@sign
  3723     0815  0ABF               	incf	___awdiv@sign,f
  3724     0816                     l2692:
  3725     0816  1FBC               	btfss	___awdiv@dividend+1,7
  3726     0817  2819               	goto	u3191
  3727     0818  281A               	goto	u3190
  3728     0819                     u3191:
  3729     0819  2823               	goto	l2698
  3730     081A                     u3190:
  3731     081A                     l2694:
  3732     081A  09BB               	comf	___awdiv@dividend,f
  3733     081B  09BC               	comf	___awdiv@dividend+1,f
  3734     081C  0ABB               	incf	___awdiv@dividend,f
  3735     081D  1903               	skipnz
  3736     081E  0ABC               	incf	___awdiv@dividend+1,f
  3737     081F                     l2696:
  3738     081F  3001               	movlw	1
  3739     0820  00BD               	movwf	??___awdiv
  3740     0821  083D               	movf	??___awdiv,w
  3741     0822  06BF               	xorwf	___awdiv@sign,f
  3742     0823                     l2698:
  3743     0823  01C0               	clrf	___awdiv@quotient
  3744     0824  01C1               	clrf	___awdiv@quotient+1
  3745     0825                     l2700:
  3746     0825  0839               	movf	___awdiv@divisor,w
  3747     0826  043A               	iorwf	___awdiv@divisor+1,w
  3748     0827  1903               	btfsc	3,2
  3749     0828  282A               	goto	u3201
  3750     0829  282B               	goto	u3200
  3751     082A                     u3201:
  3752     082A  2862               	goto	l2720
  3753     082B                     u3200:
  3754     082B                     l2702:
  3755     082B  01BE               	clrf	___awdiv@counter
  3756     082C  0ABE               	incf	___awdiv@counter,f
  3757     082D  2839               	goto	l2708
  3758     082E                     l2704:
  3759     082E  3001               	movlw	1
  3760     082F                     u3215:
  3761     082F  1003               	clrc
  3762     0830  0DB9               	rlf	___awdiv@divisor,f
  3763     0831  0DBA               	rlf	___awdiv@divisor+1,f
  3764     0832  3EFF               	addlw	-1
  3765     0833  1D03               	skipz
  3766     0834  282F               	goto	u3215
  3767     0835                     l2706:
  3768     0835  3001               	movlw	1
  3769     0836  00BD               	movwf	??___awdiv
  3770     0837  083D               	movf	??___awdiv,w
  3771     0838  07BE               	addwf	___awdiv@counter,f
  3772     0839                     l2708:
  3773     0839  1FBA               	btfss	___awdiv@divisor+1,7
  3774     083A  283C               	goto	u3221
  3775     083B  283D               	goto	u3220
  3776     083C                     u3221:
  3777     083C  282E               	goto	l2704
  3778     083D                     u3220:
  3779     083D                     l2710:
  3780     083D  3001               	movlw	1
  3781     083E                     u3235:
  3782     083E  1003               	clrc
  3783     083F  0DC0               	rlf	___awdiv@quotient,f
  3784     0840  0DC1               	rlf	___awdiv@quotient+1,f
  3785     0841  3EFF               	addlw	-1
  3786     0842  1D03               	skipz
  3787     0843  283E               	goto	u3235
  3788     0844  083A               	movf	___awdiv@divisor+1,w
  3789     0845  023C               	subwf	___awdiv@dividend+1,w
  3790     0846  1D03               	skipz
  3791     0847  284A               	goto	u3245
  3792     0848  0839               	movf	___awdiv@divisor,w
  3793     0849  023B               	subwf	___awdiv@dividend,w
  3794     084A                     u3245:
  3795     084A  1C03               	skipc
  3796     084B  284D               	goto	u3241
  3797     084C  284E               	goto	u3240
  3798     084D                     u3241:
  3799     084D  2855               	goto	l2716
  3800     084E                     u3240:
  3801     084E                     l2712:
  3802     084E  0839               	movf	___awdiv@divisor,w
  3803     084F  02BB               	subwf	___awdiv@dividend,f
  3804     0850  083A               	movf	___awdiv@divisor+1,w
  3805     0851  1C03               	skipc
  3806     0852  03BC               	decf	___awdiv@dividend+1,f
  3807     0853  02BC               	subwf	___awdiv@dividend+1,f
  3808     0854                     l2714:
  3809     0854  1440               	bsf	___awdiv@quotient,0
  3810     0855                     l2716:
  3811     0855  3001               	movlw	1
  3812     0856                     u3255:
  3813     0856  1003               	clrc
  3814     0857  0CBA               	rrf	___awdiv@divisor+1,f
  3815     0858  0CB9               	rrf	___awdiv@divisor,f
  3816     0859  3EFF               	addlw	-1
  3817     085A  1D03               	skipz
  3818     085B  2856               	goto	u3255
  3819     085C                     l2718:
  3820     085C  3001               	movlw	1
  3821     085D  02BE               	subwf	___awdiv@counter,f
  3822     085E  1D03               	btfss	3,2
  3823     085F  2861               	goto	u3261
  3824     0860  2862               	goto	u3260
  3825     0861                     u3261:
  3826     0861  283D               	goto	l2710
  3827     0862                     u3260:
  3828     0862                     l2720:
  3829     0862  083F               	movf	___awdiv@sign,w
  3830     0863  1903               	btfsc	3,2
  3831     0864  2866               	goto	u3271
  3832     0865  2867               	goto	u3270
  3833     0866                     u3271:
  3834     0866  286C               	goto	l2724
  3835     0867                     u3270:
  3836     0867                     l2722:
  3837     0867  09C0               	comf	___awdiv@quotient,f
  3838     0868  09C1               	comf	___awdiv@quotient+1,f
  3839     0869  0AC0               	incf	___awdiv@quotient,f
  3840     086A  1903               	skipnz
  3841     086B  0AC1               	incf	___awdiv@quotient+1,f
  3842     086C                     l2724:
  3843     086C  0841               	movf	___awdiv@quotient+1,w
  3844     086D  00BA               	movwf	?___awdiv+1
  3845     086E  0840               	movf	___awdiv@quotient,w
  3846     086F  00B9               	movwf	?___awdiv
  3847     0870                     l651:
  3848     0870  0008               	return
  3849     0871                     __end_of___awdiv:
  3850                           
  3851                           	psect	text12
  3852     0CEE                     __ptext12:	
  3853 ;; *************** function _LcdALL_map *****************
  3854 ;; Defined at:
  3855 ;;		line 107 in file "LCD_ALL.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  valor           4    0[BANK3 ] float 
  3858 ;;  rango_min       4    4[BANK3 ] float 
  3859 ;;  rango_max       4    8[BANK3 ] float 
  3860 ;;  nuevo_min       4   12[BANK3 ] float 
  3861 ;;  nuevo_max       4   16[BANK3 ] float 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  nuevo_valor     4   64[BANK1 ] float 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  4    0[BANK3 ] float 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3873 ;;      Params:         0       0       0      20       0
  3874 ;;      Locals:         0       0       8       0       0
  3875 ;;      Temps:          0       0       0       0       0
  3876 ;;      Totals:         0       0       8      20       0
  3877 ;;Total ram usage:       28 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 5
  3880 ;; This function calls:
  3881 ;;		___fladd
  3882 ;;		___fldiv
  3883 ;;		___flmul
  3884 ;;		___flsub
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890     0CEE                     _LcdALL_map:	
  3891                           ;psect for function _LcdALL_map
  3892                           
  3893     0CEE                     l3970:	
  3894                           ;incstack = 0
  3895                           ; Regs used in _LcdALL_map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3896                           
  3897                           
  3898                           ;LCD_ALL.c: 108:     float nuevo_valor = nuevo_min + (valor - rango_min)*(nuevo_max - nu
      +                          evo_min)/(rango_max - rango_min);
  3899     0CEE  1683               	bsf	3,5	;RP0=1, select bank3
  3900     0CEF  1703               	bsf	3,6	;RP1=1, select bank3
  3901     0CF0  0817               	movf	(LcdALL_map@rango_min+3)^(0+384),w
  3902     0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  3903     0CF2  1303               	bcf	3,6	;RP1=0, select bank1
  3904     0CF3  00A7               	movwf	(___flsub@a+3)^(0+128)
  3905     0CF4  1683               	bsf	3,5	;RP0=1, select bank3
  3906     0CF5  1703               	bsf	3,6	;RP1=1, select bank3
  3907     0CF6  0816               	movf	(LcdALL_map@rango_min+2)^(0+384),w
  3908     0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  3909     0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  3910     0CF9  00A6               	movwf	(___flsub@a+2)^(0+128)
  3911     0CFA  1683               	bsf	3,5	;RP0=1, select bank3
  3912     0CFB  1703               	bsf	3,6	;RP1=1, select bank3
  3913     0CFC  0815               	movf	(LcdALL_map@rango_min+1)^(0+384),w
  3914     0CFD  1683               	bsf	3,5	;RP0=1, select bank1
  3915     0CFE  1303               	bcf	3,6	;RP1=0, select bank1
  3916     0CFF  00A5               	movwf	(___flsub@a+1)^(0+128)
  3917     0D00  1683               	bsf	3,5	;RP0=1, select bank3
  3918     0D01  1703               	bsf	3,6	;RP1=1, select bank3
  3919     0D02  0814               	movf	LcdALL_map@rango_min^(0+384),w
  3920     0D03  1683               	bsf	3,5	;RP0=1, select bank1
  3921     0D04  1303               	bcf	3,6	;RP1=0, select bank1
  3922     0D05  00A4               	movwf	___flsub@a^(0+128)
  3923     0D06  1683               	bsf	3,5	;RP0=1, select bank3
  3924     0D07  1703               	bsf	3,6	;RP1=1, select bank3
  3925     0D08  081B               	movf	(LcdALL_map@rango_max+3)^(0+384),w
  3926     0D09  1683               	bsf	3,5	;RP0=1, select bank1
  3927     0D0A  1303               	bcf	3,6	;RP1=0, select bank1
  3928     0D0B  00AB               	movwf	(___flsub@b+3)^(0+128)
  3929     0D0C  1683               	bsf	3,5	;RP0=1, select bank3
  3930     0D0D  1703               	bsf	3,6	;RP1=1, select bank3
  3931     0D0E  081A               	movf	(LcdALL_map@rango_max+2)^(0+384),w
  3932     0D0F  1683               	bsf	3,5	;RP0=1, select bank1
  3933     0D10  1303               	bcf	3,6	;RP1=0, select bank1
  3934     0D11  00AA               	movwf	(___flsub@b+2)^(0+128)
  3935     0D12  1683               	bsf	3,5	;RP0=1, select bank3
  3936     0D13  1703               	bsf	3,6	;RP1=1, select bank3
  3937     0D14  0819               	movf	(LcdALL_map@rango_max+1)^(0+384),w
  3938     0D15  1683               	bsf	3,5	;RP0=1, select bank1
  3939     0D16  1303               	bcf	3,6	;RP1=0, select bank1
  3940     0D17  00A9               	movwf	(___flsub@b+1)^(0+128)
  3941     0D18  1683               	bsf	3,5	;RP0=1, select bank3
  3942     0D19  1703               	bsf	3,6	;RP1=1, select bank3
  3943     0D1A  0818               	movf	LcdALL_map@rango_max^(0+384),w
  3944     0D1B  1683               	bsf	3,5	;RP0=1, select bank1
  3945     0D1C  1303               	bcf	3,6	;RP1=0, select bank1
  3946     0D1D  00A8               	movwf	___flsub@b^(0+128)
  3947     0D1E  160A  118A  263A  120A  158A  	fcall	___flsub
  3948     0D23  1683               	bsf	3,5	;RP0=1, select bank1
  3949     0D24  1303               	bcf	3,6	;RP1=0, select bank1
  3950     0D25  0827               	movf	(?___flsub+3)^(0+128),w
  3951     0D26  00C9               	movwf	(___fldiv@a+3)^(0+128)
  3952     0D27  0826               	movf	(?___flsub+2)^(0+128),w
  3953     0D28  00C8               	movwf	(___fldiv@a+2)^(0+128)
  3954     0D29  0825               	movf	(?___flsub+1)^(0+128),w
  3955     0D2A  00C7               	movwf	(___fldiv@a+1)^(0+128)
  3956     0D2B  0824               	movf	?___flsub^(0+128),w
  3957     0D2C  00C6               	movwf	___fldiv@a^(0+128)
  3958     0D2D  1683               	bsf	3,5	;RP0=1, select bank3
  3959     0D2E  1703               	bsf	3,6	;RP1=1, select bank3
  3960     0D2F  081F               	movf	(LcdALL_map@nuevo_min+3)^(0+384),w
  3961     0D30  1683               	bsf	3,5	;RP0=1, select bank1
  3962     0D31  1303               	bcf	3,6	;RP1=0, select bank1
  3963     0D32  00A7               	movwf	(___flsub@a+3)^(0+128)
  3964     0D33  1683               	bsf	3,5	;RP0=1, select bank3
  3965     0D34  1703               	bsf	3,6	;RP1=1, select bank3
  3966     0D35  081E               	movf	(LcdALL_map@nuevo_min+2)^(0+384),w
  3967     0D36  1683               	bsf	3,5	;RP0=1, select bank1
  3968     0D37  1303               	bcf	3,6	;RP1=0, select bank1
  3969     0D38  00A6               	movwf	(___flsub@a+2)^(0+128)
  3970     0D39  1683               	bsf	3,5	;RP0=1, select bank3
  3971     0D3A  1703               	bsf	3,6	;RP1=1, select bank3
  3972     0D3B  081D               	movf	(LcdALL_map@nuevo_min+1)^(0+384),w
  3973     0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  3974     0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  3975     0D3E  00A5               	movwf	(___flsub@a+1)^(0+128)
  3976     0D3F  1683               	bsf	3,5	;RP0=1, select bank3
  3977     0D40  1703               	bsf	3,6	;RP1=1, select bank3
  3978     0D41  081C               	movf	LcdALL_map@nuevo_min^(0+384),w
  3979     0D42  1683               	bsf	3,5	;RP0=1, select bank1
  3980     0D43  1303               	bcf	3,6	;RP1=0, select bank1
  3981     0D44  00A4               	movwf	___flsub@a^(0+128)
  3982     0D45  1683               	bsf	3,5	;RP0=1, select bank3
  3983     0D46  1703               	bsf	3,6	;RP1=1, select bank3
  3984     0D47  0823               	movf	(LcdALL_map@nuevo_max+3)^(0+384),w
  3985     0D48  1683               	bsf	3,5	;RP0=1, select bank1
  3986     0D49  1303               	bcf	3,6	;RP1=0, select bank1
  3987     0D4A  00AB               	movwf	(___flsub@b+3)^(0+128)
  3988     0D4B  1683               	bsf	3,5	;RP0=1, select bank3
  3989     0D4C  1703               	bsf	3,6	;RP1=1, select bank3
  3990     0D4D  0822               	movf	(LcdALL_map@nuevo_max+2)^(0+384),w
  3991     0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  3992     0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  3993     0D50  00AA               	movwf	(___flsub@b+2)^(0+128)
  3994     0D51  1683               	bsf	3,5	;RP0=1, select bank3
  3995     0D52  1703               	bsf	3,6	;RP1=1, select bank3
  3996     0D53  0821               	movf	(LcdALL_map@nuevo_max+1)^(0+384),w
  3997     0D54  1683               	bsf	3,5	;RP0=1, select bank1
  3998     0D55  1303               	bcf	3,6	;RP1=0, select bank1
  3999     0D56  00A9               	movwf	(___flsub@b+1)^(0+128)
  4000     0D57  1683               	bsf	3,5	;RP0=1, select bank3
  4001     0D58  1703               	bsf	3,6	;RP1=1, select bank3
  4002     0D59  0820               	movf	LcdALL_map@nuevo_max^(0+384),w
  4003     0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  4004     0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  4005     0D5C  00A8               	movwf	___flsub@b^(0+128)
  4006     0D5D  160A  118A  263A  120A  158A  	fcall	___flsub
  4007     0D62  1683               	bsf	3,5	;RP0=1, select bank1
  4008     0D63  1303               	bcf	3,6	;RP1=0, select bank1
  4009     0D64  0827               	movf	(?___flsub+3)^(0+128),w
  4010     0D65  00AF               	movwf	(___flmul@b+3)^(0+128)
  4011     0D66  0826               	movf	(?___flsub+2)^(0+128),w
  4012     0D67  00AE               	movwf	(___flmul@b+2)^(0+128)
  4013     0D68  0825               	movf	(?___flsub+1)^(0+128),w
  4014     0D69  00AD               	movwf	(___flmul@b+1)^(0+128)
  4015     0D6A  0824               	movf	?___flsub^(0+128),w
  4016     0D6B  00AC               	movwf	___flmul@b^(0+128)
  4017     0D6C  1683               	bsf	3,5	;RP0=1, select bank3
  4018     0D6D  1703               	bsf	3,6	;RP1=1, select bank3
  4019     0D6E  0817               	movf	(LcdALL_map@rango_min+3)^(0+384),w
  4020     0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  4021     0D70  1303               	bcf	3,6	;RP1=0, select bank1
  4022     0D71  00A7               	movwf	(___flsub@a+3)^(0+128)
  4023     0D72  1683               	bsf	3,5	;RP0=1, select bank3
  4024     0D73  1703               	bsf	3,6	;RP1=1, select bank3
  4025     0D74  0816               	movf	(LcdALL_map@rango_min+2)^(0+384),w
  4026     0D75  1683               	bsf	3,5	;RP0=1, select bank1
  4027     0D76  1303               	bcf	3,6	;RP1=0, select bank1
  4028     0D77  00A6               	movwf	(___flsub@a+2)^(0+128)
  4029     0D78  1683               	bsf	3,5	;RP0=1, select bank3
  4030     0D79  1703               	bsf	3,6	;RP1=1, select bank3
  4031     0D7A  0815               	movf	(LcdALL_map@rango_min+1)^(0+384),w
  4032     0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  4033     0D7C  1303               	bcf	3,6	;RP1=0, select bank1
  4034     0D7D  00A5               	movwf	(___flsub@a+1)^(0+128)
  4035     0D7E  1683               	bsf	3,5	;RP0=1, select bank3
  4036     0D7F  1703               	bsf	3,6	;RP1=1, select bank3
  4037     0D80  0814               	movf	LcdALL_map@rango_min^(0+384),w
  4038     0D81  1683               	bsf	3,5	;RP0=1, select bank1
  4039     0D82  1303               	bcf	3,6	;RP1=0, select bank1
  4040     0D83  00A4               	movwf	___flsub@a^(0+128)
  4041     0D84  1683               	bsf	3,5	;RP0=1, select bank3
  4042     0D85  1703               	bsf	3,6	;RP1=1, select bank3
  4043     0D86  0813               	movf	(LcdALL_map@valor+3)^(0+384),w
  4044     0D87  1683               	bsf	3,5	;RP0=1, select bank1
  4045     0D88  1303               	bcf	3,6	;RP1=0, select bank1
  4046     0D89  00AB               	movwf	(___flsub@b+3)^(0+128)
  4047     0D8A  1683               	bsf	3,5	;RP0=1, select bank3
  4048     0D8B  1703               	bsf	3,6	;RP1=1, select bank3
  4049     0D8C  0812               	movf	(LcdALL_map@valor+2)^(0+384),w
  4050     0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  4051     0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  4052     0D8F  00AA               	movwf	(___flsub@b+2)^(0+128)
  4053     0D90  1683               	bsf	3,5	;RP0=1, select bank3
  4054     0D91  1703               	bsf	3,6	;RP1=1, select bank3
  4055     0D92  0811               	movf	(LcdALL_map@valor+1)^(0+384),w
  4056     0D93  1683               	bsf	3,5	;RP0=1, select bank1
  4057     0D94  1303               	bcf	3,6	;RP1=0, select bank1
  4058     0D95  00A9               	movwf	(___flsub@b+1)^(0+128)
  4059     0D96  1683               	bsf	3,5	;RP0=1, select bank3
  4060     0D97  1703               	bsf	3,6	;RP1=1, select bank3
  4061     0D98  0810               	movf	LcdALL_map@valor^(0+384),w
  4062     0D99  1683               	bsf	3,5	;RP0=1, select bank1
  4063     0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  4064     0D9B  00A8               	movwf	___flsub@b^(0+128)
  4065     0D9C  160A  118A  263A  120A  158A  	fcall	___flsub
  4066     0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  4067     0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  4068     0DA3  0827               	movf	(?___flsub+3)^(0+128),w
  4069     0DA4  00B3               	movwf	(___flmul@a+3)^(0+128)
  4070     0DA5  0826               	movf	(?___flsub+2)^(0+128),w
  4071     0DA6  00B2               	movwf	(___flmul@a+2)^(0+128)
  4072     0DA7  0825               	movf	(?___flsub+1)^(0+128),w
  4073     0DA8  00B1               	movwf	(___flmul@a+1)^(0+128)
  4074     0DA9  0824               	movf	?___flsub^(0+128),w
  4075     0DAA  00B0               	movwf	___flmul@a^(0+128)
  4076     0DAB  120A  118A  2024  120A  158A  	fcall	___flmul
  4077     0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  4078     0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  4079     0DB2  082F               	movf	(?___flmul+3)^(0+128),w
  4080     0DB3  00CD               	movwf	(___fldiv@b+3)^(0+128)
  4081     0DB4  082E               	movf	(?___flmul+2)^(0+128),w
  4082     0DB5  00CC               	movwf	(___fldiv@b+2)^(0+128)
  4083     0DB6  082D               	movf	(?___flmul+1)^(0+128),w
  4084     0DB7  00CB               	movwf	(___fldiv@b+1)^(0+128)
  4085     0DB8  082C               	movf	?___flmul^(0+128),w
  4086     0DB9  00CA               	movwf	___fldiv@b^(0+128)
  4087     0DBA  120A  158A  262D  120A  158A  	fcall	___fldiv
  4088     0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  4089     0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  4090     0DC1  0849               	movf	(?___fldiv+3)^(0+128),w
  4091     0DC2  00E7               	movwf	(_LcdALL_map$1554+3)^(0+128)
  4092     0DC3  0848               	movf	(?___fldiv+2)^(0+128),w
  4093     0DC4  00E6               	movwf	(_LcdALL_map$1554+2)^(0+128)
  4094     0DC5  0847               	movf	(?___fldiv+1)^(0+128),w
  4095     0DC6  00E5               	movwf	(_LcdALL_map$1554+1)^(0+128)
  4096     0DC7  0846               	movf	?___fldiv^(0+128),w
  4097     0DC8  00E4               	movwf	_LcdALL_map$1554^(0+128)
  4098                           
  4099                           ;LCD_ALL.c: 108:     float nuevo_valor = nuevo_min + (valor - rango_min)*(nuevo_max - nu
      +                          evo_min)/(rango_max - rango_min);
  4100     0DC9  1683               	bsf	3,5	;RP0=1, select bank3
  4101     0DCA  1703               	bsf	3,6	;RP1=1, select bank3
  4102     0DCB  081F               	movf	(LcdALL_map@nuevo_min+3)^(0+384),w
  4103     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  4104     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  4105     0DCE  00BE               	movwf	___fladd@b+3
  4106     0DCF  1683               	bsf	3,5	;RP0=1, select bank3
  4107     0DD0  1703               	bsf	3,6	;RP1=1, select bank3
  4108     0DD1  081E               	movf	(LcdALL_map@nuevo_min+2)^(0+384),w
  4109     0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  4110     0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  4111     0DD4  00BD               	movwf	___fladd@b+2
  4112     0DD5  1683               	bsf	3,5	;RP0=1, select bank3
  4113     0DD6  1703               	bsf	3,6	;RP1=1, select bank3
  4114     0DD7  081D               	movf	(LcdALL_map@nuevo_min+1)^(0+384),w
  4115     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  4116     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4117     0DDA  00BC               	movwf	___fladd@b+1
  4118     0DDB  1683               	bsf	3,5	;RP0=1, select bank3
  4119     0DDC  1703               	bsf	3,6	;RP1=1, select bank3
  4120     0DDD  081C               	movf	LcdALL_map@nuevo_min^(0+384),w
  4121     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  4122     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  4123     0DE0  00BB               	movwf	___fladd@b
  4124     0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  4125     0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  4126     0DE3  0867               	movf	(_LcdALL_map$1554+3)^(0+128),w
  4127     0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  4128     0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  4129     0DE6  00C2               	movwf	___fladd@a+3
  4130     0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  4131     0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  4132     0DE9  0866               	movf	(_LcdALL_map$1554+2)^(0+128),w
  4133     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4134     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4135     0DEC  00C1               	movwf	___fladd@a+2
  4136     0DED  1683               	bsf	3,5	;RP0=1, select bank1
  4137     0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  4138     0DEF  0865               	movf	(_LcdALL_map$1554+1)^(0+128),w
  4139     0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  4140     0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  4141     0DF2  00C0               	movwf	___fladd@a+1
  4142     0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  4143     0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  4144     0DF5  0864               	movf	_LcdALL_map$1554^(0+128),w
  4145     0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  4146     0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  4147     0DF8  00BF               	movwf	___fladd@a
  4148     0DF9  120A  118A  23C3  120A  158A  	fcall	___fladd
  4149     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  4150     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  4151     0E00  083E               	movf	?___fladd+3,w
  4152     0E01  1683               	bsf	3,5	;RP0=1, select bank1
  4153     0E02  1303               	bcf	3,6	;RP1=0, select bank1
  4154     0E03  00E3               	movwf	(LcdALL_map@nuevo_valor+3)^(0+128)
  4155     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4156     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4157     0E06  083D               	movf	?___fladd+2,w
  4158     0E07  1683               	bsf	3,5	;RP0=1, select bank1
  4159     0E08  1303               	bcf	3,6	;RP1=0, select bank1
  4160     0E09  00E2               	movwf	(LcdALL_map@nuevo_valor+2)^(0+128)
  4161     0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4162     0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4163     0E0C  083C               	movf	?___fladd+1,w
  4164     0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  4165     0E0E  1303               	bcf	3,6	;RP1=0, select bank1
  4166     0E0F  00E1               	movwf	(LcdALL_map@nuevo_valor+1)^(0+128)
  4167     0E10  1283               	bcf	3,5	;RP0=0, select bank0
  4168     0E11  1303               	bcf	3,6	;RP1=0, select bank0
  4169     0E12  083B               	movf	?___fladd,w
  4170     0E13  1683               	bsf	3,5	;RP0=1, select bank1
  4171     0E14  1303               	bcf	3,6	;RP1=0, select bank1
  4172     0E15  00E0               	movwf	LcdALL_map@nuevo_valor^(0+128)
  4173     0E16                     l3972:
  4174                           
  4175                           ;LCD_ALL.c: 109:     return nuevo_valor;
  4176     0E16  0863               	movf	(LcdALL_map@nuevo_valor+3)^(0+128),w
  4177     0E17  1683               	bsf	3,5	;RP0=1, select bank3
  4178     0E18  1703               	bsf	3,6	;RP1=1, select bank3
  4179     0E19  0093               	movwf	(?_LcdALL_map+3)^(0+384)
  4180     0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  4181     0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  4182     0E1C  0862               	movf	(LcdALL_map@nuevo_valor+2)^(0+128),w
  4183     0E1D  1683               	bsf	3,5	;RP0=1, select bank3
  4184     0E1E  1703               	bsf	3,6	;RP1=1, select bank3
  4185     0E1F  0092               	movwf	(?_LcdALL_map+2)^(0+384)
  4186     0E20  1683               	bsf	3,5	;RP0=1, select bank1
  4187     0E21  1303               	bcf	3,6	;RP1=0, select bank1
  4188     0E22  0861               	movf	(LcdALL_map@nuevo_valor+1)^(0+128),w
  4189     0E23  1683               	bsf	3,5	;RP0=1, select bank3
  4190     0E24  1703               	bsf	3,6	;RP1=1, select bank3
  4191     0E25  0091               	movwf	(?_LcdALL_map+1)^(0+384)
  4192     0E26  1683               	bsf	3,5	;RP0=1, select bank1
  4193     0E27  1303               	bcf	3,6	;RP1=0, select bank1
  4194     0E28  0860               	movf	LcdALL_map@nuevo_valor^(0+128),w
  4195     0E29  1683               	bsf	3,5	;RP0=1, select bank3
  4196     0E2A  1703               	bsf	3,6	;RP1=1, select bank3
  4197     0E2B  0090               	movwf	?_LcdALL_map^(0+384)
  4198     0E2C                     l284:
  4199     0E2C  0008               	return
  4200     0E2D                     __end_of_LcdALL_map:
  4201                           
  4202                           	psect	text13
  4203     163A                     __ptext13:	
  4204 ;; *************** function ___flsub *****************
  4205 ;; Defined at:
  4206 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  a               4    4[BANK1 ] float 
  4209 ;;  b               4    8[BANK1 ] float 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  4    4[BANK1 ] float 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4221 ;;      Params:         0       0       8       0       0
  4222 ;;      Locals:         0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0
  4224 ;;      Totals:         0       0       8       0       0
  4225 ;;Total ram usage:        8 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 4
  4228 ;; This function calls:
  4229 ;;		___fladd
  4230 ;; This function is called by:
  4231 ;;		_LcdALL_map
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235     163A                     ___flsub:	
  4236                           ;psect for function ___flsub
  4237                           
  4238     163A                     l3824:	
  4239                           ;incstack = 0
  4240                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4241                           
  4242     163A  3080               	movlw	128
  4243     163B  1683               	bsf	3,5	;RP0=1, select bank1
  4244     163C  1303               	bcf	3,6	;RP1=0, select bank1
  4245     163D  06A7               	xorwf	(___flsub@a+3)^(0+128),f
  4246     163E                     l3826:
  4247     163E  082B               	movf	(___flsub@b+3)^(0+128),w
  4248     163F  1283               	bcf	3,5	;RP0=0, select bank0
  4249     1640  1303               	bcf	3,6	;RP1=0, select bank0
  4250     1641  00BE               	movwf	___fladd@b+3
  4251     1642  1683               	bsf	3,5	;RP0=1, select bank1
  4252     1643  1303               	bcf	3,6	;RP1=0, select bank1
  4253     1644  082A               	movf	(___flsub@b+2)^(0+128),w
  4254     1645  1283               	bcf	3,5	;RP0=0, select bank0
  4255     1646  1303               	bcf	3,6	;RP1=0, select bank0
  4256     1647  00BD               	movwf	___fladd@b+2
  4257     1648  1683               	bsf	3,5	;RP0=1, select bank1
  4258     1649  1303               	bcf	3,6	;RP1=0, select bank1
  4259     164A  0829               	movf	(___flsub@b+1)^(0+128),w
  4260     164B  1283               	bcf	3,5	;RP0=0, select bank0
  4261     164C  1303               	bcf	3,6	;RP1=0, select bank0
  4262     164D  00BC               	movwf	___fladd@b+1
  4263     164E  1683               	bsf	3,5	;RP0=1, select bank1
  4264     164F  1303               	bcf	3,6	;RP1=0, select bank1
  4265     1650  0828               	movf	___flsub@b^(0+128),w
  4266     1651  1283               	bcf	3,5	;RP0=0, select bank0
  4267     1652  1303               	bcf	3,6	;RP1=0, select bank0
  4268     1653  00BB               	movwf	___fladd@b
  4269     1654  1683               	bsf	3,5	;RP0=1, select bank1
  4270     1655  1303               	bcf	3,6	;RP1=0, select bank1
  4271     1656  0827               	movf	(___flsub@a+3)^(0+128),w
  4272     1657  1283               	bcf	3,5	;RP0=0, select bank0
  4273     1658  1303               	bcf	3,6	;RP1=0, select bank0
  4274     1659  00C2               	movwf	___fladd@a+3
  4275     165A  1683               	bsf	3,5	;RP0=1, select bank1
  4276     165B  1303               	bcf	3,6	;RP1=0, select bank1
  4277     165C  0826               	movf	(___flsub@a+2)^(0+128),w
  4278     165D  1283               	bcf	3,5	;RP0=0, select bank0
  4279     165E  1303               	bcf	3,6	;RP1=0, select bank0
  4280     165F  00C1               	movwf	___fladd@a+2
  4281     1660  1683               	bsf	3,5	;RP0=1, select bank1
  4282     1661  1303               	bcf	3,6	;RP1=0, select bank1
  4283     1662  0825               	movf	(___flsub@a+1)^(0+128),w
  4284     1663  1283               	bcf	3,5	;RP0=0, select bank0
  4285     1664  1303               	bcf	3,6	;RP1=0, select bank0
  4286     1665  00C0               	movwf	___fladd@a+1
  4287     1666  1683               	bsf	3,5	;RP0=1, select bank1
  4288     1667  1303               	bcf	3,6	;RP1=0, select bank1
  4289     1668  0824               	movf	___flsub@a^(0+128),w
  4290     1669  1283               	bcf	3,5	;RP0=0, select bank0
  4291     166A  1303               	bcf	3,6	;RP1=0, select bank0
  4292     166B  00BF               	movwf	___fladd@a
  4293     166C  120A  118A  23C3  160A  118A  	fcall	___fladd
  4294     1671  1283               	bcf	3,5	;RP0=0, select bank0
  4295     1672  1303               	bcf	3,6	;RP1=0, select bank0
  4296     1673  083E               	movf	?___fladd+3,w
  4297     1674  1683               	bsf	3,5	;RP0=1, select bank1
  4298     1675  1303               	bcf	3,6	;RP1=0, select bank1
  4299     1676  00A7               	movwf	(?___flsub+3)^(0+128)
  4300     1677  1283               	bcf	3,5	;RP0=0, select bank0
  4301     1678  1303               	bcf	3,6	;RP1=0, select bank0
  4302     1679  083D               	movf	?___fladd+2,w
  4303     167A  1683               	bsf	3,5	;RP0=1, select bank1
  4304     167B  1303               	bcf	3,6	;RP1=0, select bank1
  4305     167C  00A6               	movwf	(?___flsub+2)^(0+128)
  4306     167D  1283               	bcf	3,5	;RP0=0, select bank0
  4307     167E  1303               	bcf	3,6	;RP1=0, select bank0
  4308     167F  083C               	movf	?___fladd+1,w
  4309     1680  1683               	bsf	3,5	;RP0=1, select bank1
  4310     1681  1303               	bcf	3,6	;RP1=0, select bank1
  4311     1682  00A5               	movwf	(?___flsub+1)^(0+128)
  4312     1683  1283               	bcf	3,5	;RP0=0, select bank0
  4313     1684  1303               	bcf	3,6	;RP1=0, select bank0
  4314     1685  083B               	movf	?___fladd,w
  4315     1686  1683               	bsf	3,5	;RP0=1, select bank1
  4316     1687  1303               	bcf	3,6	;RP1=0, select bank1
  4317     1688  00A4               	movwf	?___flsub^(0+128)
  4318     1689                     l837:
  4319     1689  0008               	return
  4320     168A                     __end_of___flsub:
  4321                           
  4322                           	psect	text14
  4323     03C3                     __ptext14:	
  4324 ;; *************** function ___fladd *****************
  4325 ;; Defined at:
  4326 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  b               4   27[BANK0 ] float 
  4329 ;;  a               4   31[BANK0 ] float 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  grs             1    3[BANK1 ] unsigned char 
  4332 ;;  bexp            1    2[BANK1 ] unsigned char 
  4333 ;;  aexp            1    1[BANK1 ] unsigned char 
  4334 ;;  signs           1    0[BANK1 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  4   27[BANK0 ] unsigned char 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, btemp+1
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4344 ;;      Params:         0       8       0       0       0
  4345 ;;      Locals:         0       0       4       0       0
  4346 ;;      Temps:          0       8       0       0       0
  4347 ;;      Totals:         0      16       4       0       0
  4348 ;;Total ram usage:       20 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 3
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_LcdALL_map
  4355 ;;		___flsub
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359     03C3                     ___fladd:	
  4360                           ;psect for function ___fladd
  4361                           
  4362     03C3                     l3630:	
  4363                           ;incstack = 0
  4364                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4365                           
  4366     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  4367     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  4368     03C5  083E               	movf	___fladd@b+3,w
  4369     03C6  3980               	andlw	128
  4370     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  4371     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  4372     03C9  00A0               	movwf	___fladd@signs^(0+128)
  4373     03CA                     l3632:
  4374     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  4375     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  4376     03CC  083E               	movf	___fladd@b+3,w
  4377     03CD  00C3               	movwf	??___fladd
  4378     03CE  0743               	addwf	??___fladd,w
  4379     03CF  1683               	bsf	3,5	;RP0=1, select bank1
  4380     03D0  1303               	bcf	3,6	;RP1=0, select bank1
  4381     03D1  00A2               	movwf	___fladd@bexp^(0+128)
  4382     03D2                     l3634:
  4383     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  4384     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  4385     03D4  1FBD               	btfss	___fladd@b+2,7
  4386     03D5  2BD7               	goto	u4871
  4387     03D6  2BD8               	goto	u4870
  4388     03D7                     u4871:
  4389     03D7  2BDB               	goto	l3638
  4390     03D8                     u4870:
  4391     03D8                     l3636:
  4392     03D8  1683               	bsf	3,5	;RP0=1, select bank1
  4393     03D9  1303               	bcf	3,6	;RP1=0, select bank1
  4394     03DA  1422               	bsf	___fladd@bexp^(0+128),0
  4395     03DB                     l3638:
  4396     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  4397     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  4398     03DD  0822               	movf	___fladd@bexp^(0+128),w
  4399     03DE  1903               	btfsc	3,2
  4400     03DF  2BE1               	goto	u4881
  4401     03E0  2BE2               	goto	u4880
  4402     03E1                     u4881:
  4403     03E1  2BF5               	goto	l3648
  4404     03E2                     u4880:
  4405     03E2                     l3640:
  4406     03E2  0A22               	incf	___fladd@bexp^(0+128),w
  4407     03E3  1D03               	btfss	3,2
  4408     03E4  2BE6               	goto	u4891
  4409     03E5  2BE7               	goto	u4890
  4410     03E6                     u4891:
  4411     03E6  2BF1               	goto	l3644
  4412     03E7                     u4890:
  4413     03E7                     l3642:
  4414     03E7  3000               	movlw	0
  4415     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  4416     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  4417     03EA  00BE               	movwf	___fladd@b+3
  4418     03EB  3000               	movlw	0
  4419     03EC  00BD               	movwf	___fladd@b+2
  4420     03ED  3000               	movlw	0
  4421     03EE  00BC               	movwf	___fladd@b+1
  4422     03EF  3000               	movlw	0
  4423     03F0  00BB               	movwf	___fladd@b
  4424     03F1                     l3644:
  4425     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4426     03F2  17BD               	bsf	___fladd@b+2,7
  4427     03F3                     l3646:
  4428     03F3  01BE               	clrf	___fladd@b+3
  4429     03F4  2BFF               	goto	l3650
  4430     03F5                     l3648:
  4431     03F5  3000               	movlw	0
  4432     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4433     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  4434     03F8  00BE               	movwf	___fladd@b+3
  4435     03F9  3000               	movlw	0
  4436     03FA  00BD               	movwf	___fladd@b+2
  4437     03FB  3000               	movlw	0
  4438     03FC  00BC               	movwf	___fladd@b+1
  4439     03FD  3000               	movlw	0
  4440     03FE  00BB               	movwf	___fladd@b
  4441     03FF                     l3650:
  4442     03FF  0842               	movf	___fladd@a+3,w
  4443     0400  3980               	andlw	128
  4444     0401  1683               	bsf	3,5	;RP0=1, select bank1
  4445     0402  1303               	bcf	3,6	;RP1=0, select bank1
  4446     0403  00A1               	movwf	___fladd@aexp^(0+128)
  4447     0404                     l3652:
  4448     0404  0821               	movf	___fladd@aexp^(0+128),w
  4449     0405  0620               	xorwf	___fladd@signs^(0+128),w
  4450     0406  1903               	skipnz
  4451     0407  2C09               	goto	u4901
  4452     0408  2C0A               	goto	u4900
  4453     0409                     u4901:
  4454     0409  2C0B               	goto	l3656
  4455     040A                     u4900:
  4456     040A                     l3654:
  4457     040A  1720               	bsf	___fladd@signs^(0+128),6
  4458     040B                     l3656:
  4459     040B  1283               	bcf	3,5	;RP0=0, select bank0
  4460     040C  1303               	bcf	3,6	;RP1=0, select bank0
  4461     040D  0842               	movf	___fladd@a+3,w
  4462     040E  00C3               	movwf	??___fladd
  4463     040F  0743               	addwf	??___fladd,w
  4464     0410  1683               	bsf	3,5	;RP0=1, select bank1
  4465     0411  1303               	bcf	3,6	;RP1=0, select bank1
  4466     0412  00A1               	movwf	___fladd@aexp^(0+128)
  4467     0413                     l3658:
  4468     0413  1283               	bcf	3,5	;RP0=0, select bank0
  4469     0414  1303               	bcf	3,6	;RP1=0, select bank0
  4470     0415  1FC1               	btfss	___fladd@a+2,7
  4471     0416  2C18               	goto	u4911
  4472     0417  2C19               	goto	u4910
  4473     0418                     u4911:
  4474     0418  2C1C               	goto	l3662
  4475     0419                     u4910:
  4476     0419                     l3660:
  4477     0419  1683               	bsf	3,5	;RP0=1, select bank1
  4478     041A  1303               	bcf	3,6	;RP1=0, select bank1
  4479     041B  1421               	bsf	___fladd@aexp^(0+128),0
  4480     041C                     l3662:
  4481     041C  1683               	bsf	3,5	;RP0=1, select bank1
  4482     041D  1303               	bcf	3,6	;RP1=0, select bank1
  4483     041E  0821               	movf	___fladd@aexp^(0+128),w
  4484     041F  1903               	btfsc	3,2
  4485     0420  2C22               	goto	u4921
  4486     0421  2C23               	goto	u4920
  4487     0422                     u4921:
  4488     0422  2C36               	goto	l3672
  4489     0423                     u4920:
  4490     0423                     l3664:
  4491     0423  0A21               	incf	___fladd@aexp^(0+128),w
  4492     0424  1D03               	btfss	3,2
  4493     0425  2C27               	goto	u4931
  4494     0426  2C28               	goto	u4930
  4495     0427                     u4931:
  4496     0427  2C32               	goto	l3668
  4497     0428                     u4930:
  4498     0428                     l3666:
  4499     0428  3000               	movlw	0
  4500     0429  1283               	bcf	3,5	;RP0=0, select bank0
  4501     042A  1303               	bcf	3,6	;RP1=0, select bank0
  4502     042B  00C2               	movwf	___fladd@a+3
  4503     042C  3000               	movlw	0
  4504     042D  00C1               	movwf	___fladd@a+2
  4505     042E  3000               	movlw	0
  4506     042F  00C0               	movwf	___fladd@a+1
  4507     0430  3000               	movlw	0
  4508     0431  00BF               	movwf	___fladd@a
  4509     0432                     l3668:
  4510     0432  1283               	bcf	3,5	;RP0=0, select bank0
  4511     0433  17C1               	bsf	___fladd@a+2,7
  4512     0434                     l3670:
  4513     0434  01C2               	clrf	___fladd@a+3
  4514     0435  2C40               	goto	l791
  4515     0436                     l3672:
  4516     0436  3000               	movlw	0
  4517     0437  1283               	bcf	3,5	;RP0=0, select bank0
  4518     0438  1303               	bcf	3,6	;RP1=0, select bank0
  4519     0439  00C2               	movwf	___fladd@a+3
  4520     043A  3000               	movlw	0
  4521     043B  00C1               	movwf	___fladd@a+2
  4522     043C  3000               	movlw	0
  4523     043D  00C0               	movwf	___fladd@a+1
  4524     043E  3000               	movlw	0
  4525     043F  00BF               	movwf	___fladd@a
  4526     0440                     l791:
  4527     0440  1683               	bsf	3,5	;RP0=1, select bank1
  4528     0441  1303               	bcf	3,6	;RP1=0, select bank1
  4529     0442  0822               	movf	___fladd@bexp^(0+128),w
  4530     0443  0221               	subwf	___fladd@aexp^(0+128),w
  4531     0444  1803               	skipnc
  4532     0445  2C47               	goto	u4941
  4533     0446  2C48               	goto	u4940
  4534     0447                     u4941:
  4535     0447  2C94               	goto	l3708
  4536     0448                     u4940:
  4537     0448                     l3674:
  4538     0448  1F20               	btfss	___fladd@signs^(0+128),6
  4539     0449  2C4B               	goto	u4951
  4540     044A  2C4C               	goto	u4950
  4541     044B                     u4951:
  4542     044B  2C54               	goto	l3678
  4543     044C                     u4950:
  4544     044C                     l3676:
  4545     044C  3080               	movlw	128
  4546     044D  1283               	bcf	3,5	;RP0=0, select bank0
  4547     044E  1303               	bcf	3,6	;RP1=0, select bank0
  4548     044F  00C3               	movwf	??___fladd
  4549     0450  0843               	movf	??___fladd,w
  4550     0451  1683               	bsf	3,5	;RP0=1, select bank1
  4551     0452  1303               	bcf	3,6	;RP1=0, select bank1
  4552     0453  06A0               	xorwf	___fladd@signs^(0+128),f
  4553     0454                     l3678:
  4554     0454  0822               	movf	___fladd@bexp^(0+128),w
  4555     0455  00A3               	movwf	___fladd@grs^(0+128)
  4556     0456                     l3680:
  4557     0456  0821               	movf	___fladd@aexp^(0+128),w
  4558     0457  00A2               	movwf	___fladd@bexp^(0+128)
  4559     0458                     l3682:
  4560     0458  0823               	movf	___fladd@grs^(0+128),w
  4561     0459  00A1               	movwf	___fladd@aexp^(0+128)
  4562     045A                     l3684:
  4563     045A  1283               	bcf	3,5	;RP0=0, select bank0
  4564     045B  1303               	bcf	3,6	;RP1=0, select bank0
  4565     045C  083B               	movf	___fladd@b,w
  4566     045D  1683               	bsf	3,5	;RP0=1, select bank1
  4567     045E  1303               	bcf	3,6	;RP1=0, select bank1
  4568     045F  00A3               	movwf	___fladd@grs^(0+128)
  4569     0460                     l3686:
  4570     0460  1283               	bcf	3,5	;RP0=0, select bank0
  4571     0461  1303               	bcf	3,6	;RP1=0, select bank0
  4572     0462  083F               	movf	___fladd@a,w
  4573     0463  00BB               	movwf	___fladd@b
  4574     0464                     l3688:
  4575     0464  1683               	bsf	3,5	;RP0=1, select bank1
  4576     0465  1303               	bcf	3,6	;RP1=0, select bank1
  4577     0466  0823               	movf	___fladd@grs^(0+128),w
  4578     0467  1283               	bcf	3,5	;RP0=0, select bank0
  4579     0468  1303               	bcf	3,6	;RP1=0, select bank0
  4580     0469  00BF               	movwf	___fladd@a
  4581     046A                     l3690:
  4582     046A  083C               	movf	___fladd@b+1,w
  4583     046B  1683               	bsf	3,5	;RP0=1, select bank1
  4584     046C  1303               	bcf	3,6	;RP1=0, select bank1
  4585     046D  00A3               	movwf	___fladd@grs^(0+128)
  4586     046E                     l3692:
  4587     046E  1283               	bcf	3,5	;RP0=0, select bank0
  4588     046F  1303               	bcf	3,6	;RP1=0, select bank0
  4589     0470  0840               	movf	___fladd@a+1,w
  4590     0471  00BC               	movwf	___fladd@b+1
  4591     0472                     l3694:
  4592     0472  1683               	bsf	3,5	;RP0=1, select bank1
  4593     0473  1303               	bcf	3,6	;RP1=0, select bank1
  4594     0474  0823               	movf	___fladd@grs^(0+128),w
  4595     0475  1283               	bcf	3,5	;RP0=0, select bank0
  4596     0476  1303               	bcf	3,6	;RP1=0, select bank0
  4597     0477  00C0               	movwf	___fladd@a+1
  4598     0478                     l3696:
  4599     0478  083D               	movf	___fladd@b+2,w
  4600     0479  1683               	bsf	3,5	;RP0=1, select bank1
  4601     047A  1303               	bcf	3,6	;RP1=0, select bank1
  4602     047B  00A3               	movwf	___fladd@grs^(0+128)
  4603     047C                     l3698:
  4604     047C  1283               	bcf	3,5	;RP0=0, select bank0
  4605     047D  1303               	bcf	3,6	;RP1=0, select bank0
  4606     047E  0841               	movf	___fladd@a+2,w
  4607     047F  00BD               	movwf	___fladd@b+2
  4608     0480                     l3700:
  4609     0480  1683               	bsf	3,5	;RP0=1, select bank1
  4610     0481  1303               	bcf	3,6	;RP1=0, select bank1
  4611     0482  0823               	movf	___fladd@grs^(0+128),w
  4612     0483  1283               	bcf	3,5	;RP0=0, select bank0
  4613     0484  1303               	bcf	3,6	;RP1=0, select bank0
  4614     0485  00C1               	movwf	___fladd@a+2
  4615     0486                     l3702:
  4616     0486  083E               	movf	___fladd@b+3,w
  4617     0487  1683               	bsf	3,5	;RP0=1, select bank1
  4618     0488  1303               	bcf	3,6	;RP1=0, select bank1
  4619     0489  00A3               	movwf	___fladd@grs^(0+128)
  4620     048A                     l3704:
  4621     048A  1283               	bcf	3,5	;RP0=0, select bank0
  4622     048B  1303               	bcf	3,6	;RP1=0, select bank0
  4623     048C  0842               	movf	___fladd@a+3,w
  4624     048D  00BE               	movwf	___fladd@b+3
  4625     048E                     l3706:
  4626     048E  1683               	bsf	3,5	;RP0=1, select bank1
  4627     048F  1303               	bcf	3,6	;RP1=0, select bank1
  4628     0490  0823               	movf	___fladd@grs^(0+128),w
  4629     0491  1283               	bcf	3,5	;RP0=0, select bank0
  4630     0492  1303               	bcf	3,6	;RP1=0, select bank0
  4631     0493  00C2               	movwf	___fladd@a+3
  4632     0494                     l3708:
  4633     0494  1683               	bsf	3,5	;RP0=1, select bank1
  4634     0495  1303               	bcf	3,6	;RP1=0, select bank1
  4635     0496  01A3               	clrf	___fladd@grs^(0+128)
  4636     0497                     l3710:
  4637     0497  0821               	movf	___fladd@aexp^(0+128),w
  4638     0498  1283               	bcf	3,5	;RP0=0, select bank0
  4639     0499  1303               	bcf	3,6	;RP1=0, select bank0
  4640     049A  00C3               	movwf	??___fladd
  4641     049B  01C4               	clrf	??___fladd+1
  4642     049C  0844               	movf	??___fladd+1,w
  4643     049D  00C6               	movwf	??___fladd+3
  4644     049E  1683               	bsf	3,5	;RP0=1, select bank1
  4645     049F  1303               	bcf	3,6	;RP1=0, select bank1
  4646     04A0  0822               	movf	___fladd@bexp^(0+128),w
  4647     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  4648     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  4649     04A3  0243               	subwf	??___fladd,w
  4650     04A4  00C5               	movwf	??___fladd+2
  4651     04A5  1C03               	skipc
  4652     04A6  03C6               	decf	??___fladd+3,f
  4653     04A7  0846               	movf	??___fladd+3,w
  4654     04A8  3A80               	xorlw	128
  4655     04A9  00FF               	movwf	btemp+1
  4656     04AA  3080               	movlw	128
  4657     04AB  027F               	subwf	btemp+1,w
  4658     04AC  1D03               	skipz
  4659     04AD  2CB0               	goto	u4965
  4660     04AE  301A               	movlw	26
  4661     04AF  0245               	subwf	??___fladd+2,w
  4662     04B0                     u4965:
  4663     04B0  1C03               	skipc
  4664     04B1  2CB3               	goto	u4961
  4665     04B2  2CB4               	goto	u4960
  4666     04B3                     u4961:
  4667     04B3  2CFC               	goto	l3726
  4668     04B4                     u4960:
  4669     04B4                     l3712:
  4670     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  4671     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  4672     04B6  083E               	movf	___fladd@b+3,w
  4673     04B7  043D               	iorwf	___fladd@b+2,w
  4674     04B8  043C               	iorwf	___fladd@b+1,w
  4675     04B9  043B               	iorwf	___fladd@b,w
  4676     04BA  1D03               	skipz
  4677     04BB  2CBD               	goto	u4971
  4678     04BC  2CBF               	goto	u4970
  4679     04BD                     u4971:
  4680     04BD  3001               	movlw	1
  4681     04BE  2CC0               	goto	u4980
  4682     04BF                     u4970:
  4683     04BF  3000               	movlw	0
  4684     04C0                     u4980:
  4685     04C0  1683               	bsf	3,5	;RP0=1, select bank1
  4686     04C1  1303               	bcf	3,6	;RP1=0, select bank1
  4687     04C2  00A3               	movwf	___fladd@grs^(0+128)
  4688     04C3  3000               	movlw	0
  4689     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  4690     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  4691     04C6  00BE               	movwf	___fladd@b+3
  4692     04C7  3000               	movlw	0
  4693     04C8  00BD               	movwf	___fladd@b+2
  4694     04C9  3000               	movlw	0
  4695     04CA  00BC               	movwf	___fladd@b+1
  4696     04CB  3000               	movlw	0
  4697     04CC  00BB               	movwf	___fladd@b
  4698     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  4699     04CE  1303               	bcf	3,6	;RP1=0, select bank1
  4700     04CF  0821               	movf	___fladd@aexp^(0+128),w
  4701     04D0  00A2               	movwf	___fladd@bexp^(0+128)
  4702     04D1  2D04               	goto	l795
  4703     04D2                     l797:
  4704     04D2  1C23               	btfss	___fladd@grs^(0+128),0
  4705     04D3  2CD5               	goto	u4991
  4706     04D4  2CD6               	goto	u4990
  4707     04D5                     u4991:
  4708     04D5  2CE1               	goto	l3716
  4709     04D6                     u4990:
  4710     04D6                     l3714:
  4711     04D6  0823               	movf	___fladd@grs^(0+128),w
  4712     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  4713     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  4714     04D9  00C3               	movwf	??___fladd
  4715     04DA  1003               	clrc
  4716     04DB  0C43               	rrf	??___fladd,w
  4717     04DC  3801               	iorlw	1
  4718     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  4719     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  4720     04DF  00A3               	movwf	___fladd@grs^(0+128)
  4721     04E0  2CE3               	goto	l3718
  4722     04E1                     l3716:
  4723     04E1  1003               	clrc
  4724     04E2  0CA3               	rrf	___fladd@grs^(0+128),f
  4725     04E3                     l3718:
  4726     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  4727     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  4728     04E5  1C3B               	btfss	___fladd@b,0
  4729     04E6  2CE8               	goto	u5001
  4730     04E7  2CE9               	goto	u5000
  4731     04E8                     u5001:
  4732     04E8  2CEC               	goto	l3722
  4733     04E9                     u5000:
  4734     04E9                     l3720:
  4735     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  4736     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  4737     04EB  17A3               	bsf	___fladd@grs^(0+128),7
  4738     04EC                     l3722:
  4739     04EC  3001               	movlw	1
  4740     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  4741     04EE  00C3               	movwf	??___fladd
  4742     04EF                     u5015:
  4743     04EF  0D3E               	rlf	___fladd@b+3,w
  4744     04F0  0CBE               	rrf	___fladd@b+3,f
  4745     04F1  0CBD               	rrf	___fladd@b+2,f
  4746     04F2  0CBC               	rrf	___fladd@b+1,f
  4747     04F3  0CBB               	rrf	___fladd@b,f
  4748     04F4  0BC3               	decfsz	??___fladd& (0+127),f
  4749     04F5  2CEF               	goto	u5015
  4750     04F6                     l3724:
  4751     04F6  3001               	movlw	1
  4752     04F7  00C3               	movwf	??___fladd
  4753     04F8  0843               	movf	??___fladd,w
  4754     04F9  1683               	bsf	3,5	;RP0=1, select bank1
  4755     04FA  1303               	bcf	3,6	;RP1=0, select bank1
  4756     04FB  07A2               	addwf	___fladd@bexp^(0+128),f
  4757     04FC                     l3726:
  4758     04FC  1683               	bsf	3,5	;RP0=1, select bank1
  4759     04FD  1303               	bcf	3,6	;RP1=0, select bank1
  4760     04FE  0821               	movf	___fladd@aexp^(0+128),w
  4761     04FF  0222               	subwf	___fladd@bexp^(0+128),w
  4762     0500  1C03               	skipc
  4763     0501  2D03               	goto	u5021
  4764     0502  2D04               	goto	u5020
  4765     0503                     u5021:
  4766     0503  2CD2               	goto	l797
  4767     0504                     u5020:
  4768     0504                     l795:
  4769     0504  1B20               	btfsc	___fladd@signs^(0+128),6
  4770     0505  2D07               	goto	u5031
  4771     0506  2D08               	goto	u5030
  4772     0507                     u5031:
  4773     0507  2D62               	goto	l3752
  4774     0508                     u5030:
  4775     0508                     l3728:
  4776     0508  0822               	movf	___fladd@bexp^(0+128),w
  4777     0509  1D03               	btfss	3,2
  4778     050A  2D0C               	goto	u5041
  4779     050B  2D0D               	goto	u5040
  4780     050C                     u5041:
  4781     050C  2D18               	goto	l3734
  4782     050D                     u5040:
  4783     050D                     l3730:
  4784     050D  3000               	movlw	0
  4785     050E  1283               	bcf	3,5	;RP0=0, select bank0
  4786     050F  1303               	bcf	3,6	;RP1=0, select bank0
  4787     0510  00BE               	movwf	?___fladd+3
  4788     0511  3000               	movlw	0
  4789     0512  00BD               	movwf	?___fladd+2
  4790     0513  3000               	movlw	0
  4791     0514  00BC               	movwf	?___fladd+1
  4792     0515  3000               	movlw	0
  4793     0516  00BB               	movwf	?___fladd
  4794     0517  2EC2               	goto	l804
  4795     0518                     l3734:
  4796     0518  1283               	bcf	3,5	;RP0=0, select bank0
  4797     0519  1303               	bcf	3,6	;RP1=0, select bank0
  4798     051A  083F               	movf	___fladd@a,w
  4799     051B  07BB               	addwf	___fladd@b,f
  4800     051C  0840               	movf	___fladd@a+1,w
  4801     051D  1103               	clrz
  4802     051E  1803               	skipnc
  4803     051F  3E01               	addlw	1
  4804     0520  1903               	skipnz
  4805     0521  2D23               	goto	u5051
  4806     0522  07BC               	addwf	___fladd@b+1,f
  4807     0523                     u5051:
  4808     0523  0841               	movf	___fladd@a+2,w
  4809     0524  1103               	clrz
  4810     0525  1803               	skipnc
  4811     0526  3E01               	addlw	1
  4812     0527  1903               	skipnz
  4813     0528  2D2A               	goto	u5052
  4814     0529  07BD               	addwf	___fladd@b+2,f
  4815     052A                     u5052:
  4816     052A  0842               	movf	___fladd@a+3,w
  4817     052B  1103               	clrz
  4818     052C  1803               	skipnc
  4819     052D  3E01               	addlw	1
  4820     052E  1903               	skipnz
  4821     052F  2D31               	goto	u5053
  4822     0530  07BE               	addwf	___fladd@b+3,f
  4823     0531                     u5053:
  4824     0531                     l3736:
  4825     0531  1C3E               	btfss	___fladd@b+3,0
  4826     0532  2D34               	goto	u5061
  4827     0533  2D35               	goto	u5060
  4828     0534                     u5061:
  4829     0534  2E28               	goto	l3786
  4830     0535                     u5060:
  4831     0535                     l3738:
  4832     0535  1683               	bsf	3,5	;RP0=1, select bank1
  4833     0536  1303               	bcf	3,6	;RP1=0, select bank1
  4834     0537  1C23               	btfss	___fladd@grs^(0+128),0
  4835     0538  2D3A               	goto	u5071
  4836     0539  2D3B               	goto	u5070
  4837     053A                     u5071:
  4838     053A  2D46               	goto	l3742
  4839     053B                     u5070:
  4840     053B                     l3740:
  4841     053B  0823               	movf	___fladd@grs^(0+128),w
  4842     053C  1283               	bcf	3,5	;RP0=0, select bank0
  4843     053D  1303               	bcf	3,6	;RP1=0, select bank0
  4844     053E  00C3               	movwf	??___fladd
  4845     053F  1003               	clrc
  4846     0540  0C43               	rrf	??___fladd,w
  4847     0541  3801               	iorlw	1
  4848     0542  1683               	bsf	3,5	;RP0=1, select bank1
  4849     0543  1303               	bcf	3,6	;RP1=0, select bank1
  4850     0544  00A3               	movwf	___fladd@grs^(0+128)
  4851     0545  2D48               	goto	l3744
  4852     0546                     l3742:
  4853     0546  1003               	clrc
  4854     0547  0CA3               	rrf	___fladd@grs^(0+128),f
  4855     0548                     l3744:
  4856     0548  1283               	bcf	3,5	;RP0=0, select bank0
  4857     0549  1303               	bcf	3,6	;RP1=0, select bank0
  4858     054A  1C3B               	btfss	___fladd@b,0
  4859     054B  2D4D               	goto	u5081
  4860     054C  2D4E               	goto	u5080
  4861     054D                     u5081:
  4862     054D  2D51               	goto	l3748
  4863     054E                     u5080:
  4864     054E                     l3746:
  4865     054E  1683               	bsf	3,5	;RP0=1, select bank1
  4866     054F  1303               	bcf	3,6	;RP1=0, select bank1
  4867     0550  17A3               	bsf	___fladd@grs^(0+128),7
  4868     0551                     l3748:
  4869     0551  3001               	movlw	1
  4870     0552  1283               	bcf	3,5	;RP0=0, select bank0
  4871     0553  00C3               	movwf	??___fladd
  4872     0554                     u5095:
  4873     0554  0D3E               	rlf	___fladd@b+3,w
  4874     0555  0CBE               	rrf	___fladd@b+3,f
  4875     0556  0CBD               	rrf	___fladd@b+2,f
  4876     0557  0CBC               	rrf	___fladd@b+1,f
  4877     0558  0CBB               	rrf	___fladd@b,f
  4878     0559  0BC3               	decfsz	??___fladd& (0+127),f
  4879     055A  2D54               	goto	u5095
  4880     055B                     l3750:
  4881     055B  3001               	movlw	1
  4882     055C  00C3               	movwf	??___fladd
  4883     055D  0843               	movf	??___fladd,w
  4884     055E  1683               	bsf	3,5	;RP0=1, select bank1
  4885     055F  1303               	bcf	3,6	;RP1=0, select bank1
  4886     0560  07A2               	addwf	___fladd@bexp^(0+128),f
  4887     0561  2E28               	goto	l3786
  4888     0562                     l3752:
  4889     0562  1283               	bcf	3,5	;RP0=0, select bank0
  4890     0563  1303               	bcf	3,6	;RP1=0, select bank0
  4891     0564  083E               	movf	___fladd@b+3,w
  4892     0565  3A80               	xorlw	128
  4893     0566  00FF               	movwf	btemp+1
  4894     0567  0842               	movf	___fladd@a+3,w
  4895     0568  3A80               	xorlw	128
  4896     0569  027F               	subwf	btemp+1,w
  4897     056A  1D03               	skipz
  4898     056B  2D76               	goto	u5103
  4899     056C  0841               	movf	___fladd@a+2,w
  4900     056D  023D               	subwf	___fladd@b+2,w
  4901     056E  1D03               	skipz
  4902     056F  2D76               	goto	u5103
  4903     0570  0840               	movf	___fladd@a+1,w
  4904     0571  023C               	subwf	___fladd@b+1,w
  4905     0572  1D03               	skipz
  4906     0573  2D76               	goto	u5103
  4907     0574  083F               	movf	___fladd@a,w
  4908     0575  023B               	subwf	___fladd@b,w
  4909     0576                     u5103:
  4910     0576  1803               	skipnc
  4911     0577  2D79               	goto	u5101
  4912     0578  2D7A               	goto	u5100
  4913     0579                     u5101:
  4914     0579  2DD6               	goto	l3762
  4915     057A                     u5100:
  4916     057A                     l3754:
  4917     057A  30FF               	movlw	255
  4918     057B  00C3               	movwf	??___fladd
  4919     057C  30FF               	movlw	255
  4920     057D  00C4               	movwf	??___fladd+1
  4921     057E  30FF               	movlw	255
  4922     057F  00C5               	movwf	??___fladd+2
  4923     0580  30FF               	movlw	255
  4924     0581  00C6               	movwf	??___fladd+3
  4925     0582  083F               	movf	___fladd@a,w
  4926     0583  00C7               	movwf	??___fladd+4
  4927     0584  0840               	movf	___fladd@a+1,w
  4928     0585  00C8               	movwf	??___fladd+5
  4929     0586  0841               	movf	___fladd@a+2,w
  4930     0587  00C9               	movwf	??___fladd+6
  4931     0588  0842               	movf	___fladd@a+3,w
  4932     0589  00CA               	movwf	??___fladd+7
  4933     058A  083B               	movf	___fladd@b,w
  4934     058B  02C7               	subwf	??___fladd+4,f
  4935     058C  083C               	movf	___fladd@b+1,w
  4936     058D  1C03               	skipc
  4937     058E  0F3C               	incfsz	___fladd@b+1,w
  4938     058F  2D91               	goto	u5111
  4939     0590  2D92               	goto	u5112
  4940     0591                     u5111:
  4941     0591  02C8               	subwf	??___fladd+5,f
  4942     0592                     u5112:
  4943     0592  083D               	movf	___fladd@b+2,w
  4944     0593  1C03               	skipc
  4945     0594  0F3D               	incfsz	___fladd@b+2,w
  4946     0595  2D97               	goto	u5113
  4947     0596  2D98               	goto	u5114
  4948     0597                     u5113:
  4949     0597  02C9               	subwf	??___fladd+6,f
  4950     0598                     u5114:
  4951     0598  083E               	movf	___fladd@b+3,w
  4952     0599  1C03               	skipc
  4953     059A  0F3E               	incfsz	___fladd@b+3,w
  4954     059B  2D9D               	goto	u5115
  4955     059C  2D9E               	goto	u5116
  4956     059D                     u5115:
  4957     059D  02CA               	subwf	??___fladd+7,f
  4958     059E                     u5116:
  4959     059E  0847               	movf	??___fladd+4,w
  4960     059F  07C3               	addwf	??___fladd,f
  4961     05A0  0848               	movf	??___fladd+5,w
  4962     05A1  1803               	skipnc
  4963     05A2  0F48               	incfsz	??___fladd+5,w
  4964     05A3  2DA5               	goto	u5120
  4965     05A4  2DA6               	goto	u5121
  4966     05A5                     u5120:
  4967     05A5  07C4               	addwf	??___fladd+1,f
  4968     05A6                     u5121:
  4969     05A6  0849               	movf	??___fladd+6,w
  4970     05A7  1803               	skipnc
  4971     05A8  0F49               	incfsz	??___fladd+6,w
  4972     05A9  2DAB               	goto	u5122
  4973     05AA  2DAC               	goto	u5123
  4974     05AB                     u5122:
  4975     05AB  07C5               	addwf	??___fladd+2,f
  4976     05AC                     u5123:
  4977     05AC  084A               	movf	??___fladd+7,w
  4978     05AD  1803               	skipnc
  4979     05AE  0A4A               	incf	??___fladd+7,w
  4980     05AF  07C6               	addwf	??___fladd+3,f
  4981     05B0  0846               	movf	??___fladd+3,w
  4982     05B1  00BE               	movwf	___fladd@b+3
  4983     05B2  0845               	movf	??___fladd+2,w
  4984     05B3  00BD               	movwf	___fladd@b+2
  4985     05B4  0844               	movf	??___fladd+1,w
  4986     05B5  00BC               	movwf	___fladd@b+1
  4987     05B6  0843               	movf	??___fladd,w
  4988     05B7  00BB               	movwf	___fladd@b
  4989     05B8                     l3756:
  4990     05B8  3080               	movlw	128
  4991     05B9  00C3               	movwf	??___fladd
  4992     05BA  0843               	movf	??___fladd,w
  4993     05BB  1683               	bsf	3,5	;RP0=1, select bank1
  4994     05BC  1303               	bcf	3,6	;RP1=0, select bank1
  4995     05BD  06A0               	xorwf	___fladd@signs^(0+128),f
  4996     05BE  09A3               	comf	___fladd@grs^(0+128),f
  4997     05BF  0AA3               	incf	___fladd@grs^(0+128),f
  4998     05C0                     l3758:
  4999     05C0  0823               	movf	___fladd@grs^(0+128),w
  5000     05C1  1D03               	btfss	3,2
  5001     05C2  2DC4               	goto	u5131
  5002     05C3  2DC5               	goto	u5130
  5003     05C4                     u5131:
  5004     05C4  2DE4               	goto	l812
  5005     05C5                     u5130:
  5006     05C5                     l3760:
  5007     05C5  3001               	movlw	1
  5008     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  5009     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  5010     05C8  07BB               	addwf	___fladd@b,f
  5011     05C9  3000               	movlw	0
  5012     05CA  1803               	skipnc
  5013     05CB  3001               	movlw	1
  5014     05CC  07BC               	addwf	___fladd@b+1,f
  5015     05CD  3000               	movlw	0
  5016     05CE  1803               	skipnc
  5017     05CF  3001               	movlw	1
  5018     05D0  07BD               	addwf	___fladd@b+2,f
  5019     05D1  3000               	movlw	0
  5020     05D2  1803               	skipnc
  5021     05D3  3001               	movlw	1
  5022     05D4  07BE               	addwf	___fladd@b+3,f
  5023     05D5  2DE4               	goto	l812
  5024     05D6                     l3762:
  5025     05D6  083F               	movf	___fladd@a,w
  5026     05D7  02BB               	subwf	___fladd@b,f
  5027     05D8  0840               	movf	___fladd@a+1,w
  5028     05D9  1C03               	skipc
  5029     05DA  0F40               	incfsz	___fladd@a+1,w
  5030     05DB  02BC               	subwf	___fladd@b+1,f
  5031     05DC  0841               	movf	___fladd@a+2,w
  5032     05DD  1C03               	skipc
  5033     05DE  0F41               	incfsz	___fladd@a+2,w
  5034     05DF  02BD               	subwf	___fladd@b+2,f
  5035     05E0  0842               	movf	___fladd@a+3,w
  5036     05E1  1C03               	skipc
  5037     05E2  0F42               	incfsz	___fladd@a+3,w
  5038     05E3  02BE               	subwf	___fladd@b+3,f
  5039     05E4                     l812:
  5040     05E4  1283               	bcf	3,5	;RP0=0, select bank0
  5041     05E5  083E               	movf	___fladd@b+3,w
  5042     05E6  043D               	iorwf	___fladd@b+2,w
  5043     05E7  043C               	iorwf	___fladd@b+1,w
  5044     05E8  043B               	iorwf	___fladd@b,w
  5045     05E9  1D03               	skipz
  5046     05EA  2DEC               	goto	u5141
  5047     05EB  2DED               	goto	u5140
  5048     05EC                     u5141:
  5049     05EC  2E23               	goto	l3784
  5050     05ED                     u5140:
  5051     05ED                     l3764:
  5052     05ED  1683               	bsf	3,5	;RP0=1, select bank1
  5053     05EE  1303               	bcf	3,6	;RP1=0, select bank1
  5054     05EF  0823               	movf	___fladd@grs^(0+128),w
  5055     05F0  1D03               	btfss	3,2
  5056     05F1  2DF3               	goto	u5151
  5057     05F2  2DF4               	goto	u5150
  5058     05F3                     u5151:
  5059     05F3  2E23               	goto	l3784
  5060     05F4                     u5150:
  5061     05F4                     l3766:
  5062     05F4  3000               	movlw	0
  5063     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  5064     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  5065     05F7  00BE               	movwf	?___fladd+3
  5066     05F8  3000               	movlw	0
  5067     05F9  00BD               	movwf	?___fladd+2
  5068     05FA  3000               	movlw	0
  5069     05FB  00BC               	movwf	?___fladd+1
  5070     05FC  3000               	movlw	0
  5071     05FD  00BB               	movwf	?___fladd
  5072     05FE  2EC2               	goto	l804
  5073     05FF                     l3770:
  5074     05FF  3001               	movlw	1
  5075     0600  00C3               	movwf	??___fladd
  5076     0601                     u5165:
  5077     0601  1003               	clrc
  5078     0602  0DBB               	rlf	___fladd@b,f
  5079     0603  0DBC               	rlf	___fladd@b+1,f
  5080     0604  0DBD               	rlf	___fladd@b+2,f
  5081     0605  0DBE               	rlf	___fladd@b+3,f
  5082     0606  0BC3               	decfsz	??___fladd,f
  5083     0607  2E01               	goto	u5165
  5084     0608                     l3772:
  5085     0608  1683               	bsf	3,5	;RP0=1, select bank1
  5086     0609  1303               	bcf	3,6	;RP1=0, select bank1
  5087     060A  1FA3               	btfss	___fladd@grs^(0+128),7
  5088     060B  2E0D               	goto	u5171
  5089     060C  2E0E               	goto	u5170
  5090     060D                     u5171:
  5091     060D  2E11               	goto	l816
  5092     060E                     u5170:
  5093     060E                     l3774:
  5094     060E  1283               	bcf	3,5	;RP0=0, select bank0
  5095     060F  1303               	bcf	3,6	;RP1=0, select bank0
  5096     0610  143B               	bsf	___fladd@b,0
  5097     0611                     l816:
  5098     0611  1683               	bsf	3,5	;RP0=1, select bank1
  5099     0612  1303               	bcf	3,6	;RP1=0, select bank1
  5100     0613  1C23               	btfss	___fladd@grs^(0+128),0
  5101     0614  2E16               	goto	u5181
  5102     0615  2E17               	goto	u5180
  5103     0616                     u5181:
  5104     0616  2E1A               	goto	l3778
  5105     0617                     u5180:
  5106     0617                     l3776:
  5107     0617  1403               	setc
  5108     0618  0DA3               	rlf	___fladd@grs^(0+128),f
  5109     0619  2E1C               	goto	l3780
  5110     061A                     l3778:
  5111     061A  1003               	clrc
  5112     061B  0DA3               	rlf	___fladd@grs^(0+128),f
  5113     061C                     l3780:
  5114     061C  0822               	movf	___fladd@bexp^(0+128),w
  5115     061D  1903               	btfsc	3,2
  5116     061E  2E20               	goto	u5191
  5117     061F  2E21               	goto	u5190
  5118     0620                     u5191:
  5119     0620  2E23               	goto	l3784
  5120     0621                     u5190:
  5121     0621                     l3782:
  5122     0621  3001               	movlw	1
  5123     0622  02A2               	subwf	___fladd@bexp^(0+128),f
  5124     0623                     l3784:
  5125     0623  1283               	bcf	3,5	;RP0=0, select bank0
  5126     0624  1FBD               	btfss	___fladd@b+2,7
  5127     0625  2E27               	goto	u5201
  5128     0626  2E28               	goto	u5200
  5129     0627                     u5201:
  5130     0627  2DFF               	goto	l3770
  5131     0628                     u5200:
  5132     0628                     l3786:
  5133     0628  1683               	bsf	3,5	;RP0=1, select bank1
  5134     0629  1303               	bcf	3,6	;RP1=0, select bank1
  5135     062A  01A1               	clrf	___fladd@aexp^(0+128)
  5136     062B                     l3788:
  5137     062B  1FA3               	btfss	___fladd@grs^(0+128),7
  5138     062C  2E2E               	goto	u5211
  5139     062D  2E2F               	goto	u5210
  5140     062E                     u5211:
  5141     062E  2E41               	goto	l3796
  5142     062F                     u5210:
  5143     062F                     l3790:
  5144     062F  0823               	movf	___fladd@grs^(0+128),w
  5145     0630  397F               	andlw	127
  5146     0631  1903               	btfsc	3,2
  5147     0632  2E34               	goto	u5221
  5148     0633  2E35               	goto	u5220
  5149     0634                     u5221:
  5150     0634  2E3A               	goto	l822
  5151     0635                     u5220:
  5152     0635                     l3792:
  5153     0635  1683               	bsf	3,5	;RP0=1, select bank1
  5154     0636  1303               	bcf	3,6	;RP1=0, select bank1
  5155     0637  01A1               	clrf	___fladd@aexp^(0+128)
  5156     0638  0AA1               	incf	___fladd@aexp^(0+128),f
  5157     0639  2E41               	goto	l3796
  5158     063A                     l822:
  5159     063A  1283               	bcf	3,5	;RP0=0, select bank0
  5160     063B  1303               	bcf	3,6	;RP1=0, select bank0
  5161     063C  1C3B               	btfss	___fladd@b,0
  5162     063D  2E3F               	goto	u5231
  5163     063E  2E40               	goto	u5230
  5164     063F                     u5231:
  5165     063F  2E41               	goto	l3796
  5166     0640                     u5230:
  5167     0640  2E35               	goto	l3792
  5168     0641                     l3796:
  5169     0641  1683               	bsf	3,5	;RP0=1, select bank1
  5170     0642  1303               	bcf	3,6	;RP1=0, select bank1
  5171     0643  0821               	movf	___fladd@aexp^(0+128),w
  5172     0644  1903               	btfsc	3,2
  5173     0645  2E47               	goto	u5241
  5174     0646  2E48               	goto	u5240
  5175     0647                     u5241:
  5176     0647  2E84               	goto	l825
  5177     0648                     u5240:
  5178     0648                     l3798:
  5179     0648  3001               	movlw	1
  5180     0649  1283               	bcf	3,5	;RP0=0, select bank0
  5181     064A  1303               	bcf	3,6	;RP1=0, select bank0
  5182     064B  07BB               	addwf	___fladd@b,f
  5183     064C  3000               	movlw	0
  5184     064D  1803               	skipnc
  5185     064E  3001               	movlw	1
  5186     064F  07BC               	addwf	___fladd@b+1,f
  5187     0650  3000               	movlw	0
  5188     0651  1803               	skipnc
  5189     0652  3001               	movlw	1
  5190     0653  07BD               	addwf	___fladd@b+2,f
  5191     0654  3000               	movlw	0
  5192     0655  1803               	skipnc
  5193     0656  3001               	movlw	1
  5194     0657  07BE               	addwf	___fladd@b+3,f
  5195     0658                     l3800:
  5196     0658  1C3E               	btfss	___fladd@b+3,0
  5197     0659  2E5B               	goto	u5251
  5198     065A  2E5C               	goto	u5250
  5199     065B                     u5251:
  5200     065B  2E84               	goto	l825
  5201     065C                     u5250:
  5202     065C                     l3802:
  5203     065C  083B               	movf	___fladd@b,w
  5204     065D  00C3               	movwf	??___fladd
  5205     065E  083C               	movf	___fladd@b+1,w
  5206     065F  00C4               	movwf	??___fladd+1
  5207     0660  083D               	movf	___fladd@b+2,w
  5208     0661  00C5               	movwf	??___fladd+2
  5209     0662  083E               	movf	___fladd@b+3,w
  5210     0663  00C6               	movwf	??___fladd+3
  5211     0664  3001               	movlw	1
  5212     0665  00C7               	movwf	??___fladd+4
  5213     0666                     u5265:
  5214     0666  0D46               	rlf	??___fladd+3,w
  5215     0667  0CC6               	rrf	??___fladd+3,f
  5216     0668  0CC5               	rrf	??___fladd+2,f
  5217     0669  0CC4               	rrf	??___fladd+1,f
  5218     066A  0CC3               	rrf	??___fladd,f
  5219     066B                     u5260:
  5220     066B  0BC7               	decfsz	??___fladd+4,f
  5221     066C  2E66               	goto	u5265
  5222     066D  0846               	movf	??___fladd+3,w
  5223     066E  00BE               	movwf	___fladd@b+3
  5224     066F  0845               	movf	??___fladd+2,w
  5225     0670  00BD               	movwf	___fladd@b+2
  5226     0671  0844               	movf	??___fladd+1,w
  5227     0672  00BC               	movwf	___fladd@b+1
  5228     0673  0843               	movf	??___fladd,w
  5229     0674  00BB               	movwf	___fladd@b
  5230     0675  1683               	bsf	3,5	;RP0=1, select bank1
  5231     0676  1303               	bcf	3,6	;RP1=0, select bank1
  5232     0677  0A22               	incf	___fladd@bexp^(0+128),w
  5233     0678  1903               	btfsc	3,2
  5234     0679  2E7B               	goto	u5271
  5235     067A  2E7C               	goto	u5270
  5236     067B                     u5271:
  5237     067B  2E84               	goto	l825
  5238     067C                     u5270:
  5239     067C                     l3804:
  5240     067C  3001               	movlw	1
  5241     067D  1283               	bcf	3,5	;RP0=0, select bank0
  5242     067E  1303               	bcf	3,6	;RP1=0, select bank0
  5243     067F  00C3               	movwf	??___fladd
  5244     0680  0843               	movf	??___fladd,w
  5245     0681  1683               	bsf	3,5	;RP0=1, select bank1
  5246     0682  1303               	bcf	3,6	;RP1=0, select bank1
  5247     0683  07A2               	addwf	___fladd@bexp^(0+128),f
  5248     0684                     l825:
  5249     0684  1683               	bsf	3,5	;RP0=1, select bank1
  5250     0685  1303               	bcf	3,6	;RP1=0, select bank1
  5251     0686  0A22               	incf	___fladd@bexp^(0+128),w
  5252     0687  1903               	btfsc	3,2
  5253     0688  2E8A               	goto	u5281
  5254     0689  2E8B               	goto	u5280
  5255     068A                     u5281:
  5256     068A  2E90               	goto	l3808
  5257     068B                     u5280:
  5258     068B                     l3806:
  5259     068B  0822               	movf	___fladd@bexp^(0+128),w
  5260     068C  1D03               	btfss	3,2
  5261     068D  2E8F               	goto	u5291
  5262     068E  2E90               	goto	u5290
  5263     068F                     u5291:
  5264     068F  2EA2               	goto	l3814
  5265     0690                     u5290:
  5266     0690                     l3808:
  5267     0690  3000               	movlw	0
  5268     0691  1283               	bcf	3,5	;RP0=0, select bank0
  5269     0692  1303               	bcf	3,6	;RP1=0, select bank0
  5270     0693  00BE               	movwf	___fladd@b+3
  5271     0694  3000               	movlw	0
  5272     0695  00BD               	movwf	___fladd@b+2
  5273     0696  3000               	movlw	0
  5274     0697  00BC               	movwf	___fladd@b+1
  5275     0698  3000               	movlw	0
  5276     0699  00BB               	movwf	___fladd@b
  5277     069A                     l3810:
  5278     069A  1683               	bsf	3,5	;RP0=1, select bank1
  5279     069B  1303               	bcf	3,6	;RP1=0, select bank1
  5280     069C  0822               	movf	___fladd@bexp^(0+128),w
  5281     069D  1D03               	btfss	3,2
  5282     069E  2EA0               	goto	u5301
  5283     069F  2EA1               	goto	u5300
  5284     06A0                     u5301:
  5285     06A0  2EA2               	goto	l3814
  5286     06A1                     u5300:
  5287     06A1                     l3812:
  5288     06A1  01A0               	clrf	___fladd@signs^(0+128)
  5289     06A2                     l3814:
  5290     06A2  1C22               	btfss	___fladd@bexp^(0+128),0
  5291     06A3  2EA5               	goto	u5311
  5292     06A4  2EA6               	goto	u5310
  5293     06A5                     u5311:
  5294     06A5  2EAA               	goto	l3818
  5295     06A6                     u5310:
  5296     06A6                     l3816:
  5297     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  5298     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  5299     06A8  17BD               	bsf	___fladd@b+2,7
  5300     06A9  2EB0               	goto	l833
  5301     06AA                     l3818:
  5302     06AA  307F               	movlw	127
  5303     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  5304     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  5305     06AD  00C3               	movwf	??___fladd
  5306     06AE  0843               	movf	??___fladd,w
  5307     06AF  05BD               	andwf	___fladd@b+2,f
  5308     06B0                     l833:
  5309     06B0  1683               	bsf	3,5	;RP0=1, select bank1
  5310     06B1  1303               	bcf	3,6	;RP1=0, select bank1
  5311     06B2  0822               	movf	___fladd@bexp^(0+128),w
  5312     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  5313     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  5314     06B5  00C3               	movwf	??___fladd
  5315     06B6  1003               	clrc
  5316     06B7  0C43               	rrf	??___fladd,w
  5317     06B8  00BE               	movwf	___fladd@b+3
  5318     06B9                     l3820:
  5319     06B9  1683               	bsf	3,5	;RP0=1, select bank1
  5320     06BA  1303               	bcf	3,6	;RP1=0, select bank1
  5321     06BB  1FA0               	btfss	___fladd@signs^(0+128),7
  5322     06BC  2EBE               	goto	u5321
  5323     06BD  2EBF               	goto	u5320
  5324     06BE                     u5321:
  5325     06BE  2EC2               	goto	l834
  5326     06BF                     u5320:
  5327     06BF                     l3822:
  5328     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5329     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5330     06C1  17BE               	bsf	___fladd@b+3,7
  5331     06C2                     l834:
  5332     06C2                     l804:
  5333     06C2  0008               	return
  5334     06C3                     __end_of___fladd:
  5335                           
  5336                           	psect	text15
  5337     0024                     __ptext15:	
  5338 ;; *************** function ___flmul *****************
  5339 ;; Defined at:
  5340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  b               4   12[BANK1 ] unsigned char 
  5343 ;;  a               4   16[BANK1 ] unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  prod            4   32[BANK1 ] struct .
  5346 ;;  grs             4   27[BANK1 ] unsigned long 
  5347 ;;  temp            2   36[BANK1 ] struct .
  5348 ;;  bexp            1   31[BANK1 ] unsigned char 
  5349 ;;  aexp            1   26[BANK1 ] unsigned char 
  5350 ;;  sign            1   25[BANK1 ] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  4   12[BANK1 ] unsigned char 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         0       0       8       0       0
  5361 ;;      Locals:         0       0      13       0       0
  5362 ;;      Temps:          0       0       5       0       0
  5363 ;;      Totals:         0       0      26       0       0
  5364 ;;Total ram usage:       26 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; Hardware stack levels required when called: 4
  5367 ;; This function calls:
  5368 ;;		__Umul8_16
  5369 ;; This function is called by:
  5370 ;;		_LcdALL_map
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374     0024                     ___flmul:	
  5375                           ;psect for function ___flmul
  5376                           
  5377     0024                     l3830:	
  5378                           ;incstack = 0
  5379                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5380                           
  5381     0024  1683               	bsf	3,5	;RP0=1, select bank1
  5382     0025  1303               	bcf	3,6	;RP1=0, select bank1
  5383     0026  082F               	movf	(___flmul@b^(0+128)+3),w
  5384     0027  3980               	andlw	128
  5385     0028  00B9               	movwf	___flmul@sign^(0+128)
  5386     0029                     l3832:
  5387     0029  082F               	movf	(___flmul@b^(0+128)+3),w
  5388     002A  00B4               	movwf	??___flmul^(0+128)
  5389     002B  0734               	addwf	??___flmul^(0+128),w
  5390     002C  00BF               	movwf	___flmul@bexp^(0+128)
  5391     002D                     l3834:
  5392     002D  1FAE               	btfss	(___flmul@b^(0+128)+2),7
  5393     002E  2830               	goto	u5331
  5394     002F  2831               	goto	u5330
  5395     0030                     u5331:
  5396     0030  2832               	goto	l3838
  5397     0031                     u5330:
  5398     0031                     l3836:
  5399     0031  143F               	bsf	___flmul@bexp^(0+128),0
  5400     0032                     l3838:
  5401     0032  083F               	movf	___flmul@bexp^(0+128),w
  5402     0033  1903               	btfsc	3,2
  5403     0034  2836               	goto	u5341
  5404     0035  2837               	goto	u5340
  5405     0036                     u5341:
  5406     0036  2846               	goto	l3846
  5407     0037                     u5340:
  5408     0037                     l3840:
  5409     0037  0A3F               	incf	___flmul@bexp^(0+128),w
  5410     0038  1D03               	btfss	3,2
  5411     0039  283B               	goto	u5351
  5412     003A  283C               	goto	u5350
  5413     003B                     u5351:
  5414     003B  2844               	goto	l3844
  5415     003C                     u5350:
  5416     003C                     l3842:
  5417     003C  3000               	movlw	0
  5418     003D  00AF               	movwf	(___flmul@b+3)^(0+128)
  5419     003E  3000               	movlw	0
  5420     003F  00AE               	movwf	(___flmul@b+2)^(0+128)
  5421     0040  3000               	movlw	0
  5422     0041  00AD               	movwf	(___flmul@b+1)^(0+128)
  5423     0042  3000               	movlw	0
  5424     0043  00AC               	movwf	___flmul@b^(0+128)
  5425     0044                     l3844:
  5426     0044  17AE               	bsf	(___flmul@b^(0+128)+2),7
  5427     0045  284E               	goto	l3848
  5428     0046                     l3846:
  5429     0046  3000               	movlw	0
  5430     0047  00AF               	movwf	(___flmul@b+3)^(0+128)
  5431     0048  3000               	movlw	0
  5432     0049  00AE               	movwf	(___flmul@b+2)^(0+128)
  5433     004A  3000               	movlw	0
  5434     004B  00AD               	movwf	(___flmul@b+1)^(0+128)
  5435     004C  3000               	movlw	0
  5436     004D  00AC               	movwf	___flmul@b^(0+128)
  5437     004E                     l3848:
  5438     004E  0833               	movf	(___flmul@a^(0+128)+3),w
  5439     004F  3980               	andlw	128
  5440     0050  00B4               	movwf	??___flmul^(0+128)
  5441     0051  0834               	movf	??___flmul^(0+128),w
  5442     0052  06B9               	xorwf	___flmul@sign^(0+128),f
  5443     0053                     l3850:
  5444     0053  0833               	movf	(___flmul@a^(0+128)+3),w
  5445     0054  00B4               	movwf	??___flmul^(0+128)
  5446     0055  0734               	addwf	??___flmul^(0+128),w
  5447     0056  00BA               	movwf	___flmul@aexp^(0+128)
  5448     0057                     l3852:
  5449     0057  1FB2               	btfss	(___flmul@a^(0+128)+2),7
  5450     0058  285A               	goto	u5361
  5451     0059  285B               	goto	u5360
  5452     005A                     u5361:
  5453     005A  285C               	goto	l3856
  5454     005B                     u5360:
  5455     005B                     l3854:
  5456     005B  143A               	bsf	___flmul@aexp^(0+128),0
  5457     005C                     l3856:
  5458     005C  083A               	movf	___flmul@aexp^(0+128),w
  5459     005D  1903               	btfsc	3,2
  5460     005E  2860               	goto	u5371
  5461     005F  2861               	goto	u5370
  5462     0060                     u5371:
  5463     0060  2870               	goto	l3864
  5464     0061                     u5370:
  5465     0061                     l3858:
  5466     0061  0A3A               	incf	___flmul@aexp^(0+128),w
  5467     0062  1D03               	btfss	3,2
  5468     0063  2865               	goto	u5381
  5469     0064  2866               	goto	u5380
  5470     0065                     u5381:
  5471     0065  286E               	goto	l3862
  5472     0066                     u5380:
  5473     0066                     l3860:
  5474     0066  3000               	movlw	0
  5475     0067  00B3               	movwf	(___flmul@a+3)^(0+128)
  5476     0068  3000               	movlw	0
  5477     0069  00B2               	movwf	(___flmul@a+2)^(0+128)
  5478     006A  3000               	movlw	0
  5479     006B  00B1               	movwf	(___flmul@a+1)^(0+128)
  5480     006C  3000               	movlw	0
  5481     006D  00B0               	movwf	___flmul@a^(0+128)
  5482     006E                     l3862:
  5483     006E  17B2               	bsf	(___flmul@a^(0+128)+2),7
  5484     006F  2878               	goto	l3866
  5485     0070                     l3864:
  5486     0070  3000               	movlw	0
  5487     0071  00B3               	movwf	(___flmul@a+3)^(0+128)
  5488     0072  3000               	movlw	0
  5489     0073  00B2               	movwf	(___flmul@a+2)^(0+128)
  5490     0074  3000               	movlw	0
  5491     0075  00B1               	movwf	(___flmul@a+1)^(0+128)
  5492     0076  3000               	movlw	0
  5493     0077  00B0               	movwf	___flmul@a^(0+128)
  5494     0078                     l3866:
  5495     0078  083A               	movf	___flmul@aexp^(0+128),w
  5496     0079  1903               	btfsc	3,2
  5497     007A  287C               	goto	u5391
  5498     007B  287D               	goto	u5390
  5499     007C                     u5391:
  5500     007C  2882               	goto	l3870
  5501     007D                     u5390:
  5502     007D                     l3868:
  5503     007D  083F               	movf	___flmul@bexp^(0+128),w
  5504     007E  1D03               	btfss	3,2
  5505     007F  2881               	goto	u5401
  5506     0080  2882               	goto	u5400
  5507     0081                     u5401:
  5508     0081  288B               	goto	l3874
  5509     0082                     u5400:
  5510     0082                     l3870:
  5511     0082  3000               	movlw	0
  5512     0083  00AF               	movwf	(?___flmul+3)^(0+128)
  5513     0084  3000               	movlw	0
  5514     0085  00AE               	movwf	(?___flmul+2)^(0+128)
  5515     0086  3000               	movlw	0
  5516     0087  00AD               	movwf	(?___flmul+1)^(0+128)
  5517     0088  3000               	movlw	0
  5518     0089  00AC               	movwf	?___flmul^(0+128)
  5519     008A  2BC2               	goto	l887
  5520     008B                     l3874:
  5521     008B  082C               	movf	___flmul@b^(0+128),w
  5522     008C  1283               	bcf	3,5	;RP0=0, select bank0
  5523     008D  1303               	bcf	3,6	;RP1=0, select bank0
  5524     008E  00B2               	movwf	__Umul8_16@multiplicand
  5525     008F  1683               	bsf	3,5	;RP0=1, select bank1
  5526     0090  1303               	bcf	3,6	;RP1=0, select bank1
  5527     0091  0832               	movf	(___flmul@a^(0+128)+2),w
  5528     0092  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5529     0097  1283               	bcf	3,5	;RP0=0, select bank0
  5530     0098  1303               	bcf	3,6	;RP1=0, select bank0
  5531     0099  0833               	movf	?__Umul8_16+1,w
  5532     009A  1683               	bsf	3,5	;RP0=1, select bank1
  5533     009B  1303               	bcf	3,6	;RP1=0, select bank1
  5534     009C  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5535     009D  1283               	bcf	3,5	;RP0=0, select bank0
  5536     009E  1303               	bcf	3,6	;RP1=0, select bank0
  5537     009F  0832               	movf	?__Umul8_16,w
  5538     00A0  1683               	bsf	3,5	;RP0=1, select bank1
  5539     00A1  1303               	bcf	3,6	;RP1=0, select bank1
  5540     00A2  00C4               	movwf	___flmul@temp^(0+128)
  5541     00A3                     l3876:
  5542     00A3  0844               	movf	___flmul@temp^(0+128),w
  5543     00A4  00B4               	movwf	??___flmul^(0+128)
  5544     00A5  01B5               	clrf	(??___flmul^(0+128)+1)
  5545     00A6  01B6               	clrf	(??___flmul^(0+128)+2)
  5546     00A7  01B7               	clrf	(??___flmul^(0+128)+3)
  5547     00A8  0837               	movf	(??___flmul+3)^(0+128),w
  5548     00A9  00BE               	movwf	(___flmul@grs+3)^(0+128)
  5549     00AA  0836               	movf	(??___flmul+2)^(0+128),w
  5550     00AB  00BD               	movwf	(___flmul@grs+2)^(0+128)
  5551     00AC  0835               	movf	(??___flmul+1)^(0+128),w
  5552     00AD  00BC               	movwf	(___flmul@grs+1)^(0+128)
  5553     00AE  0834               	movf	??___flmul^(0+128),w
  5554     00AF  00BB               	movwf	___flmul@grs^(0+128)
  5555     00B0                     l3878:
  5556     00B0  0845               	movf	(___flmul@temp^(0+128)+1),w
  5557     00B1  00B4               	movwf	??___flmul^(0+128)
  5558     00B2  01B5               	clrf	(??___flmul^(0+128)+1)
  5559     00B3  01B6               	clrf	(??___flmul^(0+128)+2)
  5560     00B4  01B7               	clrf	(??___flmul^(0+128)+3)
  5561     00B5  0837               	movf	(??___flmul+3)^(0+128),w
  5562     00B6  00C3               	movwf	(___flmul@prod+3)^(0+128)
  5563     00B7  0836               	movf	(??___flmul+2)^(0+128),w
  5564     00B8  00C2               	movwf	(___flmul@prod+2)^(0+128)
  5565     00B9  0835               	movf	(??___flmul+1)^(0+128),w
  5566     00BA  00C1               	movwf	(___flmul@prod+1)^(0+128)
  5567     00BB  0834               	movf	??___flmul^(0+128),w
  5568     00BC  00C0               	movwf	___flmul@prod^(0+128)
  5569     00BD  082D               	movf	(___flmul@b^(0+128)+1),w
  5570     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  5571     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  5572     00C0  00B2               	movwf	__Umul8_16@multiplicand
  5573     00C1  1683               	bsf	3,5	;RP0=1, select bank1
  5574     00C2  1303               	bcf	3,6	;RP1=0, select bank1
  5575     00C3  0831               	movf	(___flmul@a^(0+128)+1),w
  5576     00C4  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5577     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  5578     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  5579     00CB  0833               	movf	?__Umul8_16+1,w
  5580     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  5581     00CD  1303               	bcf	3,6	;RP1=0, select bank1
  5582     00CE  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5583     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5584     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  5585     00D1  0832               	movf	?__Umul8_16,w
  5586     00D2  1683               	bsf	3,5	;RP0=1, select bank1
  5587     00D3  1303               	bcf	3,6	;RP1=0, select bank1
  5588     00D4  00C4               	movwf	___flmul@temp^(0+128)
  5589     00D5                     l3880:
  5590     00D5  0844               	movf	___flmul@temp^(0+128),w
  5591     00D6  00B4               	movwf	??___flmul^(0+128)
  5592     00D7  01B5               	clrf	(??___flmul^(0+128)+1)
  5593     00D8  01B6               	clrf	(??___flmul^(0+128)+2)
  5594     00D9  01B7               	clrf	(??___flmul^(0+128)+3)
  5595     00DA  0834               	movf	??___flmul^(0+128),w
  5596     00DB  07BB               	addwf	___flmul@grs^(0+128),f
  5597     00DC  0835               	movf	(??___flmul+1)^(0+128),w
  5598     00DD  1103               	clrz
  5599     00DE  1803               	skipnc
  5600     00DF  3E01               	addlw	1
  5601     00E0  1903               	skipnz
  5602     00E1  28E3               	goto	u5411
  5603     00E2  07BC               	addwf	(___flmul@grs+1)^(0+128),f
  5604     00E3                     u5411:
  5605     00E3  0836               	movf	(??___flmul+2)^(0+128),w
  5606     00E4  1103               	clrz
  5607     00E5  1803               	skipnc
  5608     00E6  3E01               	addlw	1
  5609     00E7  1903               	skipnz
  5610     00E8  28EA               	goto	u5412
  5611     00E9  07BD               	addwf	(___flmul@grs+2)^(0+128),f
  5612     00EA                     u5412:
  5613     00EA  0837               	movf	(??___flmul+3)^(0+128),w
  5614     00EB  1103               	clrz
  5615     00EC  1803               	skipnc
  5616     00ED  3E01               	addlw	1
  5617     00EE  1903               	skipnz
  5618     00EF  28F1               	goto	u5413
  5619     00F0  07BE               	addwf	(___flmul@grs+3)^(0+128),f
  5620     00F1                     u5413:
  5621     00F1                     l3882:
  5622     00F1  0845               	movf	(___flmul@temp^(0+128)+1),w
  5623     00F2  00B4               	movwf	??___flmul^(0+128)
  5624     00F3  01B5               	clrf	(??___flmul^(0+128)+1)
  5625     00F4  01B6               	clrf	(??___flmul^(0+128)+2)
  5626     00F5  01B7               	clrf	(??___flmul^(0+128)+3)
  5627     00F6  0834               	movf	??___flmul^(0+128),w
  5628     00F7  07C0               	addwf	___flmul@prod^(0+128),f
  5629     00F8  0835               	movf	(??___flmul+1)^(0+128),w
  5630     00F9  1103               	clrz
  5631     00FA  1803               	skipnc
  5632     00FB  3E01               	addlw	1
  5633     00FC  1903               	skipnz
  5634     00FD  28FF               	goto	u5421
  5635     00FE  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  5636     00FF                     u5421:
  5637     00FF  0836               	movf	(??___flmul+2)^(0+128),w
  5638     0100  1103               	clrz
  5639     0101  1803               	skipnc
  5640     0102  3E01               	addlw	1
  5641     0103  1903               	skipnz
  5642     0104  2906               	goto	u5422
  5643     0105  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  5644     0106                     u5422:
  5645     0106  0837               	movf	(??___flmul+3)^(0+128),w
  5646     0107  1103               	clrz
  5647     0108  1803               	skipnc
  5648     0109  3E01               	addlw	1
  5649     010A  1903               	skipnz
  5650     010B  290D               	goto	u5423
  5651     010C  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  5652     010D                     u5423:
  5653     010D  082E               	movf	(___flmul@b^(0+128)+2),w
  5654     010E  1283               	bcf	3,5	;RP0=0, select bank0
  5655     010F  1303               	bcf	3,6	;RP1=0, select bank0
  5656     0110  00B2               	movwf	__Umul8_16@multiplicand
  5657     0111  1683               	bsf	3,5	;RP0=1, select bank1
  5658     0112  1303               	bcf	3,6	;RP1=0, select bank1
  5659     0113  0830               	movf	___flmul@a^(0+128),w
  5660     0114  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5661     0119  1283               	bcf	3,5	;RP0=0, select bank0
  5662     011A  1303               	bcf	3,6	;RP1=0, select bank0
  5663     011B  0833               	movf	?__Umul8_16+1,w
  5664     011C  1683               	bsf	3,5	;RP0=1, select bank1
  5665     011D  1303               	bcf	3,6	;RP1=0, select bank1
  5666     011E  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5667     011F  1283               	bcf	3,5	;RP0=0, select bank0
  5668     0120  1303               	bcf	3,6	;RP1=0, select bank0
  5669     0121  0832               	movf	?__Umul8_16,w
  5670     0122  1683               	bsf	3,5	;RP0=1, select bank1
  5671     0123  1303               	bcf	3,6	;RP1=0, select bank1
  5672     0124  00C4               	movwf	___flmul@temp^(0+128)
  5673     0125                     l3884:
  5674     0125  0844               	movf	___flmul@temp^(0+128),w
  5675     0126  00B4               	movwf	??___flmul^(0+128)
  5676     0127  01B5               	clrf	(??___flmul^(0+128)+1)
  5677     0128  01B6               	clrf	(??___flmul^(0+128)+2)
  5678     0129  01B7               	clrf	(??___flmul^(0+128)+3)
  5679     012A  0834               	movf	??___flmul^(0+128),w
  5680     012B  07BB               	addwf	___flmul@grs^(0+128),f
  5681     012C  0835               	movf	(??___flmul+1)^(0+128),w
  5682     012D  1103               	clrz
  5683     012E  1803               	skipnc
  5684     012F  3E01               	addlw	1
  5685     0130  1903               	skipnz
  5686     0131  2933               	goto	u5431
  5687     0132  07BC               	addwf	(___flmul@grs+1)^(0+128),f
  5688     0133                     u5431:
  5689     0133  0836               	movf	(??___flmul+2)^(0+128),w
  5690     0134  1103               	clrz
  5691     0135  1803               	skipnc
  5692     0136  3E01               	addlw	1
  5693     0137  1903               	skipnz
  5694     0138  293A               	goto	u5432
  5695     0139  07BD               	addwf	(___flmul@grs+2)^(0+128),f
  5696     013A                     u5432:
  5697     013A  0837               	movf	(??___flmul+3)^(0+128),w
  5698     013B  1103               	clrz
  5699     013C  1803               	skipnc
  5700     013D  3E01               	addlw	1
  5701     013E  1903               	skipnz
  5702     013F  2941               	goto	u5433
  5703     0140  07BE               	addwf	(___flmul@grs+3)^(0+128),f
  5704     0141                     u5433:
  5705     0141                     l3886:
  5706     0141  0845               	movf	(___flmul@temp^(0+128)+1),w
  5707     0142  00B4               	movwf	??___flmul^(0+128)
  5708     0143  01B5               	clrf	(??___flmul^(0+128)+1)
  5709     0144  01B6               	clrf	(??___flmul^(0+128)+2)
  5710     0145  01B7               	clrf	(??___flmul^(0+128)+3)
  5711     0146  0834               	movf	??___flmul^(0+128),w
  5712     0147  07C0               	addwf	___flmul@prod^(0+128),f
  5713     0148  0835               	movf	(??___flmul+1)^(0+128),w
  5714     0149  1103               	clrz
  5715     014A  1803               	skipnc
  5716     014B  3E01               	addlw	1
  5717     014C  1903               	skipnz
  5718     014D  294F               	goto	u5441
  5719     014E  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  5720     014F                     u5441:
  5721     014F  0836               	movf	(??___flmul+2)^(0+128),w
  5722     0150  1103               	clrz
  5723     0151  1803               	skipnc
  5724     0152  3E01               	addlw	1
  5725     0153  1903               	skipnz
  5726     0154  2956               	goto	u5442
  5727     0155  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  5728     0156                     u5442:
  5729     0156  0837               	movf	(??___flmul+3)^(0+128),w
  5730     0157  1103               	clrz
  5731     0158  1803               	skipnc
  5732     0159  3E01               	addlw	1
  5733     015A  1903               	skipnz
  5734     015B  295D               	goto	u5443
  5735     015C  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  5736     015D                     u5443:
  5737     015D                     l3888:
  5738     015D  3008               	movlw	8
  5739     015E  00B4               	movwf	??___flmul^(0+128)
  5740     015F                     u5455:
  5741     015F  1003               	clrc
  5742     0160  0DBB               	rlf	___flmul@grs^(0+128),f
  5743     0161  0DBC               	rlf	(___flmul@grs+1)^(0+128),f
  5744     0162  0DBD               	rlf	(___flmul@grs+2)^(0+128),f
  5745     0163  0DBE               	rlf	(___flmul@grs+3)^(0+128),f
  5746     0164  0BB4               	decfsz	??___flmul^(0+128),f
  5747     0165  295F               	goto	u5455
  5748     0166                     l3890:
  5749     0166  082D               	movf	(___flmul@b^(0+128)+1),w
  5750     0167  1283               	bcf	3,5	;RP0=0, select bank0
  5751     0168  1303               	bcf	3,6	;RP1=0, select bank0
  5752     0169  00B2               	movwf	__Umul8_16@multiplicand
  5753     016A  1683               	bsf	3,5	;RP0=1, select bank1
  5754     016B  1303               	bcf	3,6	;RP1=0, select bank1
  5755     016C  0830               	movf	___flmul@a^(0+128),w
  5756     016D  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5757     0172  1283               	bcf	3,5	;RP0=0, select bank0
  5758     0173  1303               	bcf	3,6	;RP1=0, select bank0
  5759     0174  0833               	movf	?__Umul8_16+1,w
  5760     0175  1683               	bsf	3,5	;RP0=1, select bank1
  5761     0176  1303               	bcf	3,6	;RP1=0, select bank1
  5762     0177  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5763     0178  1283               	bcf	3,5	;RP0=0, select bank0
  5764     0179  1303               	bcf	3,6	;RP1=0, select bank0
  5765     017A  0832               	movf	?__Umul8_16,w
  5766     017B  1683               	bsf	3,5	;RP0=1, select bank1
  5767     017C  1303               	bcf	3,6	;RP1=0, select bank1
  5768     017D  00C4               	movwf	___flmul@temp^(0+128)
  5769     017E                     l3892:
  5770     017E  0844               	movf	___flmul@temp^(0+128),w
  5771     017F  00B4               	movwf	??___flmul^(0+128)
  5772     0180  0845               	movf	(___flmul@temp+1)^(0+128),w
  5773     0181  00B5               	movwf	(??___flmul^(0+128)+1)
  5774     0182  01B6               	clrf	(??___flmul^(0+128)+2)
  5775     0183  01B7               	clrf	(??___flmul^(0+128)+3)
  5776     0184  0834               	movf	??___flmul^(0+128),w
  5777     0185  07BB               	addwf	___flmul@grs^(0+128),f
  5778     0186  0835               	movf	(??___flmul+1)^(0+128),w
  5779     0187  1103               	clrz
  5780     0188  1803               	skipnc
  5781     0189  3E01               	addlw	1
  5782     018A  1903               	skipnz
  5783     018B  298D               	goto	u5461
  5784     018C  07BC               	addwf	(___flmul@grs+1)^(0+128),f
  5785     018D                     u5461:
  5786     018D  0836               	movf	(??___flmul+2)^(0+128),w
  5787     018E  1103               	clrz
  5788     018F  1803               	skipnc
  5789     0190  3E01               	addlw	1
  5790     0191  1903               	skipnz
  5791     0192  2994               	goto	u5462
  5792     0193  07BD               	addwf	(___flmul@grs+2)^(0+128),f
  5793     0194                     u5462:
  5794     0194  0837               	movf	(??___flmul+3)^(0+128),w
  5795     0195  1103               	clrz
  5796     0196  1803               	skipnc
  5797     0197  3E01               	addlw	1
  5798     0198  1903               	skipnz
  5799     0199  299B               	goto	u5463
  5800     019A  07BE               	addwf	(___flmul@grs+3)^(0+128),f
  5801     019B                     u5463:
  5802     019B                     l3894:
  5803     019B  082C               	movf	___flmul@b^(0+128),w
  5804     019C  1283               	bcf	3,5	;RP0=0, select bank0
  5805     019D  1303               	bcf	3,6	;RP1=0, select bank0
  5806     019E  00B2               	movwf	__Umul8_16@multiplicand
  5807     019F  1683               	bsf	3,5	;RP0=1, select bank1
  5808     01A0  1303               	bcf	3,6	;RP1=0, select bank1
  5809     01A1  0831               	movf	(___flmul@a^(0+128)+1),w
  5810     01A2  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5811     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  5812     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  5813     01A9  0833               	movf	?__Umul8_16+1,w
  5814     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  5815     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  5816     01AC  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5817     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  5818     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  5819     01AF  0832               	movf	?__Umul8_16,w
  5820     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  5821     01B1  1303               	bcf	3,6	;RP1=0, select bank1
  5822     01B2  00C4               	movwf	___flmul@temp^(0+128)
  5823     01B3                     l3896:
  5824     01B3  0844               	movf	___flmul@temp^(0+128),w
  5825     01B4  00B4               	movwf	??___flmul^(0+128)
  5826     01B5  0845               	movf	(___flmul@temp+1)^(0+128),w
  5827     01B6  00B5               	movwf	(??___flmul^(0+128)+1)
  5828     01B7  01B6               	clrf	(??___flmul^(0+128)+2)
  5829     01B8  01B7               	clrf	(??___flmul^(0+128)+3)
  5830     01B9  0834               	movf	??___flmul^(0+128),w
  5831     01BA  07BB               	addwf	___flmul@grs^(0+128),f
  5832     01BB  0835               	movf	(??___flmul+1)^(0+128),w
  5833     01BC  1103               	clrz
  5834     01BD  1803               	skipnc
  5835     01BE  3E01               	addlw	1
  5836     01BF  1903               	skipnz
  5837     01C0  29C2               	goto	u5471
  5838     01C1  07BC               	addwf	(___flmul@grs+1)^(0+128),f
  5839     01C2                     u5471:
  5840     01C2  0836               	movf	(??___flmul+2)^(0+128),w
  5841     01C3  1103               	clrz
  5842     01C4  1803               	skipnc
  5843     01C5  3E01               	addlw	1
  5844     01C6  1903               	skipnz
  5845     01C7  29C9               	goto	u5472
  5846     01C8  07BD               	addwf	(___flmul@grs+2)^(0+128),f
  5847     01C9                     u5472:
  5848     01C9  0837               	movf	(??___flmul+3)^(0+128),w
  5849     01CA  1103               	clrz
  5850     01CB  1803               	skipnc
  5851     01CC  3E01               	addlw	1
  5852     01CD  1903               	skipnz
  5853     01CE  29D0               	goto	u5473
  5854     01CF  07BE               	addwf	(___flmul@grs+3)^(0+128),f
  5855     01D0                     u5473:
  5856     01D0                     l3898:
  5857     01D0  3008               	movlw	8
  5858     01D1  00B4               	movwf	??___flmul^(0+128)
  5859     01D2                     u5485:
  5860     01D2  1003               	clrc
  5861     01D3  0DBB               	rlf	___flmul@grs^(0+128),f
  5862     01D4  0DBC               	rlf	(___flmul@grs+1)^(0+128),f
  5863     01D5  0DBD               	rlf	(___flmul@grs+2)^(0+128),f
  5864     01D6  0DBE               	rlf	(___flmul@grs+3)^(0+128),f
  5865     01D7  0BB4               	decfsz	??___flmul^(0+128),f
  5866     01D8  29D2               	goto	u5485
  5867     01D9  082C               	movf	___flmul@b^(0+128),w
  5868     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  5869     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  5870     01DC  00B2               	movwf	__Umul8_16@multiplicand
  5871     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  5872     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  5873     01DF  0830               	movf	___flmul@a^(0+128),w
  5874     01E0  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5875     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  5876     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  5877     01E7  0833               	movf	?__Umul8_16+1,w
  5878     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  5879     01E9  1303               	bcf	3,6	;RP1=0, select bank1
  5880     01EA  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5881     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  5882     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  5883     01ED  0832               	movf	?__Umul8_16,w
  5884     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  5885     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  5886     01F0  00C4               	movwf	___flmul@temp^(0+128)
  5887     01F1                     l3900:
  5888     01F1  0844               	movf	___flmul@temp^(0+128),w
  5889     01F2  00B4               	movwf	??___flmul^(0+128)
  5890     01F3  0845               	movf	(___flmul@temp+1)^(0+128),w
  5891     01F4  00B5               	movwf	(??___flmul^(0+128)+1)
  5892     01F5  01B6               	clrf	(??___flmul^(0+128)+2)
  5893     01F6  01B7               	clrf	(??___flmul^(0+128)+3)
  5894     01F7  0834               	movf	??___flmul^(0+128),w
  5895     01F8  07BB               	addwf	___flmul@grs^(0+128),f
  5896     01F9  0835               	movf	(??___flmul+1)^(0+128),w
  5897     01FA  1103               	clrz
  5898     01FB  1803               	skipnc
  5899     01FC  3E01               	addlw	1
  5900     01FD  1903               	skipnz
  5901     01FE  2A00               	goto	u5491
  5902     01FF  07BC               	addwf	(___flmul@grs+1)^(0+128),f
  5903     0200                     u5491:
  5904     0200  0836               	movf	(??___flmul+2)^(0+128),w
  5905     0201  1103               	clrz
  5906     0202  1803               	skipnc
  5907     0203  3E01               	addlw	1
  5908     0204  1903               	skipnz
  5909     0205  2A07               	goto	u5492
  5910     0206  07BD               	addwf	(___flmul@grs+2)^(0+128),f
  5911     0207                     u5492:
  5912     0207  0837               	movf	(??___flmul+3)^(0+128),w
  5913     0208  1103               	clrz
  5914     0209  1803               	skipnc
  5915     020A  3E01               	addlw	1
  5916     020B  1903               	skipnz
  5917     020C  2A0E               	goto	u5493
  5918     020D  07BE               	addwf	(___flmul@grs+3)^(0+128),f
  5919     020E                     u5493:
  5920     020E                     l3902:
  5921     020E  082D               	movf	(___flmul@b^(0+128)+1),w
  5922     020F  1283               	bcf	3,5	;RP0=0, select bank0
  5923     0210  1303               	bcf	3,6	;RP1=0, select bank0
  5924     0211  00B2               	movwf	__Umul8_16@multiplicand
  5925     0212  1683               	bsf	3,5	;RP0=1, select bank1
  5926     0213  1303               	bcf	3,6	;RP1=0, select bank1
  5927     0214  0832               	movf	(___flmul@a^(0+128)+2),w
  5928     0215  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5929     021A  1283               	bcf	3,5	;RP0=0, select bank0
  5930     021B  1303               	bcf	3,6	;RP1=0, select bank0
  5931     021C  0833               	movf	?__Umul8_16+1,w
  5932     021D  1683               	bsf	3,5	;RP0=1, select bank1
  5933     021E  1303               	bcf	3,6	;RP1=0, select bank1
  5934     021F  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5935     0220  1283               	bcf	3,5	;RP0=0, select bank0
  5936     0221  1303               	bcf	3,6	;RP1=0, select bank0
  5937     0222  0832               	movf	?__Umul8_16,w
  5938     0223  1683               	bsf	3,5	;RP0=1, select bank1
  5939     0224  1303               	bcf	3,6	;RP1=0, select bank1
  5940     0225  00C4               	movwf	___flmul@temp^(0+128)
  5941     0226  0844               	movf	___flmul@temp^(0+128),w
  5942     0227  00B4               	movwf	??___flmul^(0+128)
  5943     0228  0845               	movf	(___flmul@temp+1)^(0+128),w
  5944     0229  00B5               	movwf	(??___flmul^(0+128)+1)
  5945     022A  01B6               	clrf	(??___flmul^(0+128)+2)
  5946     022B  01B7               	clrf	(??___flmul^(0+128)+3)
  5947     022C  0834               	movf	??___flmul^(0+128),w
  5948     022D  07C0               	addwf	___flmul@prod^(0+128),f
  5949     022E  0835               	movf	(??___flmul+1)^(0+128),w
  5950     022F  1103               	clrz
  5951     0230  1803               	skipnc
  5952     0231  3E01               	addlw	1
  5953     0232  1903               	skipnz
  5954     0233  2A35               	goto	u5501
  5955     0234  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  5956     0235                     u5501:
  5957     0235  0836               	movf	(??___flmul+2)^(0+128),w
  5958     0236  1103               	clrz
  5959     0237  1803               	skipnc
  5960     0238  3E01               	addlw	1
  5961     0239  1903               	skipnz
  5962     023A  2A3C               	goto	u5502
  5963     023B  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  5964     023C                     u5502:
  5965     023C  0837               	movf	(??___flmul+3)^(0+128),w
  5966     023D  1103               	clrz
  5967     023E  1803               	skipnc
  5968     023F  3E01               	addlw	1
  5969     0240  1903               	skipnz
  5970     0241  2A43               	goto	u5503
  5971     0242  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  5972     0243                     u5503:
  5973     0243                     l3904:
  5974     0243  082E               	movf	(___flmul@b^(0+128)+2),w
  5975     0244  1283               	bcf	3,5	;RP0=0, select bank0
  5976     0245  1303               	bcf	3,6	;RP1=0, select bank0
  5977     0246  00B2               	movwf	__Umul8_16@multiplicand
  5978     0247  1683               	bsf	3,5	;RP0=1, select bank1
  5979     0248  1303               	bcf	3,6	;RP1=0, select bank1
  5980     0249  0831               	movf	(___flmul@a^(0+128)+1),w
  5981     024A  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  5982     024F  1283               	bcf	3,5	;RP0=0, select bank0
  5983     0250  1303               	bcf	3,6	;RP1=0, select bank0
  5984     0251  0833               	movf	?__Umul8_16+1,w
  5985     0252  1683               	bsf	3,5	;RP0=1, select bank1
  5986     0253  1303               	bcf	3,6	;RP1=0, select bank1
  5987     0254  00C5               	movwf	(___flmul@temp+1)^(0+128)
  5988     0255  1283               	bcf	3,5	;RP0=0, select bank0
  5989     0256  1303               	bcf	3,6	;RP1=0, select bank0
  5990     0257  0832               	movf	?__Umul8_16,w
  5991     0258  1683               	bsf	3,5	;RP0=1, select bank1
  5992     0259  1303               	bcf	3,6	;RP1=0, select bank1
  5993     025A  00C4               	movwf	___flmul@temp^(0+128)
  5994     025B                     l3906:
  5995     025B  0844               	movf	___flmul@temp^(0+128),w
  5996     025C  00B4               	movwf	??___flmul^(0+128)
  5997     025D  0845               	movf	(___flmul@temp+1)^(0+128),w
  5998     025E  00B5               	movwf	(??___flmul^(0+128)+1)
  5999     025F  01B6               	clrf	(??___flmul^(0+128)+2)
  6000     0260  01B7               	clrf	(??___flmul^(0+128)+3)
  6001     0261  0834               	movf	??___flmul^(0+128),w
  6002     0262  07C0               	addwf	___flmul@prod^(0+128),f
  6003     0263  0835               	movf	(??___flmul+1)^(0+128),w
  6004     0264  1103               	clrz
  6005     0265  1803               	skipnc
  6006     0266  3E01               	addlw	1
  6007     0267  1903               	skipnz
  6008     0268  2A6A               	goto	u5511
  6009     0269  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  6010     026A                     u5511:
  6011     026A  0836               	movf	(??___flmul+2)^(0+128),w
  6012     026B  1103               	clrz
  6013     026C  1803               	skipnc
  6014     026D  3E01               	addlw	1
  6015     026E  1903               	skipnz
  6016     026F  2A71               	goto	u5512
  6017     0270  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  6018     0271                     u5512:
  6019     0271  0837               	movf	(??___flmul+3)^(0+128),w
  6020     0272  1103               	clrz
  6021     0273  1803               	skipnc
  6022     0274  3E01               	addlw	1
  6023     0275  1903               	skipnz
  6024     0276  2A78               	goto	u5513
  6025     0277  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  6026     0278                     u5513:
  6027     0278  082E               	movf	(___flmul@b^(0+128)+2),w
  6028     0279  1283               	bcf	3,5	;RP0=0, select bank0
  6029     027A  1303               	bcf	3,6	;RP1=0, select bank0
  6030     027B  00B2               	movwf	__Umul8_16@multiplicand
  6031     027C  1683               	bsf	3,5	;RP0=1, select bank1
  6032     027D  1303               	bcf	3,6	;RP1=0, select bank1
  6033     027E  0832               	movf	(___flmul@a^(0+128)+2),w
  6034     027F  160A  118A  25D6  120A  118A  	fcall	__Umul8_16
  6035     0284  1283               	bcf	3,5	;RP0=0, select bank0
  6036     0285  1303               	bcf	3,6	;RP1=0, select bank0
  6037     0286  0833               	movf	?__Umul8_16+1,w
  6038     0287  1683               	bsf	3,5	;RP0=1, select bank1
  6039     0288  1303               	bcf	3,6	;RP1=0, select bank1
  6040     0289  00C5               	movwf	(___flmul@temp+1)^(0+128)
  6041     028A  1283               	bcf	3,5	;RP0=0, select bank0
  6042     028B  1303               	bcf	3,6	;RP1=0, select bank0
  6043     028C  0832               	movf	?__Umul8_16,w
  6044     028D  1683               	bsf	3,5	;RP0=1, select bank1
  6045     028E  1303               	bcf	3,6	;RP1=0, select bank1
  6046     028F  00C4               	movwf	___flmul@temp^(0+128)
  6047     0290                     l3908:
  6048     0290  0844               	movf	___flmul@temp^(0+128),w
  6049     0291  00B4               	movwf	??___flmul^(0+128)
  6050     0292  0845               	movf	(___flmul@temp+1)^(0+128),w
  6051     0293  00B5               	movwf	(??___flmul^(0+128)+1)
  6052     0294  01B6               	clrf	(??___flmul^(0+128)+2)
  6053     0295  01B7               	clrf	(??___flmul^(0+128)+3)
  6054     0296  3008               	movlw	8
  6055     0297                     u5525:
  6056     0297  1003               	clrc
  6057     0298  0DB4               	rlf	??___flmul^(0+128),f
  6058     0299  0DB5               	rlf	(??___flmul^(0+128)+1),f
  6059     029A  0DB6               	rlf	(??___flmul^(0+128)+2),f
  6060     029B  0DB7               	rlf	(??___flmul^(0+128)+3),f
  6061     029C                     u5520:
  6062     029C  3EFF               	addlw	-1
  6063     029D  1D03               	skipz
  6064     029E  2A97               	goto	u5525
  6065     029F  0834               	movf	??___flmul^(0+128),w
  6066     02A0  07C0               	addwf	___flmul@prod^(0+128),f
  6067     02A1  0835               	movf	(??___flmul+1)^(0+128),w
  6068     02A2  1103               	clrz
  6069     02A3  1803               	skipnc
  6070     02A4  3E01               	addlw	1
  6071     02A5  1903               	skipnz
  6072     02A6  2AA8               	goto	u5531
  6073     02A7  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  6074     02A8                     u5531:
  6075     02A8  0836               	movf	(??___flmul+2)^(0+128),w
  6076     02A9  1103               	clrz
  6077     02AA  1803               	skipnc
  6078     02AB  3E01               	addlw	1
  6079     02AC  1903               	skipnz
  6080     02AD  2AAF               	goto	u5532
  6081     02AE  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  6082     02AF                     u5532:
  6083     02AF  0837               	movf	(??___flmul+3)^(0+128),w
  6084     02B0  1103               	clrz
  6085     02B1  1803               	skipnc
  6086     02B2  3E01               	addlw	1
  6087     02B3  1903               	skipnz
  6088     02B4  2AB6               	goto	u5533
  6089     02B5  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  6090     02B6                     u5533:
  6091     02B6                     l3910:
  6092     02B6  083B               	movf	___flmul@grs^(0+128),w
  6093     02B7  00B4               	movwf	??___flmul^(0+128)
  6094     02B8  083C               	movf	(___flmul@grs+1)^(0+128),w
  6095     02B9  00B5               	movwf	(??___flmul^(0+128)+1)
  6096     02BA  083D               	movf	(___flmul@grs+2)^(0+128),w
  6097     02BB  00B6               	movwf	(??___flmul^(0+128)+2)
  6098     02BC  083E               	movf	(___flmul@grs+3)^(0+128),w
  6099     02BD  00B7               	movwf	(??___flmul^(0+128)+3)
  6100     02BE  3018               	movlw	24
  6101     02BF                     u5545:
  6102     02BF  1003               	clrc
  6103     02C0  0CB7               	rrf	(??___flmul^(0+128)+3),f
  6104     02C1  0CB6               	rrf	(??___flmul^(0+128)+2),f
  6105     02C2  0CB5               	rrf	(??___flmul^(0+128)+1),f
  6106     02C3  0CB4               	rrf	??___flmul^(0+128),f
  6107     02C4                     u5540:
  6108     02C4  3EFF               	addlw	-1
  6109     02C5  1D03               	skipz
  6110     02C6  2ABF               	goto	u5545
  6111     02C7  0834               	movf	??___flmul^(0+128),w
  6112     02C8  07C0               	addwf	___flmul@prod^(0+128),f
  6113     02C9  0835               	movf	(??___flmul+1)^(0+128),w
  6114     02CA  1103               	clrz
  6115     02CB  1803               	skipnc
  6116     02CC  3E01               	addlw	1
  6117     02CD  1903               	skipnz
  6118     02CE  2AD0               	goto	u5551
  6119     02CF  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  6120     02D0                     u5551:
  6121     02D0  0836               	movf	(??___flmul+2)^(0+128),w
  6122     02D1  1103               	clrz
  6123     02D2  1803               	skipnc
  6124     02D3  3E01               	addlw	1
  6125     02D4  1903               	skipnz
  6126     02D5  2AD7               	goto	u5552
  6127     02D6  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  6128     02D7                     u5552:
  6129     02D7  0837               	movf	(??___flmul+3)^(0+128),w
  6130     02D8  1103               	clrz
  6131     02D9  1803               	skipnc
  6132     02DA  3E01               	addlw	1
  6133     02DB  1903               	skipnz
  6134     02DC  2ADE               	goto	u5553
  6135     02DD  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  6136     02DE                     u5553:
  6137     02DE                     l3912:
  6138     02DE  3008               	movlw	8
  6139     02DF  00B4               	movwf	??___flmul^(0+128)
  6140     02E0                     u5565:
  6141     02E0  1003               	clrc
  6142     02E1  0DBB               	rlf	___flmul@grs^(0+128),f
  6143     02E2  0DBC               	rlf	(___flmul@grs+1)^(0+128),f
  6144     02E3  0DBD               	rlf	(___flmul@grs+2)^(0+128),f
  6145     02E4  0DBE               	rlf	(___flmul@grs+3)^(0+128),f
  6146     02E5  0BB4               	decfsz	??___flmul^(0+128),f
  6147     02E6  2AE0               	goto	u5565
  6148     02E7                     l3914:
  6149     02E7  083F               	movf	___flmul@bexp^(0+128),w
  6150     02E8  073A               	addwf	___flmul@aexp^(0+128),w
  6151     02E9  00B4               	movwf	??___flmul^(0+128)
  6152     02EA  01B5               	clrf	(??___flmul^(0+128)+1)
  6153     02EB  0DB5               	rlf	(??___flmul+1)^(0+128),f
  6154     02EC  0834               	movf	??___flmul^(0+128),w
  6155     02ED  3E82               	addlw	130
  6156     02EE  00C4               	movwf	___flmul@temp^(0+128)
  6157     02EF  0835               	movf	(??___flmul+1)^(0+128),w
  6158     02F0  1803               	skipnc
  6159     02F1  3E01               	addlw	1
  6160     02F2  3EFF               	addlw	255
  6161     02F3  00C5               	movwf	(___flmul@temp+1)^(0+128)
  6162     02F4  2B12               	goto	l3926
  6163     02F5                     l3916:
  6164     02F5  3001               	movlw	1
  6165     02F6  00B4               	movwf	??___flmul^(0+128)
  6166     02F7                     u5575:
  6167     02F7  1003               	clrc
  6168     02F8  0DC0               	rlf	___flmul@prod^(0+128),f
  6169     02F9  0DC1               	rlf	(___flmul@prod+1)^(0+128),f
  6170     02FA  0DC2               	rlf	(___flmul@prod+2)^(0+128),f
  6171     02FB  0DC3               	rlf	(___flmul@prod+3)^(0+128),f
  6172     02FC  0BB4               	decfsz	??___flmul^(0+128),f
  6173     02FD  2AF7               	goto	u5575
  6174     02FE                     l3918:
  6175     02FE  1FBE               	btfss	(___flmul@grs+3)^(0+128),7
  6176     02FF  2B01               	goto	u5581
  6177     0300  2B02               	goto	u5580
  6178     0301                     u5581:
  6179     0301  2B03               	goto	l3922
  6180     0302                     u5580:
  6181     0302                     l3920:
  6182     0302  1440               	bsf	___flmul@prod^(0+128),0
  6183     0303                     l3922:
  6184     0303  3001               	movlw	1
  6185     0304  00B4               	movwf	??___flmul^(0+128)
  6186     0305                     u5595:
  6187     0305  1003               	clrc
  6188     0306  0DBB               	rlf	___flmul@grs^(0+128),f
  6189     0307  0DBC               	rlf	(___flmul@grs+1)^(0+128),f
  6190     0308  0DBD               	rlf	(___flmul@grs+2)^(0+128),f
  6191     0309  0DBE               	rlf	(___flmul@grs+3)^(0+128),f
  6192     030A  0BB4               	decfsz	??___flmul^(0+128),f
  6193     030B  2B05               	goto	u5595
  6194     030C                     l3924:
  6195     030C  30FF               	movlw	255
  6196     030D  07C4               	addwf	___flmul@temp^(0+128),f
  6197     030E  1803               	skipnc
  6198     030F  0AC5               	incf	(___flmul@temp+1)^(0+128),f
  6199     0310  30FF               	movlw	255
  6200     0311  07C5               	addwf	(___flmul@temp+1)^(0+128),f
  6201     0312                     l3926:
  6202     0312  1FC2               	btfss	(___flmul@prod+2)^(0+128),7
  6203     0313  2B15               	goto	u5601
  6204     0314  2B16               	goto	u5600
  6205     0315                     u5601:
  6206     0315  2AF5               	goto	l3916
  6207     0316                     u5600:
  6208     0316                     l3928:
  6209     0316  01BA               	clrf	___flmul@aexp^(0+128)
  6210     0317                     l3930:
  6211     0317  1FBE               	btfss	(___flmul@grs+3)^(0+128),7
  6212     0318  2B1A               	goto	u5611
  6213     0319  2B1B               	goto	u5610
  6214     031A                     u5611:
  6215     031A  2B37               	goto	l3938
  6216     031B                     u5610:
  6217     031B                     l3932:
  6218     031B  30FF               	movlw	255
  6219     031C  053B               	andwf	___flmul@grs^(0+128),w
  6220     031D  00B4               	movwf	??___flmul^(0+128)
  6221     031E  30FF               	movlw	255
  6222     031F  053C               	andwf	(___flmul@grs+1)^(0+128),w
  6223     0320  00B5               	movwf	(??___flmul^(0+128)+1)
  6224     0321  30FF               	movlw	255
  6225     0322  053D               	andwf	(___flmul@grs+2)^(0+128),w
  6226     0323  00B6               	movwf	(??___flmul^(0+128)+2)
  6227     0324  307F               	movlw	127
  6228     0325  053E               	andwf	(___flmul@grs+3)^(0+128),w
  6229     0326  00B7               	movwf	(??___flmul^(0+128)+3)
  6230     0327  0837               	movf	(??___flmul+3)^(0+128),w
  6231     0328  0436               	iorwf	(??___flmul+2)^(0+128),w
  6232     0329  0435               	iorwf	(??___flmul+1)^(0+128),w
  6233     032A  0434               	iorwf	??___flmul^(0+128),w
  6234     032B  1903               	skipnz
  6235     032C  2B2E               	goto	u5621
  6236     032D  2B2F               	goto	u5620
  6237     032E                     u5621:
  6238     032E  2B32               	goto	l893
  6239     032F                     u5620:
  6240     032F                     l3934:
  6241     032F  01BA               	clrf	___flmul@aexp^(0+128)
  6242     0330  0ABA               	incf	___flmul@aexp^(0+128),f
  6243     0331  2B37               	goto	l3938
  6244     0332                     l893:
  6245     0332  1C40               	btfss	___flmul@prod^(0+128),0
  6246     0333  2B35               	goto	u5631
  6247     0334  2B36               	goto	u5630
  6248     0335                     u5631:
  6249     0335  2B37               	goto	l3938
  6250     0336                     u5630:
  6251     0336  2B2F               	goto	l3934
  6252     0337                     l3938:
  6253     0337  083A               	movf	___flmul@aexp^(0+128),w
  6254     0338  1903               	btfsc	3,2
  6255     0339  2B3B               	goto	u5641
  6256     033A  2B3C               	goto	u5640
  6257     033B                     u5641:
  6258     033B  2B6D               	goto	l3948
  6259     033C                     u5640:
  6260     033C                     l3940:
  6261     033C  3001               	movlw	1
  6262     033D  07C0               	addwf	___flmul@prod^(0+128),f
  6263     033E  3000               	movlw	0
  6264     033F  1803               	skipnc
  6265     0340  3001               	movlw	1
  6266     0341  07C1               	addwf	(___flmul@prod+1)^(0+128),f
  6267     0342  3000               	movlw	0
  6268     0343  1803               	skipnc
  6269     0344  3001               	movlw	1
  6270     0345  07C2               	addwf	(___flmul@prod+2)^(0+128),f
  6271     0346  3000               	movlw	0
  6272     0347  1803               	skipnc
  6273     0348  3001               	movlw	1
  6274     0349  07C3               	addwf	(___flmul@prod+3)^(0+128),f
  6275     034A                     l3942:
  6276     034A  1C43               	btfss	(___flmul@prod+3)^(0+128),0
  6277     034B  2B4D               	goto	u5651
  6278     034C  2B4E               	goto	u5650
  6279     034D                     u5651:
  6280     034D  2B6D               	goto	l3948
  6281     034E                     u5650:
  6282     034E                     l3944:
  6283     034E  0840               	movf	___flmul@prod^(0+128),w
  6284     034F  00B4               	movwf	??___flmul^(0+128)
  6285     0350  0841               	movf	(___flmul@prod+1)^(0+128),w
  6286     0351  00B5               	movwf	(??___flmul^(0+128)+1)
  6287     0352  0842               	movf	(___flmul@prod+2)^(0+128),w
  6288     0353  00B6               	movwf	(??___flmul^(0+128)+2)
  6289     0354  0843               	movf	(___flmul@prod+3)^(0+128),w
  6290     0355  00B7               	movwf	(??___flmul^(0+128)+3)
  6291     0356  3001               	movlw	1
  6292     0357  00B8               	movwf	(??___flmul+4)^(0+128)
  6293     0358                     u5665:
  6294     0358  0D37               	rlf	(??___flmul^(0+128)+3),w
  6295     0359  0CB7               	rrf	(??___flmul^(0+128)+3),f
  6296     035A  0CB6               	rrf	(??___flmul^(0+128)+2),f
  6297     035B  0CB5               	rrf	(??___flmul^(0+128)+1),f
  6298     035C  0CB4               	rrf	??___flmul^(0+128),f
  6299     035D                     u5660:
  6300     035D  0BB8               	decfsz	(??___flmul+4)^(0+128),f
  6301     035E  2B58               	goto	u5665
  6302     035F  0837               	movf	(??___flmul+3)^(0+128),w
  6303     0360  00C3               	movwf	(___flmul@prod+3)^(0+128)
  6304     0361  0836               	movf	(??___flmul+2)^(0+128),w
  6305     0362  00C2               	movwf	(___flmul@prod+2)^(0+128)
  6306     0363  0835               	movf	(??___flmul+1)^(0+128),w
  6307     0364  00C1               	movwf	(___flmul@prod+1)^(0+128)
  6308     0365  0834               	movf	??___flmul^(0+128),w
  6309     0366  00C0               	movwf	___flmul@prod^(0+128)
  6310     0367                     l3946:
  6311     0367  3001               	movlw	1
  6312     0368  07C4               	addwf	___flmul@temp^(0+128),f
  6313     0369  1803               	skipnc
  6314     036A  0AC5               	incf	(___flmul@temp+1)^(0+128),f
  6315     036B  3000               	movlw	0
  6316     036C  07C5               	addwf	(___flmul@temp+1)^(0+128),f
  6317     036D                     l3948:
  6318     036D  0845               	movf	(___flmul@temp+1)^(0+128),w
  6319     036E  3A80               	xorlw	128
  6320     036F  00FF               	movwf	btemp+1
  6321     0370  3080               	movlw	128
  6322     0371  027F               	subwf	btemp+1,w
  6323     0372  1D03               	skipz
  6324     0373  2B76               	goto	u5675
  6325     0374  30FF               	movlw	255
  6326     0375  0244               	subwf	___flmul@temp^(0+128),w
  6327     0376                     u5675:
  6328     0376  1C03               	skipc
  6329     0377  2B79               	goto	u5671
  6330     0378  2B7A               	goto	u5670
  6331     0379                     u5671:
  6332     0379  2B85               	goto	l3952
  6333     037A                     u5670:
  6334     037A                     l3950:
  6335     037A  307F               	movlw	127
  6336     037B  1683               	bsf	3,5	;RP0=1, select bank1
  6337     037C  1303               	bcf	3,6	;RP1=0, select bank1
  6338     037D  00C3               	movwf	(___flmul@prod+3)^(0+128)
  6339     037E  3080               	movlw	128
  6340     037F  00C2               	movwf	(___flmul@prod+2)^(0+128)
  6341     0380  3000               	movlw	0
  6342     0381  00C1               	movwf	(___flmul@prod+1)^(0+128)
  6343     0382  3000               	movlw	0
  6344     0383  00C0               	movwf	___flmul@prod^(0+128)
  6345     0384  2BB6               	goto	l899
  6346     0385                     l3952:
  6347     0385  1683               	bsf	3,5	;RP0=1, select bank1
  6348     0386  1303               	bcf	3,6	;RP1=0, select bank1
  6349     0387  0845               	movf	(___flmul@temp+1)^(0+128),w
  6350     0388  3A80               	xorlw	128
  6351     0389  00FF               	movwf	btemp+1
  6352     038A  3080               	movlw	128
  6353     038B  027F               	subwf	btemp+1,w
  6354     038C  1D03               	skipz
  6355     038D  2B90               	goto	u5685
  6356     038E  3001               	movlw	1
  6357     038F  0244               	subwf	___flmul@temp^(0+128),w
  6358     0390                     u5685:
  6359     0390  1803               	skipnc
  6360     0391  2B93               	goto	u5681
  6361     0392  2B94               	goto	u5680
  6362     0393                     u5681:
  6363     0393  2BA0               	goto	l3958
  6364     0394                     u5680:
  6365     0394                     l3954:
  6366     0394  3000               	movlw	0
  6367     0395  1683               	bsf	3,5	;RP0=1, select bank1
  6368     0396  1303               	bcf	3,6	;RP1=0, select bank1
  6369     0397  00C3               	movwf	(___flmul@prod+3)^(0+128)
  6370     0398  3000               	movlw	0
  6371     0399  00C2               	movwf	(___flmul@prod+2)^(0+128)
  6372     039A  3000               	movlw	0
  6373     039B  00C1               	movwf	(___flmul@prod+1)^(0+128)
  6374     039C  3000               	movlw	0
  6375     039D  00C0               	movwf	___flmul@prod^(0+128)
  6376     039E                     l3956:
  6377     039E  01B9               	clrf	___flmul@sign^(0+128)
  6378     039F  2BB6               	goto	l899
  6379     03A0                     l3958:
  6380     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  6381     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  6382     03A2  0844               	movf	___flmul@temp^(0+128),w
  6383     03A3  00BF               	movwf	___flmul@bexp^(0+128)
  6384     03A4  30FF               	movlw	255
  6385     03A5  05C0               	andwf	___flmul@prod^(0+128),f
  6386     03A6  30FF               	movlw	255
  6387     03A7  05C1               	andwf	(___flmul@prod+1)^(0+128),f
  6388     03A8  307F               	movlw	127
  6389     03A9  05C2               	andwf	(___flmul@prod+2)^(0+128),f
  6390     03AA  3000               	movlw	0
  6391     03AB  05C3               	andwf	(___flmul@prod+3)^(0+128),f
  6392     03AC                     l3960:
  6393     03AC  1C3F               	btfss	___flmul@bexp^(0+128),0
  6394     03AD  2BAF               	goto	u5691
  6395     03AE  2BB0               	goto	u5690
  6396     03AF                     u5691:
  6397     03AF  2BB1               	goto	l3964
  6398     03B0                     u5690:
  6399     03B0                     l3962:
  6400     03B0  17C2               	bsf	(___flmul@prod^(0+128)+2),7
  6401     03B1                     l3964:
  6402     03B1  083F               	movf	___flmul@bexp^(0+128),w
  6403     03B2  00B4               	movwf	??___flmul^(0+128)
  6404     03B3  1003               	clrc
  6405     03B4  0C34               	rrf	??___flmul^(0+128),w
  6406     03B5  00C3               	movwf	(___flmul@prod^(0+128)+3)
  6407     03B6                     l899:
  6408     03B6  0839               	movf	___flmul@sign^(0+128),w
  6409     03B7  00B4               	movwf	??___flmul^(0+128)
  6410     03B8  0834               	movf	??___flmul^(0+128),w
  6411     03B9  04C3               	iorwf	(___flmul@prod^(0+128)+3),f
  6412     03BA                     l3966:
  6413     03BA  0843               	movf	(___flmul@prod+3)^(0+128),w
  6414     03BB  00AF               	movwf	(?___flmul+3)^(0+128)
  6415     03BC  0842               	movf	(___flmul@prod+2)^(0+128),w
  6416     03BD  00AE               	movwf	(?___flmul+2)^(0+128)
  6417     03BE  0841               	movf	(___flmul@prod+1)^(0+128),w
  6418     03BF  00AD               	movwf	(?___flmul+1)^(0+128)
  6419     03C0  0840               	movf	___flmul@prod^(0+128),w
  6420     03C1  00AC               	movwf	?___flmul^(0+128)
  6421     03C2                     l887:
  6422     03C2  0008               	return
  6423     03C3                     __end_of___flmul:
  6424                           
  6425                           	psect	text16
  6426     15D6                     __ptext16:	
  6427 ;; *************** function __Umul8_16 *****************
  6428 ;; Defined at:
  6429 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  multiplier      1    wreg     unsigned char 
  6432 ;;  multiplicand    1   18[BANK0 ] unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  multiplier      1   26[BANK0 ] unsigned char 
  6435 ;;  word_mpld       2   24[BANK0 ] unsigned int 
  6436 ;;  product         2   22[BANK0 ] unsigned int 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2   18[BANK0 ] unsigned int 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6446 ;;      Params:         0       2       0       0       0
  6447 ;;      Locals:         0       5       0       0       0
  6448 ;;      Temps:          0       2       0       0       0
  6449 ;;      Totals:         0       9       0       0       0
  6450 ;;Total ram usage:        9 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 3
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		___flmul
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460     15D6                     __Umul8_16:	
  6461                           ;psect for function __Umul8_16
  6462                           
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6466                           ;__Umul8_16@multiplier stored from wreg
  6467     15D6  1283               	bcf	3,5	;RP0=0, select bank0
  6468     15D7  1303               	bcf	3,6	;RP1=0, select bank0
  6469     15D8  00BA               	movwf	__Umul8_16@multiplier
  6470     15D9                     l2606:
  6471     15D9  01B6               	clrf	__Umul8_16@product
  6472     15DA  01B7               	clrf	__Umul8_16@product+1
  6473     15DB                     l2608:
  6474     15DB  0832               	movf	__Umul8_16@multiplicand,w
  6475     15DC  00B4               	movwf	??__Umul8_16
  6476     15DD  01B5               	clrf	??__Umul8_16+1
  6477     15DE  0834               	movf	??__Umul8_16,w
  6478     15DF  00B8               	movwf	__Umul8_16@word_mpld
  6479     15E0  0835               	movf	??__Umul8_16+1,w
  6480     15E1  00B9               	movwf	__Umul8_16@word_mpld+1
  6481     15E2                     l2610:
  6482     15E2  1C3A               	btfss	__Umul8_16@multiplier,0
  6483     15E3  2DE5               	goto	u3041
  6484     15E4  2DE6               	goto	u3040
  6485     15E5                     u3041:
  6486     15E5  2DEC               	goto	l906
  6487     15E6                     u3040:
  6488     15E6                     l2612:
  6489     15E6  0838               	movf	__Umul8_16@word_mpld,w
  6490     15E7  07B6               	addwf	__Umul8_16@product,f
  6491     15E8  1803               	skipnc
  6492     15E9  0AB7               	incf	__Umul8_16@product+1,f
  6493     15EA  0839               	movf	__Umul8_16@word_mpld+1,w
  6494     15EB  07B7               	addwf	__Umul8_16@product+1,f
  6495     15EC                     l906:
  6496     15EC  3001               	movlw	1
  6497     15ED                     u3055:
  6498     15ED  1003               	clrc
  6499     15EE  0DB8               	rlf	__Umul8_16@word_mpld,f
  6500     15EF  0DB9               	rlf	__Umul8_16@word_mpld+1,f
  6501     15F0  3EFF               	addlw	-1
  6502     15F1  1D03               	skipz
  6503     15F2  2DED               	goto	u3055
  6504     15F3  1003               	clrc
  6505     15F4  0CBA               	rrf	__Umul8_16@multiplier,f
  6506     15F5                     l2614:
  6507     15F5  083A               	movf	__Umul8_16@multiplier,w
  6508     15F6  1D03               	btfss	3,2
  6509     15F7  2DF9               	goto	u3061
  6510     15F8  2DFA               	goto	u3060
  6511     15F9                     u3061:
  6512     15F9  2DE2               	goto	l2610
  6513     15FA                     u3060:
  6514     15FA                     l2616:
  6515     15FA  0837               	movf	__Umul8_16@product+1,w
  6516     15FB  00B3               	movwf	?__Umul8_16+1
  6517     15FC  0836               	movf	__Umul8_16@product,w
  6518     15FD  00B2               	movwf	?__Umul8_16
  6519     15FE                     l908:
  6520     15FE  0008               	return
  6521     15FF                     __end_of__Umul8_16:
  6522                           
  6523                           	psect	text17
  6524     0E2D                     __ptext17:	
  6525 ;; *************** function ___fldiv *****************
  6526 ;; Defined at:
  6527 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  a               4   38[BANK1 ] unsigned int 
  6530 ;;  b               4   42[BANK1 ] unsigned int 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  grs             4   58[BANK1 ] unsigned long 
  6533 ;;  rem             4   51[BANK1 ] unsigned long 
  6534 ;;  new_exp         2   56[BANK1 ] int 
  6535 ;;  aexp            1   63[BANK1 ] unsigned char 
  6536 ;;  bexp            1   62[BANK1 ] unsigned char 
  6537 ;;  sign            1   55[BANK1 ] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  4   38[BANK1 ] unsigned char 
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0, btemp+1
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6547 ;;      Params:         0       0       8       0       0
  6548 ;;      Locals:         0       0      13       0       0
  6549 ;;      Temps:          0       0       5       0       0
  6550 ;;      Totals:         0       0      26       0       0
  6551 ;;Total ram usage:       26 bytes
  6552 ;; Hardware stack levels used: 1
  6553 ;; Hardware stack levels required when called: 3
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_LcdALL_map
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561     0E2D                     ___fldiv:	
  6562                           ;psect for function ___fldiv
  6563                           
  6564     0E2D                     l2772:	
  6565                           ;incstack = 0
  6566                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6567                           
  6568     0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  6569     0E2E  1303               	bcf	3,6	;RP1=0, select bank1
  6570     0E2F  084D               	movf	(___fldiv@b^(0+128)+3),w
  6571     0E30  3980               	andlw	128
  6572     0E31  00D7               	movwf	___fldiv@sign^(0+128)
  6573     0E32                     l2774:
  6574     0E32  084D               	movf	(___fldiv@b^(0+128)+3),w
  6575     0E33  00CE               	movwf	??___fldiv^(0+128)
  6576     0E34  074E               	addwf	??___fldiv^(0+128),w
  6577     0E35  00DE               	movwf	___fldiv@bexp^(0+128)
  6578     0E36                     l2776:
  6579     0E36  1FCC               	btfss	(___fldiv@b^(0+128)+2),7
  6580     0E37  2E39               	goto	u3371
  6581     0E38  2E3A               	goto	u3370
  6582     0E39                     u3371:
  6583     0E39  2E3B               	goto	l2780
  6584     0E3A                     u3370:
  6585     0E3A                     l2778:
  6586     0E3A  145E               	bsf	___fldiv@bexp^(0+128),0
  6587     0E3B                     l2780:
  6588     0E3B  085E               	movf	___fldiv@bexp^(0+128),w
  6589     0E3C  1903               	btfsc	3,2
  6590     0E3D  2E3F               	goto	u3381
  6591     0E3E  2E40               	goto	u3380
  6592     0E3F                     u3381:
  6593     0E3F  2E50               	goto	l2790
  6594     0E40                     u3380:
  6595     0E40                     l2782:
  6596     0E40  0A5E               	incf	___fldiv@bexp^(0+128),w
  6597     0E41  1D03               	btfss	3,2
  6598     0E42  2E44               	goto	u3391
  6599     0E43  2E45               	goto	u3390
  6600     0E44                     u3391:
  6601     0E44  2E4D               	goto	l2786
  6602     0E45                     u3390:
  6603     0E45                     l2784:
  6604     0E45  3000               	movlw	0
  6605     0E46  00CD               	movwf	(___fldiv@b+3)^(0+128)
  6606     0E47  3000               	movlw	0
  6607     0E48  00CC               	movwf	(___fldiv@b+2)^(0+128)
  6608     0E49  3000               	movlw	0
  6609     0E4A  00CB               	movwf	(___fldiv@b+1)^(0+128)
  6610     0E4B  3000               	movlw	0
  6611     0E4C  00CA               	movwf	___fldiv@b^(0+128)
  6612     0E4D                     l2786:
  6613     0E4D  17CC               	bsf	(___fldiv@b^(0+128)+2),7
  6614     0E4E                     l2788:
  6615     0E4E  01CD               	clrf	(___fldiv@b^(0+128)+3)
  6616     0E4F  2E58               	goto	l2792
  6617     0E50                     l2790:
  6618     0E50  3000               	movlw	0
  6619     0E51  00CD               	movwf	(___fldiv@b+3)^(0+128)
  6620     0E52  3000               	movlw	0
  6621     0E53  00CC               	movwf	(___fldiv@b+2)^(0+128)
  6622     0E54  3000               	movlw	0
  6623     0E55  00CB               	movwf	(___fldiv@b+1)^(0+128)
  6624     0E56  3000               	movlw	0
  6625     0E57  00CA               	movwf	___fldiv@b^(0+128)
  6626     0E58                     l2792:
  6627     0E58  0849               	movf	(___fldiv@a^(0+128)+3),w
  6628     0E59  3980               	andlw	128
  6629     0E5A  00CE               	movwf	??___fldiv^(0+128)
  6630     0E5B  084E               	movf	??___fldiv^(0+128),w
  6631     0E5C  06D7               	xorwf	___fldiv@sign^(0+128),f
  6632     0E5D                     l2794:
  6633     0E5D  0849               	movf	(___fldiv@a^(0+128)+3),w
  6634     0E5E  00CE               	movwf	??___fldiv^(0+128)
  6635     0E5F  074E               	addwf	??___fldiv^(0+128),w
  6636     0E60  00DF               	movwf	___fldiv@aexp^(0+128)
  6637     0E61                     l2796:
  6638     0E61  1FC8               	btfss	(___fldiv@a^(0+128)+2),7
  6639     0E62  2E64               	goto	u3401
  6640     0E63  2E65               	goto	u3400
  6641     0E64                     u3401:
  6642     0E64  2E66               	goto	l2800
  6643     0E65                     u3400:
  6644     0E65                     l2798:
  6645     0E65  145F               	bsf	___fldiv@aexp^(0+128),0
  6646     0E66                     l2800:
  6647     0E66  085F               	movf	___fldiv@aexp^(0+128),w
  6648     0E67  1903               	btfsc	3,2
  6649     0E68  2E6A               	goto	u3411
  6650     0E69  2E6B               	goto	u3410
  6651     0E6A                     u3411:
  6652     0E6A  2E7B               	goto	l2810
  6653     0E6B                     u3410:
  6654     0E6B                     l2802:
  6655     0E6B  0A5F               	incf	___fldiv@aexp^(0+128),w
  6656     0E6C  1D03               	btfss	3,2
  6657     0E6D  2E6F               	goto	u3421
  6658     0E6E  2E70               	goto	u3420
  6659     0E6F                     u3421:
  6660     0E6F  2E78               	goto	l2806
  6661     0E70                     u3420:
  6662     0E70                     l2804:
  6663     0E70  3000               	movlw	0
  6664     0E71  00C9               	movwf	(___fldiv@a+3)^(0+128)
  6665     0E72  3000               	movlw	0
  6666     0E73  00C8               	movwf	(___fldiv@a+2)^(0+128)
  6667     0E74  3000               	movlw	0
  6668     0E75  00C7               	movwf	(___fldiv@a+1)^(0+128)
  6669     0E76  3000               	movlw	0
  6670     0E77  00C6               	movwf	___fldiv@a^(0+128)
  6671     0E78                     l2806:
  6672     0E78  17C8               	bsf	(___fldiv@a^(0+128)+2),7
  6673     0E79                     l2808:
  6674     0E79  01C9               	clrf	(___fldiv@a^(0+128)+3)
  6675     0E7A  2E83               	goto	l847
  6676     0E7B                     l2810:
  6677     0E7B  3000               	movlw	0
  6678     0E7C  00C9               	movwf	(___fldiv@a+3)^(0+128)
  6679     0E7D  3000               	movlw	0
  6680     0E7E  00C8               	movwf	(___fldiv@a+2)^(0+128)
  6681     0E7F  3000               	movlw	0
  6682     0E80  00C7               	movwf	(___fldiv@a+1)^(0+128)
  6683     0E81  3000               	movlw	0
  6684     0E82  00C6               	movwf	___fldiv@a^(0+128)
  6685     0E83                     l847:
  6686     0E83  0849               	movf	(___fldiv@a+3)^(0+128),w
  6687     0E84  0448               	iorwf	(___fldiv@a+2)^(0+128),w
  6688     0E85  0447               	iorwf	(___fldiv@a+1)^(0+128),w
  6689     0E86  0446               	iorwf	___fldiv@a^(0+128),w
  6690     0E87  1D03               	skipz
  6691     0E88  2E8A               	goto	u3431
  6692     0E89  2E8B               	goto	u3430
  6693     0E8A                     u3431:
  6694     0E8A  2EA4               	goto	l2820
  6695     0E8B                     u3430:
  6696     0E8B                     l2812:
  6697     0E8B  3000               	movlw	0
  6698     0E8C  00CD               	movwf	(___fldiv@b+3)^(0+128)
  6699     0E8D  3000               	movlw	0
  6700     0E8E  00CC               	movwf	(___fldiv@b+2)^(0+128)
  6701     0E8F  3000               	movlw	0
  6702     0E90  00CB               	movwf	(___fldiv@b+1)^(0+128)
  6703     0E91  3000               	movlw	0
  6704     0E92  00CA               	movwf	___fldiv@b^(0+128)
  6705     0E93  3080               	movlw	128
  6706     0E94  04CC               	iorwf	(___fldiv@b^(0+128)+2),f
  6707     0E95  307F               	movlw	127
  6708     0E96  04CD               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  6709     0E97                     l2814:
  6710     0E97  0857               	movf	___fldiv@sign^(0+128),w
  6711     0E98  00CE               	movwf	??___fldiv^(0+128)
  6712     0E99  084E               	movf	??___fldiv^(0+128),w
  6713     0E9A  04CD               	iorwf	(___fldiv@b^(0+128)+3),f
  6714     0E9B                     l2816:
  6715     0E9B  084D               	movf	(___fldiv@b+3)^(0+128),w
  6716     0E9C  00C9               	movwf	(?___fldiv+3)^(0+128)
  6717     0E9D  084C               	movf	(___fldiv@b+2)^(0+128),w
  6718     0E9E  00C8               	movwf	(?___fldiv+2)^(0+128)
  6719     0E9F  084B               	movf	(___fldiv@b+1)^(0+128),w
  6720     0EA0  00C7               	movwf	(?___fldiv+1)^(0+128)
  6721     0EA1  084A               	movf	___fldiv@b^(0+128),w
  6722     0EA2  00C6               	movwf	?___fldiv^(0+128)
  6723     0EA3  2FFF               	goto	l849
  6724     0EA4                     l2820:
  6725     0EA4  085E               	movf	___fldiv@bexp^(0+128),w
  6726     0EA5  1D03               	btfss	3,2
  6727     0EA6  2EA8               	goto	u3441
  6728     0EA7  2EA9               	goto	u3440
  6729     0EA8                     u3441:
  6730     0EA8  2EB2               	goto	l2826
  6731     0EA9                     u3440:
  6732     0EA9                     l2822:
  6733     0EA9  3000               	movlw	0
  6734     0EAA  00C9               	movwf	(?___fldiv+3)^(0+128)
  6735     0EAB  3000               	movlw	0
  6736     0EAC  00C8               	movwf	(?___fldiv+2)^(0+128)
  6737     0EAD  3000               	movlw	0
  6738     0EAE  00C7               	movwf	(?___fldiv+1)^(0+128)
  6739     0EAF  3000               	movlw	0
  6740     0EB0  00C6               	movwf	?___fldiv^(0+128)
  6741     0EB1  2FFF               	goto	l849
  6742     0EB2                     l2826:
  6743     0EB2  085E               	movf	___fldiv@bexp^(0+128),w
  6744     0EB3  00CE               	movwf	??___fldiv^(0+128)
  6745     0EB4  01CF               	clrf	(??___fldiv^(0+128)+1)
  6746     0EB5  084F               	movf	(??___fldiv+1)^(0+128),w
  6747     0EB6  00D1               	movwf	((??___fldiv+2)^(0+128)+1)
  6748     0EB7  085F               	movf	___fldiv@aexp^(0+128),w
  6749     0EB8  024E               	subwf	??___fldiv^(0+128),w
  6750     0EB9  00D0               	movwf	(??___fldiv+2)^(0+128)
  6751     0EBA  1C03               	skipc
  6752     0EBB  03D1               	decf	((??___fldiv+2)^(0+128)+1),f
  6753     0EBC  0850               	movf	(??___fldiv+2)^(0+128),w
  6754     0EBD  3E7F               	addlw	127
  6755     0EBE  00D8               	movwf	___fldiv@new_exp^(0+128)
  6756     0EBF  0851               	movf	(??___fldiv+3)^(0+128),w
  6757     0EC0  1803               	skipnc
  6758     0EC1  3E01               	addlw	1
  6759     0EC2  3E00               	addlw	0
  6760     0EC3  00D9               	movwf	(___fldiv@new_exp+1)^(0+128)
  6761     0EC4                     l2828:
  6762     0EC4  084D               	movf	(___fldiv@b+3)^(0+128),w
  6763     0EC5  00D6               	movwf	(___fldiv@rem+3)^(0+128)
  6764     0EC6  084C               	movf	(___fldiv@b+2)^(0+128),w
  6765     0EC7  00D5               	movwf	(___fldiv@rem+2)^(0+128)
  6766     0EC8  084B               	movf	(___fldiv@b+1)^(0+128),w
  6767     0EC9  00D4               	movwf	(___fldiv@rem+1)^(0+128)
  6768     0ECA  084A               	movf	___fldiv@b^(0+128),w
  6769     0ECB  00D3               	movwf	___fldiv@rem^(0+128)
  6770     0ECC                     l2830:
  6771     0ECC  3000               	movlw	0
  6772     0ECD  00CD               	movwf	(___fldiv@b+3)^(0+128)
  6773     0ECE  3000               	movlw	0
  6774     0ECF  00CC               	movwf	(___fldiv@b+2)^(0+128)
  6775     0ED0  3000               	movlw	0
  6776     0ED1  00CB               	movwf	(___fldiv@b+1)^(0+128)
  6777     0ED2  3000               	movlw	0
  6778     0ED3  00CA               	movwf	___fldiv@b^(0+128)
  6779     0ED4                     l2832:
  6780     0ED4  3000               	movlw	0
  6781     0ED5  00DD               	movwf	(___fldiv@grs+3)^(0+128)
  6782     0ED6  3000               	movlw	0
  6783     0ED7  00DC               	movwf	(___fldiv@grs+2)^(0+128)
  6784     0ED8  3000               	movlw	0
  6785     0ED9  00DB               	movwf	(___fldiv@grs+1)^(0+128)
  6786     0EDA  3000               	movlw	0
  6787     0EDB  00DA               	movwf	___fldiv@grs^(0+128)
  6788     0EDC                     l2834:
  6789     0EDC  01DF               	clrf	___fldiv@aexp^(0+128)
  6790     0EDD  2F28               	goto	l2854
  6791     0EDE                     l2836:
  6792     0EDE  085F               	movf	___fldiv@aexp^(0+128),w
  6793     0EDF  1903               	btfsc	3,2
  6794     0EE0  2EE2               	goto	u3451
  6795     0EE1  2EE3               	goto	u3450
  6796     0EE2                     u3451:
  6797     0EE2  2F03               	goto	l2846
  6798     0EE3                     u3450:
  6799     0EE3                     l2838:
  6800     0EE3  3001               	movlw	1
  6801     0EE4  00CE               	movwf	??___fldiv^(0+128)
  6802     0EE5                     u3465:
  6803     0EE5  1003               	clrc
  6804     0EE6  0DD3               	rlf	___fldiv@rem^(0+128),f
  6805     0EE7  0DD4               	rlf	(___fldiv@rem+1)^(0+128),f
  6806     0EE8  0DD5               	rlf	(___fldiv@rem+2)^(0+128),f
  6807     0EE9  0DD6               	rlf	(___fldiv@rem+3)^(0+128),f
  6808     0EEA  0BCE               	decfsz	??___fldiv^(0+128),f
  6809     0EEB  2EE5               	goto	u3465
  6810     0EEC  3001               	movlw	1
  6811     0EED  00CE               	movwf	??___fldiv^(0+128)
  6812     0EEE                     u3475:
  6813     0EEE  1003               	clrc
  6814     0EEF  0DCA               	rlf	___fldiv@b^(0+128),f
  6815     0EF0  0DCB               	rlf	(___fldiv@b+1)^(0+128),f
  6816     0EF1  0DCC               	rlf	(___fldiv@b+2)^(0+128),f
  6817     0EF2  0DCD               	rlf	(___fldiv@b+3)^(0+128),f
  6818     0EF3  0BCE               	decfsz	??___fldiv^(0+128),f
  6819     0EF4  2EEE               	goto	u3475
  6820     0EF5                     l2840:
  6821     0EF5  1FDD               	btfss	(___fldiv@grs+3)^(0+128),7
  6822     0EF6  2EF8               	goto	u3481
  6823     0EF7  2EF9               	goto	u3480
  6824     0EF8                     u3481:
  6825     0EF8  2EFA               	goto	l2844
  6826     0EF9                     u3480:
  6827     0EF9                     l2842:
  6828     0EF9  144A               	bsf	___fldiv@b^(0+128),0
  6829     0EFA                     l2844:
  6830     0EFA  3001               	movlw	1
  6831     0EFB  00CE               	movwf	??___fldiv^(0+128)
  6832     0EFC                     u3495:
  6833     0EFC  1003               	clrc
  6834     0EFD  0DDA               	rlf	___fldiv@grs^(0+128),f
  6835     0EFE  0DDB               	rlf	(___fldiv@grs+1)^(0+128),f
  6836     0EFF  0DDC               	rlf	(___fldiv@grs+2)^(0+128),f
  6837     0F00  0DDD               	rlf	(___fldiv@grs+3)^(0+128),f
  6838     0F01  0BCE               	decfsz	??___fldiv^(0+128),f
  6839     0F02  2EFC               	goto	u3495
  6840     0F03                     l2846:
  6841     0F03  0849               	movf	(___fldiv@a+3)^(0+128),w
  6842     0F04  0256               	subwf	(___fldiv@rem+3)^(0+128),w
  6843     0F05  1D03               	skipz
  6844     0F06  2F11               	goto	u3505
  6845     0F07  0848               	movf	(___fldiv@a+2)^(0+128),w
  6846     0F08  0255               	subwf	(___fldiv@rem+2)^(0+128),w
  6847     0F09  1D03               	skipz
  6848     0F0A  2F11               	goto	u3505
  6849     0F0B  0847               	movf	(___fldiv@a+1)^(0+128),w
  6850     0F0C  0254               	subwf	(___fldiv@rem+1)^(0+128),w
  6851     0F0D  1D03               	skipz
  6852     0F0E  2F11               	goto	u3505
  6853     0F0F  0846               	movf	___fldiv@a^(0+128),w
  6854     0F10  0253               	subwf	___fldiv@rem^(0+128),w
  6855     0F11                     u3505:
  6856     0F11  1C03               	skipc
  6857     0F12  2F14               	goto	u3501
  6858     0F13  2F15               	goto	u3500
  6859     0F14                     u3501:
  6860     0F14  2F24               	goto	l2852
  6861     0F15                     u3500:
  6862     0F15                     l2848:
  6863     0F15  175D               	bsf	(___fldiv@grs^(0+128)+3),6
  6864     0F16                     l2850:
  6865     0F16  0846               	movf	___fldiv@a^(0+128),w
  6866     0F17  02D3               	subwf	___fldiv@rem^(0+128),f
  6867     0F18  0847               	movf	(___fldiv@a+1)^(0+128),w
  6868     0F19  1C03               	skipc
  6869     0F1A  0F47               	incfsz	(___fldiv@a+1)^(0+128),w
  6870     0F1B  02D4               	subwf	(___fldiv@rem+1)^(0+128),f
  6871     0F1C  0848               	movf	(___fldiv@a+2)^(0+128),w
  6872     0F1D  1C03               	skipc
  6873     0F1E  0F48               	incfsz	(___fldiv@a+2)^(0+128),w
  6874     0F1F  02D5               	subwf	(___fldiv@rem+2)^(0+128),f
  6875     0F20  0849               	movf	(___fldiv@a+3)^(0+128),w
  6876     0F21  1C03               	skipc
  6877     0F22  0F49               	incfsz	(___fldiv@a+3)^(0+128),w
  6878     0F23  02D6               	subwf	(___fldiv@rem+3)^(0+128),f
  6879     0F24                     l2852:
  6880     0F24  3001               	movlw	1
  6881     0F25  00CE               	movwf	??___fldiv^(0+128)
  6882     0F26  084E               	movf	??___fldiv^(0+128),w
  6883     0F27  07DF               	addwf	___fldiv@aexp^(0+128),f
  6884     0F28                     l2854:
  6885     0F28  301A               	movlw	26
  6886     0F29  025F               	subwf	___fldiv@aexp^(0+128),w
  6887     0F2A  1C03               	skipc
  6888     0F2B  2F2D               	goto	u3511
  6889     0F2C  2F2E               	goto	u3510
  6890     0F2D                     u3511:
  6891     0F2D  2EDE               	goto	l2836
  6892     0F2E                     u3510:
  6893     0F2E                     l2856:
  6894     0F2E  0856               	movf	(___fldiv@rem+3)^(0+128),w
  6895     0F2F  0455               	iorwf	(___fldiv@rem+2)^(0+128),w
  6896     0F30  0454               	iorwf	(___fldiv@rem+1)^(0+128),w
  6897     0F31  0453               	iorwf	___fldiv@rem^(0+128),w
  6898     0F32  1903               	skipnz
  6899     0F33  2F35               	goto	u3521
  6900     0F34  2F36               	goto	u3520
  6901     0F35                     u3521:
  6902     0F35  2F55               	goto	l2870
  6903     0F36                     u3520:
  6904     0F36                     l2858:
  6905     0F36  145A               	bsf	___fldiv@grs^(0+128),0
  6906     0F37  2F55               	goto	l2870
  6907     0F38                     l2860:
  6908     0F38  3001               	movlw	1
  6909     0F39  00CE               	movwf	??___fldiv^(0+128)
  6910     0F3A                     u3535:
  6911     0F3A  1003               	clrc
  6912     0F3B  0DCA               	rlf	___fldiv@b^(0+128),f
  6913     0F3C  0DCB               	rlf	(___fldiv@b+1)^(0+128),f
  6914     0F3D  0DCC               	rlf	(___fldiv@b+2)^(0+128),f
  6915     0F3E  0DCD               	rlf	(___fldiv@b+3)^(0+128),f
  6916     0F3F  0BCE               	decfsz	??___fldiv^(0+128),f
  6917     0F40  2F3A               	goto	u3535
  6918     0F41                     l2862:
  6919     0F41  1FDD               	btfss	(___fldiv@grs+3)^(0+128),7
  6920     0F42  2F44               	goto	u3541
  6921     0F43  2F45               	goto	u3540
  6922     0F44                     u3541:
  6923     0F44  2F46               	goto	l2866
  6924     0F45                     u3540:
  6925     0F45                     l2864:
  6926     0F45  144A               	bsf	___fldiv@b^(0+128),0
  6927     0F46                     l2866:
  6928     0F46  3001               	movlw	1
  6929     0F47  00CE               	movwf	??___fldiv^(0+128)
  6930     0F48                     u3555:
  6931     0F48  1003               	clrc
  6932     0F49  0DDA               	rlf	___fldiv@grs^(0+128),f
  6933     0F4A  0DDB               	rlf	(___fldiv@grs+1)^(0+128),f
  6934     0F4B  0DDC               	rlf	(___fldiv@grs+2)^(0+128),f
  6935     0F4C  0DDD               	rlf	(___fldiv@grs+3)^(0+128),f
  6936     0F4D  0BCE               	decfsz	??___fldiv^(0+128),f
  6937     0F4E  2F48               	goto	u3555
  6938     0F4F                     l2868:
  6939     0F4F  30FF               	movlw	255
  6940     0F50  07D8               	addwf	___fldiv@new_exp^(0+128),f
  6941     0F51  1803               	skipnc
  6942     0F52  0AD9               	incf	(___fldiv@new_exp+1)^(0+128),f
  6943     0F53  30FF               	movlw	255
  6944     0F54  07D9               	addwf	(___fldiv@new_exp+1)^(0+128),f
  6945     0F55                     l2870:
  6946     0F55  1FCC               	btfss	(___fldiv@b+2)^(0+128),7
  6947     0F56  2F58               	goto	u3561
  6948     0F57  2F59               	goto	u3560
  6949     0F58                     u3561:
  6950     0F58  2F38               	goto	l2860
  6951     0F59                     u3560:
  6952     0F59                     l2872:
  6953     0F59  01DF               	clrf	___fldiv@aexp^(0+128)
  6954     0F5A                     l2874:
  6955     0F5A  1FDD               	btfss	(___fldiv@grs+3)^(0+128),7
  6956     0F5B  2F5D               	goto	u3571
  6957     0F5C  2F5E               	goto	u3570
  6958     0F5D                     u3571:
  6959     0F5D  2F7A               	goto	l2882
  6960     0F5E                     u3570:
  6961     0F5E                     l2876:
  6962     0F5E  30FF               	movlw	255
  6963     0F5F  055A               	andwf	___fldiv@grs^(0+128),w
  6964     0F60  00CE               	movwf	??___fldiv^(0+128)
  6965     0F61  30FF               	movlw	255
  6966     0F62  055B               	andwf	(___fldiv@grs+1)^(0+128),w
  6967     0F63  00CF               	movwf	(??___fldiv^(0+128)+1)
  6968     0F64  30FF               	movlw	255
  6969     0F65  055C               	andwf	(___fldiv@grs+2)^(0+128),w
  6970     0F66  00D0               	movwf	(??___fldiv^(0+128)+2)
  6971     0F67  307F               	movlw	127
  6972     0F68  055D               	andwf	(___fldiv@grs+3)^(0+128),w
  6973     0F69  00D1               	movwf	(??___fldiv^(0+128)+3)
  6974     0F6A  0851               	movf	(??___fldiv+3)^(0+128),w
  6975     0F6B  0450               	iorwf	(??___fldiv+2)^(0+128),w
  6976     0F6C  044F               	iorwf	(??___fldiv+1)^(0+128),w
  6977     0F6D  044E               	iorwf	??___fldiv^(0+128),w
  6978     0F6E  1903               	skipnz
  6979     0F6F  2F71               	goto	u3581
  6980     0F70  2F72               	goto	u3580
  6981     0F71                     u3581:
  6982     0F71  2F75               	goto	l863
  6983     0F72                     u3580:
  6984     0F72                     l2878:
  6985     0F72  01DF               	clrf	___fldiv@aexp^(0+128)
  6986     0F73  0ADF               	incf	___fldiv@aexp^(0+128),f
  6987     0F74  2F7A               	goto	l2882
  6988     0F75                     l863:
  6989     0F75  1C4A               	btfss	___fldiv@b^(0+128),0
  6990     0F76  2F78               	goto	u3591
  6991     0F77  2F79               	goto	u3590
  6992     0F78                     u3591:
  6993     0F78  2F7A               	goto	l2882
  6994     0F79                     u3590:
  6995     0F79  2F72               	goto	l2878
  6996     0F7A                     l2882:
  6997     0F7A  085F               	movf	___fldiv@aexp^(0+128),w
  6998     0F7B  1903               	btfsc	3,2
  6999     0F7C  2F7E               	goto	u3601
  7000     0F7D  2F7F               	goto	u3600
  7001     0F7E                     u3601:
  7002     0F7E  2FB0               	goto	l2892
  7003     0F7F                     u3600:
  7004     0F7F                     l2884:
  7005     0F7F  3001               	movlw	1
  7006     0F80  07CA               	addwf	___fldiv@b^(0+128),f
  7007     0F81  3000               	movlw	0
  7008     0F82  1803               	skipnc
  7009     0F83  3001               	movlw	1
  7010     0F84  07CB               	addwf	(___fldiv@b+1)^(0+128),f
  7011     0F85  3000               	movlw	0
  7012     0F86  1803               	skipnc
  7013     0F87  3001               	movlw	1
  7014     0F88  07CC               	addwf	(___fldiv@b+2)^(0+128),f
  7015     0F89  3000               	movlw	0
  7016     0F8A  1803               	skipnc
  7017     0F8B  3001               	movlw	1
  7018     0F8C  07CD               	addwf	(___fldiv@b+3)^(0+128),f
  7019     0F8D                     l2886:
  7020     0F8D  1C4D               	btfss	(___fldiv@b+3)^(0+128),0
  7021     0F8E  2F90               	goto	u3611
  7022     0F8F  2F91               	goto	u3610
  7023     0F90                     u3611:
  7024     0F90  2FB0               	goto	l2892
  7025     0F91                     u3610:
  7026     0F91                     l2888:
  7027     0F91  084A               	movf	___fldiv@b^(0+128),w
  7028     0F92  00CE               	movwf	??___fldiv^(0+128)
  7029     0F93  084B               	movf	(___fldiv@b+1)^(0+128),w
  7030     0F94  00CF               	movwf	(??___fldiv^(0+128)+1)
  7031     0F95  084C               	movf	(___fldiv@b+2)^(0+128),w
  7032     0F96  00D0               	movwf	(??___fldiv^(0+128)+2)
  7033     0F97  084D               	movf	(___fldiv@b+3)^(0+128),w
  7034     0F98  00D1               	movwf	(??___fldiv^(0+128)+3)
  7035     0F99  3001               	movlw	1
  7036     0F9A  00D2               	movwf	(??___fldiv+4)^(0+128)
  7037     0F9B                     u3625:
  7038     0F9B  0D51               	rlf	(??___fldiv^(0+128)+3),w
  7039     0F9C  0CD1               	rrf	(??___fldiv^(0+128)+3),f
  7040     0F9D  0CD0               	rrf	(??___fldiv^(0+128)+2),f
  7041     0F9E  0CCF               	rrf	(??___fldiv^(0+128)+1),f
  7042     0F9F  0CCE               	rrf	??___fldiv^(0+128),f
  7043     0FA0                     u3620:
  7044     0FA0  0BD2               	decfsz	(??___fldiv+4)^(0+128),f
  7045     0FA1  2F9B               	goto	u3625
  7046     0FA2  0851               	movf	(??___fldiv+3)^(0+128),w
  7047     0FA3  00CD               	movwf	(___fldiv@b+3)^(0+128)
  7048     0FA4  0850               	movf	(??___fldiv+2)^(0+128),w
  7049     0FA5  00CC               	movwf	(___fldiv@b+2)^(0+128)
  7050     0FA6  084F               	movf	(??___fldiv+1)^(0+128),w
  7051     0FA7  00CB               	movwf	(___fldiv@b+1)^(0+128)
  7052     0FA8  084E               	movf	??___fldiv^(0+128),w
  7053     0FA9  00CA               	movwf	___fldiv@b^(0+128)
  7054     0FAA                     l2890:
  7055     0FAA  3001               	movlw	1
  7056     0FAB  07D8               	addwf	___fldiv@new_exp^(0+128),f
  7057     0FAC  1803               	skipnc
  7058     0FAD  0AD9               	incf	(___fldiv@new_exp+1)^(0+128),f
  7059     0FAE  3000               	movlw	0
  7060     0FAF  07D9               	addwf	(___fldiv@new_exp+1)^(0+128),f
  7061     0FB0                     l2892:
  7062     0FB0  0859               	movf	(___fldiv@new_exp+1)^(0+128),w
  7063     0FB1  3A80               	xorlw	128
  7064     0FB2  00FF               	movwf	btemp+1
  7065     0FB3  3080               	movlw	128
  7066     0FB4  027F               	subwf	btemp+1,w
  7067     0FB5  1D03               	skipz
  7068     0FB6  2FB9               	goto	u3635
  7069     0FB7  30FF               	movlw	255
  7070     0FB8  0258               	subwf	___fldiv@new_exp^(0+128),w
  7071     0FB9                     u3635:
  7072     0FB9  1C03               	skipc
  7073     0FBA  2FBC               	goto	u3631
  7074     0FBB  2FBD               	goto	u3630
  7075     0FBC                     u3631:
  7076     0FBC  2FCB               	goto	l2896
  7077     0FBD                     u3630:
  7078     0FBD                     l2894:
  7079     0FBD  30FF               	movlw	255
  7080     0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  7081     0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  7082     0FC0  00D8               	movwf	___fldiv@new_exp^(0+128)
  7083     0FC1  3000               	movlw	0
  7084     0FC2  00D9               	movwf	(___fldiv@new_exp^(0+128)+1)
  7085     0FC3  3000               	movlw	0
  7086     0FC4  00CD               	movwf	(___fldiv@b+3)^(0+128)
  7087     0FC5  3000               	movlw	0
  7088     0FC6  00CC               	movwf	(___fldiv@b+2)^(0+128)
  7089     0FC7  3000               	movlw	0
  7090     0FC8  00CB               	movwf	(___fldiv@b+1)^(0+128)
  7091     0FC9  3000               	movlw	0
  7092     0FCA  00CA               	movwf	___fldiv@b^(0+128)
  7093     0FCB                     l2896:
  7094     0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  7095     0FCC  1303               	bcf	3,6	;RP1=0, select bank1
  7096     0FCD  0859               	movf	(___fldiv@new_exp+1)^(0+128),w
  7097     0FCE  3A80               	xorlw	128
  7098     0FCF  00FF               	movwf	btemp+1
  7099     0FD0  3080               	movlw	128
  7100     0FD1  027F               	subwf	btemp+1,w
  7101     0FD2  1D03               	skipz
  7102     0FD3  2FD6               	goto	u3645
  7103     0FD4  3001               	movlw	1
  7104     0FD5  0258               	subwf	___fldiv@new_exp^(0+128),w
  7105     0FD6                     u3645:
  7106     0FD6  1803               	skipnc
  7107     0FD7  2FD9               	goto	u3641
  7108     0FD8  2FDA               	goto	u3640
  7109     0FD9                     u3641:
  7110     0FD9  2FE7               	goto	l869
  7111     0FDA                     u3640:
  7112     0FDA                     l2898:
  7113     0FDA  1683               	bsf	3,5	;RP0=1, select bank1
  7114     0FDB  1303               	bcf	3,6	;RP1=0, select bank1
  7115     0FDC  01D8               	clrf	___fldiv@new_exp^(0+128)
  7116     0FDD  01D9               	clrf	(___fldiv@new_exp+1)^(0+128)
  7117     0FDE                     l2900:
  7118     0FDE  3000               	movlw	0
  7119     0FDF  00CD               	movwf	(___fldiv@b+3)^(0+128)
  7120     0FE0  3000               	movlw	0
  7121     0FE1  00CC               	movwf	(___fldiv@b+2)^(0+128)
  7122     0FE2  3000               	movlw	0
  7123     0FE3  00CB               	movwf	(___fldiv@b+1)^(0+128)
  7124     0FE4  3000               	movlw	0
  7125     0FE5  00CA               	movwf	___fldiv@b^(0+128)
  7126     0FE6                     l2902:
  7127     0FE6  01D7               	clrf	___fldiv@sign^(0+128)
  7128     0FE7                     l869:
  7129     0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  7130     0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  7131     0FE9  0858               	movf	___fldiv@new_exp^(0+128),w
  7132     0FEA  00DE               	movwf	___fldiv@bexp^(0+128)
  7133     0FEB                     l2904:
  7134     0FEB  1C5E               	btfss	___fldiv@bexp^(0+128),0
  7135     0FEC  2FEE               	goto	u3651
  7136     0FED  2FEF               	goto	u3650
  7137     0FEE                     u3651:
  7138     0FEE  2FF1               	goto	l2908
  7139     0FEF                     u3650:
  7140     0FEF                     l2906:
  7141     0FEF  17CC               	bsf	(___fldiv@b^(0+128)+2),7
  7142     0FF0  2FF5               	goto	l871
  7143     0FF1                     l2908:
  7144     0FF1  307F               	movlw	127
  7145     0FF2  00CE               	movwf	??___fldiv^(0+128)
  7146     0FF3  084E               	movf	??___fldiv^(0+128),w
  7147     0FF4  05CC               	andwf	(___fldiv@b^(0+128)+2),f
  7148     0FF5                     l871:
  7149     0FF5  085E               	movf	___fldiv@bexp^(0+128),w
  7150     0FF6  00CE               	movwf	??___fldiv^(0+128)
  7151     0FF7  1003               	clrc
  7152     0FF8  0C4E               	rrf	??___fldiv^(0+128),w
  7153     0FF9  00CD               	movwf	(___fldiv@b^(0+128)+3)
  7154     0FFA  0857               	movf	___fldiv@sign^(0+128),w
  7155     0FFB  00CE               	movwf	??___fldiv^(0+128)
  7156     0FFC  084E               	movf	??___fldiv^(0+128),w
  7157     0FFD  04CD               	iorwf	(___fldiv@b^(0+128)+3),f
  7158     0FFE  2E9B               	goto	l2816
  7159     0FFF                     l849:
  7160     0FFF  0008               	return
  7161     1000                     __end_of___fldiv:
  7162                           
  7163                           	psect	text18
  7164     15AD                     __ptext18:	
  7165 ;; *************** function _LcdALL_Write_String *****************
  7166 ;; Defined at:
  7167 ;;		line 72 in file "LCD_ALL.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  a               1    wreg     PTR unsigned char 
  7170 ;;		 -> STR_3(4), STR_2(12), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  a               1   25[BANK0 ] PTR unsigned char 
  7173 ;;		 -> STR_3(4), STR_2(12), 
  7174 ;;  i               2   23[BANK0 ] int 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7184 ;;      Params:         0       0       0       0       0
  7185 ;;      Locals:         0       3       0       0       0
  7186 ;;      Temps:          0       0       0       0       0
  7187 ;;      Totals:         0       3       0       0       0
  7188 ;;Total ram usage:        3 bytes
  7189 ;; Hardware stack levels used: 1
  7190 ;; Hardware stack levels required when called: 5
  7191 ;; This function calls:
  7192 ;;		_LcdALL_Write_Char
  7193 ;; This function is called by:
  7194 ;;		_main
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198     15AD                     _LcdALL_Write_String:	
  7199                           ;psect for function _LcdALL_Write_String
  7200                           
  7201                           
  7202                           ;incstack = 0
  7203                           ; Regs used in _LcdALL_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7204                           ;LcdALL_Write_String@a stored from wreg
  7205     15AD  1283               	bcf	3,5	;RP0=0, select bank0
  7206     15AE  1303               	bcf	3,6	;RP1=0, select bank0
  7207     15AF  00B9               	movwf	LcdALL_Write_String@a
  7208     15B0                     l3222:
  7209                           
  7210                           ;LCD_ALL.c: 73:     int i;;LCD_ALL.c: 74:     for (i = 0; a[i] != '\0'; i++)
  7211     15B0  01B7               	clrf	LcdALL_Write_String@i
  7212     15B1  01B8               	clrf	LcdALL_Write_String@i+1
  7213     15B2  2DC8               	goto	l3228
  7214     15B3                     l3224:
  7215                           
  7216                           ;LCD_ALL.c: 75:         LcdALL_Write_Char(a[i]);
  7217     15B3  0837               	movf	LcdALL_Write_String@i,w
  7218     15B4  0739               	addwf	LcdALL_Write_String@a,w
  7219     15B5  0084               	movwf	4
  7220     15B6  160A  118A  2000  160A  118A  	fcall	stringdir
  7221     15BB  160A  118A  2501  160A  118A  	fcall	_LcdALL_Write_Char
  7222     15C0                     l3226:
  7223     15C0  3001               	movlw	1
  7224     15C1  1283               	bcf	3,5	;RP0=0, select bank0
  7225     15C2  1303               	bcf	3,6	;RP1=0, select bank0
  7226     15C3  07B7               	addwf	LcdALL_Write_String@i,f
  7227     15C4  1803               	skipnc
  7228     15C5  0AB8               	incf	LcdALL_Write_String@i+1,f
  7229     15C6  3000               	movlw	0
  7230     15C7  07B8               	addwf	LcdALL_Write_String@i+1,f
  7231     15C8                     l3228:
  7232     15C8  0837               	movf	LcdALL_Write_String@i,w
  7233     15C9  0739               	addwf	LcdALL_Write_String@a,w
  7234     15CA  0084               	movwf	4
  7235     15CB  160A  118A  2000  160A  118A  	fcall	stringdir
  7236     15D0  3A00               	xorlw	0
  7237     15D1  1D03               	skipz
  7238     15D2  2DD4               	goto	u4251
  7239     15D3  2DD5               	goto	u4250
  7240     15D4                     u4251:
  7241     15D4  2DB3               	goto	l3224
  7242     15D5                     u4250:
  7243     15D5                     l269:
  7244     15D5  0008               	return
  7245     15D6                     __end_of_LcdALL_Write_String:
  7246                           
  7247                           	psect	text19
  7248     1501                     __ptext19:	
  7249 ;; *************** function _LcdALL_Write_Char *****************
  7250 ;; Defined at:
  7251 ;;		line 64 in file "LCD_ALL.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  a               1    wreg     unsigned char 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  a               1   22[BANK0 ] unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0, pclath, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7265 ;;      Params:         0       0       0       0       0
  7266 ;;      Locals:         0       1       0       0       0
  7267 ;;      Temps:          0       1       0       0       0
  7268 ;;      Totals:         0       2       0       0       0
  7269 ;;Total ram usage:        2 bytes
  7270 ;; Hardware stack levels used: 1
  7271 ;; Hardware stack levels required when called: 4
  7272 ;; This function calls:
  7273 ;;		_LcdALL_Port
  7274 ;; This function is called by:
  7275 ;;		_LcdALL_Write_String
  7276 ;;		_LcdALL_set_value
  7277 ;;		_LcdALLb_set_value
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281     1501                     _LcdALL_Write_Char:	
  7282                           ;psect for function _LcdALL_Write_Char
  7283                           
  7284                           
  7285                           ;incstack = 0
  7286                           ; Regs used in _LcdALL_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7287                           ;LcdALL_Write_Char@a stored from wreg
  7288     1501  1283               	bcf	3,5	;RP0=0, select bank0
  7289     1502  1303               	bcf	3,6	;RP1=0, select bank0
  7290     1503  00B6               	movwf	LcdALL_Write_Char@a
  7291     1504                     l2630:
  7292                           
  7293                           ;LCD_ALL.c: 65:     PORTEbits.RE0 = 1;
  7294     1504  1409               	bsf	9,0	;volatile
  7295     1505                     l2632:
  7296                           
  7297                           ;LCD_ALL.c: 66:     LcdALL_Port(a);
  7298     1505  0836               	movf	LcdALL_Write_Char@a,w
  7299     1506  120A  158A  21C2  160A  118A  	fcall	_LcdALL_Port
  7300     150B                     l2634:
  7301                           
  7302                           ;LCD_ALL.c: 67:     PORTEbits.RE1 = 1;
  7303     150B  1283               	bcf	3,5	;RP0=0, select bank0
  7304     150C  1303               	bcf	3,6	;RP1=0, select bank0
  7305     150D  1489               	bsf	9,1	;volatile
  7306     150E                     l2636:
  7307                           
  7308                           ;LCD_ALL.c: 68:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7309     150E  3019               	movlw	25
  7310     150F  1283               	bcf	3,5	;RP0=0, select bank0
  7311     1510  1303               	bcf	3,6	;RP1=0, select bank0
  7312     1511  00B5               	movwf	??_LcdALL_Write_Char
  7313     1512                     u5837:
  7314     1512  0BB5               	decfsz	??_LcdALL_Write_Char,f
  7315     1513  2D12               	goto	u5837
  7316     1514  2D15               	nop2
  7317     1515                     l2638:
  7318                           
  7319                           ;LCD_ALL.c: 69:     PORTEbits.RE1 = 0;
  7320     1515  1283               	bcf	3,5	;RP0=0, select bank0
  7321     1516  1303               	bcf	3,6	;RP1=0, select bank0
  7322     1517  1089               	bcf	9,1	;volatile
  7323     1518                     l263:
  7324     1518  0008               	return
  7325     1519                     __end_of_LcdALL_Write_Char:
  7326                           
  7327                           	psect	text20
  7328     158B                     __ptext20:	
  7329 ;; *************** function _LcdALL_Set_Cursor *****************
  7330 ;; Defined at:
  7331 ;;		line 39 in file "LCD_ALL.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  a               1    wreg     unsigned char 
  7334 ;;  b               1   24[BANK0 ] unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  a               1   25[BANK0 ] unsigned char 
  7337 ;;  temp            1   26[BANK0 ] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7347 ;;      Params:         0       1       0       0       0
  7348 ;;      Locals:         0       2       0       0       0
  7349 ;;      Temps:          0       0       0       0       0
  7350 ;;      Totals:         0       3       0       0       0
  7351 ;;Total ram usage:        3 bytes
  7352 ;; Hardware stack levels used: 1
  7353 ;; Hardware stack levels required when called: 5
  7354 ;; This function calls:
  7355 ;;		_LcdALL_Cmd
  7356 ;; This function is called by:
  7357 ;;		_main
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361     158B                     _LcdALL_Set_Cursor:	
  7362                           ;psect for function _LcdALL_Set_Cursor
  7363                           
  7364                           
  7365                           ;incstack = 0
  7366                           ; Regs used in _LcdALL_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7367                           ;LcdALL_Set_Cursor@a stored from wreg
  7368     158B  1283               	bcf	3,5	;RP0=0, select bank0
  7369     158C  1303               	bcf	3,6	;RP1=0, select bank0
  7370     158D  00B9               	movwf	LcdALL_Set_Cursor@a
  7371     158E                     l3200:
  7372                           
  7373                           ;LCD_ALL.c: 40:     char temp;;LCD_ALL.c: 41:     if (a == 1) {
  7374     158E  0339               	decf	LcdALL_Set_Cursor@a,w
  7375     158F  1D03               	btfss	3,2
  7376     1590  2D92               	goto	u4231
  7377     1591  2D93               	goto	u4230
  7378     1592                     u4231:
  7379     1592  2D9D               	goto	l3206
  7380     1593                     u4230:
  7381     1593                     l3202:
  7382                           
  7383                           ;LCD_ALL.c: 42:         temp = 0x80 + b - 1;
  7384     1593  0838               	movf	LcdALL_Set_Cursor@b,w
  7385     1594  3E7F               	addlw	127
  7386     1595  00BA               	movwf	LcdALL_Set_Cursor@temp
  7387     1596                     l3204:
  7388                           
  7389                           ;LCD_ALL.c: 43:         LcdALL_Cmd(temp);
  7390     1596  083A               	movf	LcdALL_Set_Cursor@temp,w
  7391     1597  160A  118A  2533  160A  118A  	fcall	_LcdALL_Cmd
  7392                           
  7393                           ;LCD_ALL.c: 44:     } else if (a == 2) {
  7394     159C  2DAC               	goto	l257
  7395     159D                     l3206:
  7396     159D  3002               	movlw	2
  7397     159E  0639               	xorwf	LcdALL_Set_Cursor@a,w
  7398     159F  1D03               	btfss	3,2
  7399     15A0  2DA2               	goto	u4241
  7400     15A1  2DA3               	goto	u4240
  7401     15A2                     u4241:
  7402     15A2  2DAC               	goto	l257
  7403     15A3                     u4240:
  7404     15A3                     l3208:
  7405                           
  7406                           ;LCD_ALL.c: 45:         temp = 0xC0 + b - 1;
  7407     15A3  0838               	movf	LcdALL_Set_Cursor@b,w
  7408     15A4  3EBF               	addlw	191
  7409     15A5  00BA               	movwf	LcdALL_Set_Cursor@temp
  7410     15A6                     l3210:
  7411                           
  7412                           ;LCD_ALL.c: 46:         LcdALL_Cmd(temp);
  7413     15A6  083A               	movf	LcdALL_Set_Cursor@temp,w
  7414     15A7  160A  118A  2533  160A  118A  	fcall	_LcdALL_Cmd
  7415     15AC                     l257:
  7416     15AC  0008               	return
  7417     15AD                     __end_of_LcdALL_Set_Cursor:
  7418                           
  7419                           	psect	text21
  7420     07B7                     __ptext21:	
  7421 ;; *************** function _LcdALL_Init *****************
  7422 ;; Defined at:
  7423 ;;		line 50 in file "LCD_ALL.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, pclath, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7437 ;;      Params:         0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0
  7439 ;;      Temps:          0       2       0       0       0
  7440 ;;      Totals:         0       2       0       0       0
  7441 ;;Total ram usage:        2 bytes
  7442 ;; Hardware stack levels used: 1
  7443 ;; Hardware stack levels required when called: 5
  7444 ;; This function calls:
  7445 ;;		_LcdALL_Cmd
  7446 ;;		_LcdALL_Port
  7447 ;; This function is called by:
  7448 ;;		_main
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452     07B7                     _LcdALL_Init:	
  7453                           ;psect for function _LcdALL_Init
  7454                           
  7455     07B7                     l3212:	
  7456                           ;incstack = 0
  7457                           ; Regs used in _LcdALL_Init: [wreg+status,2+status,0+pclath+cstack]
  7458                           
  7459                           
  7460                           ;LCD_ALL.c: 51:     LcdALL_Port(0x00);
  7461     07B7  3000               	movlw	0
  7462     07B8  120A  158A  21C2  120A  118A  	fcall	_LcdALL_Port
  7463     07BD                     l3214:
  7464                           
  7465                           ;LCD_ALL.c: 52:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7466     07BD  3034               	movlw	52
  7467     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  7468     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  7469     07C0  00B9               	movwf	??_LcdALL_Init+1
  7470     07C1  30F1               	movlw	241
  7471     07C2  00B8               	movwf	??_LcdALL_Init
  7472     07C3                     u5847:
  7473     07C3  0BB8               	decfsz	??_LcdALL_Init,f
  7474     07C4  2FC3               	goto	u5847
  7475     07C5  0BB9               	decfsz	??_LcdALL_Init+1,f
  7476     07C6  2FC3               	goto	u5847
  7477     07C7                     l3216:
  7478                           
  7479                           ;LCD_ALL.c: 53:     LcdALL_Cmd(0x30);
  7480     07C7  3030               	movlw	48
  7481     07C8  160A  118A  2533  120A  118A  	fcall	_LcdALL_Cmd
  7482                           
  7483                           ;LCD_ALL.c: 54:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7484     07CD  300D               	movlw	13
  7485     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  7486     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  7487     07D0  00B9               	movwf	??_LcdALL_Init+1
  7488     07D1  30FB               	movlw	251
  7489     07D2  00B8               	movwf	??_LcdALL_Init
  7490     07D3                     u5857:
  7491     07D3  0BB8               	decfsz	??_LcdALL_Init,f
  7492     07D4  2FD3               	goto	u5857
  7493     07D5  0BB9               	decfsz	??_LcdALL_Init+1,f
  7494     07D6  2FD3               	goto	u5857
  7495     07D7                     l3218:
  7496                           
  7497                           ;LCD_ALL.c: 55:     LcdALL_Cmd(0x30);
  7498     07D7  3030               	movlw	48
  7499     07D8  160A  118A  2533  120A  118A  	fcall	_LcdALL_Cmd
  7500     07DD                     l3220:
  7501                           
  7502                           ;LCD_ALL.c: 56:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7503     07DD  3041               	movlw	65
  7504     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  7505     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  7506     07E0  00B8               	movwf	??_LcdALL_Init
  7507     07E1                     u5867:
  7508     07E1  0BB8               	decfsz	??_LcdALL_Init,f
  7509     07E2  2FE1               	goto	u5867
  7510     07E3  2FE4               	nop2
  7511                           
  7512                           ;LCD_ALL.c: 58:     LcdALL_Cmd(0x38);
  7513     07E4  3038               	movlw	56
  7514     07E5  160A  118A  2533  120A  118A  	fcall	_LcdALL_Cmd
  7515                           
  7516                           ;LCD_ALL.c: 59:     LcdALL_Cmd(0x0C);
  7517     07EA  300C               	movlw	12
  7518     07EB  160A  118A  2533  120A  118A  	fcall	_LcdALL_Cmd
  7519                           
  7520                           ;LCD_ALL.c: 60:     LcdALL_Cmd(0x01);
  7521     07F0  3001               	movlw	1
  7522     07F1  160A  118A  2533  120A  118A  	fcall	_LcdALL_Cmd
  7523                           
  7524                           ;LCD_ALL.c: 61:     LcdALL_Cmd(0x06);
  7525     07F6  3006               	movlw	6
  7526     07F7  160A  118A  2533  120A  118A  	fcall	_LcdALL_Cmd
  7527     07FC                     l260:
  7528     07FC  0008               	return
  7529     07FD                     __end_of_LcdALL_Init:
  7530                           
  7531                           	psect	text22
  7532     1533                     __ptext22:	
  7533 ;; *************** function _LcdALL_Cmd *****************
  7534 ;; Defined at:
  7535 ;;		line 26 in file "LCD_ALL.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  a               1    wreg     unsigned char 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  a               1   23[BANK0 ] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7549 ;;      Params:         0       0       0       0       0
  7550 ;;      Locals:         0       1       0       0       0
  7551 ;;      Temps:          0       2       0       0       0
  7552 ;;      Totals:         0       3       0       0       0
  7553 ;;Total ram usage:        3 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 4
  7556 ;; This function calls:
  7557 ;;		_LcdALL_Port
  7558 ;; This function is called by:
  7559 ;;		_LcdALL_Set_Cursor
  7560 ;;		_LcdALL_Init
  7561 ;;		_LcdALL_Clear
  7562 ;;		_LcdALL_Shift_Right
  7563 ;;		_LcdALL_Shift_Left
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567     1533                     _LcdALL_Cmd:	
  7568                           ;psect for function _LcdALL_Cmd
  7569                           
  7570                           
  7571                           ;incstack = 0
  7572                           ; Regs used in _LcdALL_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7573                           ;LcdALL_Cmd@a stored from wreg
  7574     1533  1283               	bcf	3,5	;RP0=0, select bank0
  7575     1534  1303               	bcf	3,6	;RP1=0, select bank0
  7576     1535  00B7               	movwf	LcdALL_Cmd@a
  7577     1536                     l2620:
  7578                           
  7579                           ;LCD_ALL.c: 27:     PORTEbits.RE0 = 0;
  7580     1536  1009               	bcf	9,0	;volatile
  7581     1537                     l2622:
  7582                           
  7583                           ;LCD_ALL.c: 28:     LcdALL_Port(a);
  7584     1537  0837               	movf	LcdALL_Cmd@a,w
  7585     1538  120A  158A  21C2  160A  118A  	fcall	_LcdALL_Port
  7586     153D                     l2624:
  7587                           
  7588                           ;LCD_ALL.c: 29:     PORTEbits.RE1 = 1;
  7589     153D  1283               	bcf	3,5	;RP0=0, select bank0
  7590     153E  1303               	bcf	3,6	;RP1=0, select bank0
  7591     153F  1489               	bsf	9,1	;volatile
  7592     1540                     l2626:
  7593                           
  7594                           ;LCD_ALL.c: 30:     _delay((unsigned long)((4)*(8000000/4000.0)));
  7595     1540  300B               	movlw	11
  7596     1541  1283               	bcf	3,5	;RP0=0, select bank0
  7597     1542  1303               	bcf	3,6	;RP1=0, select bank0
  7598     1543  00B6               	movwf	??_LcdALL_Cmd+1
  7599     1544  3061               	movlw	97
  7600     1545  00B5               	movwf	??_LcdALL_Cmd
  7601     1546                     u5877:
  7602     1546  0BB5               	decfsz	??_LcdALL_Cmd,f
  7603     1547  2D46               	goto	u5877
  7604     1548  0BB6               	decfsz	??_LcdALL_Cmd+1,f
  7605     1549  2D46               	goto	u5877
  7606     154A  2D4B               	nop2
  7607     154B                     l2628:
  7608                           
  7609                           ;LCD_ALL.c: 31:     PORTEbits.RE1 = 0;
  7610     154B  1283               	bcf	3,5	;RP0=0, select bank0
  7611     154C  1303               	bcf	3,6	;RP1=0, select bank0
  7612     154D  1089               	bcf	9,1	;volatile
  7613     154E                     l248:
  7614     154E  0008               	return
  7615     154F                     __end_of_LcdALL_Cmd:
  7616                           
  7617                           	psect	text23
  7618     09C2                     __ptext23:	
  7619 ;; *************** function _LcdALL_Port *****************
  7620 ;; Defined at:
  7621 ;;		line 10 in file "LCD_ALL.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  a               1    wreg     unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  a               1   20[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7635 ;;      Params:         0       0       0       0       0
  7636 ;;      Locals:         0       1       0       0       0
  7637 ;;      Temps:          0       2       0       0       0
  7638 ;;      Totals:         0       3       0       0       0
  7639 ;;Total ram usage:        3 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 3
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_LcdALL_Cmd
  7646 ;;		_LcdALL_Init
  7647 ;;		_LcdALL_Write_Char
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651     09C2                     _LcdALL_Port:	
  7652                           ;psect for function _LcdALL_Port
  7653                           
  7654                           
  7655                           ;incstack = 0
  7656                           ; Regs used in _LcdALL_Port: [wreg+status,2+status,0]
  7657                           ;LcdALL_Port@a stored from wreg
  7658     09C2  1283               	bcf	3,5	;RP0=0, select bank0
  7659     09C3  1303               	bcf	3,6	;RP1=0, select bank0
  7660     09C4  00B4               	movwf	LcdALL_Port@a
  7661     09C5                     l2394:
  7662                           
  7663                           ;LCD_ALL.c: 12:     TRISB &= 0x00;
  7664     09C5  1683               	bsf	3,5	;RP0=1, select bank1
  7665     09C6  1303               	bcf	3,6	;RP1=0, select bank1
  7666     09C7  0186               	clrf	6	;volatile
  7667     09C8                     l2396:
  7668                           
  7669                           ;LCD_ALL.c: 16:     PORTBbits.RB0 = (a & 1);
  7670     09C8  3001               	movlw	1
  7671     09C9  1283               	bcf	3,5	;RP0=0, select bank0
  7672     09CA  1303               	bcf	3,6	;RP1=0, select bank0
  7673     09CB  0534               	andwf	LcdALL_Port@a,w
  7674     09CC  00B2               	movwf	??_LcdALL_Port
  7675     09CD  0806               	movf	6,w	;volatile
  7676     09CE  0632               	xorwf	??_LcdALL_Port,w
  7677     09CF  39FE               	andlw	-2
  7678     09D0  0632               	xorwf	??_LcdALL_Port,w
  7679     09D1  0086               	movwf	6	;volatile
  7680     09D2                     l2398:
  7681                           
  7682                           ;LCD_ALL.c: 17:     PORTBbits.RB1 = (a & 2) >> 1;
  7683     09D2  0834               	movf	LcdALL_Port@a,w
  7684     09D3  00B2               	movwf	??_LcdALL_Port
  7685     09D4  1003               	clrc
  7686     09D5  0C32               	rrf	??_LcdALL_Port,w
  7687     09D6  3901               	andlw	1
  7688     09D7  00B3               	movwf	??_LcdALL_Port+1
  7689     09D8  0DB3               	rlf	??_LcdALL_Port+1,f
  7690     09D9  0806               	movf	6,w	;volatile
  7691     09DA  0633               	xorwf	??_LcdALL_Port+1,w
  7692     09DB  39FD               	andlw	-3
  7693     09DC  0633               	xorwf	??_LcdALL_Port+1,w
  7694     09DD  0086               	movwf	6	;volatile
  7695     09DE                     l2400:
  7696                           
  7697                           ;LCD_ALL.c: 18:     PORTBbits.RB2 = (a & 4) >> 2;
  7698     09DE  0834               	movf	LcdALL_Port@a,w
  7699     09DF  00B2               	movwf	??_LcdALL_Port
  7700     09E0  3002               	movlw	2
  7701     09E1                     u2525:
  7702     09E1  1003               	clrc
  7703     09E2  0CB2               	rrf	??_LcdALL_Port,f
  7704     09E3  3EFF               	addlw	-1
  7705     09E4  1D03               	skipz
  7706     09E5  29E1               	goto	u2525
  7707     09E6  0832               	movf	??_LcdALL_Port,w
  7708     09E7  3901               	andlw	1
  7709     09E8  00B3               	movwf	??_LcdALL_Port+1
  7710     09E9  0DB3               	rlf	??_LcdALL_Port+1,f
  7711     09EA  0DB3               	rlf	??_LcdALL_Port+1,f
  7712     09EB  0806               	movf	6,w	;volatile
  7713     09EC  0633               	xorwf	??_LcdALL_Port+1,w
  7714     09ED  39FB               	andlw	-5
  7715     09EE  0633               	xorwf	??_LcdALL_Port+1,w
  7716     09EF  0086               	movwf	6	;volatile
  7717     09F0                     l2402:
  7718                           
  7719                           ;LCD_ALL.c: 19:     PORTBbits.RB3 = (a & 8) >> 3;
  7720     09F0  0834               	movf	LcdALL_Port@a,w
  7721     09F1  00B2               	movwf	??_LcdALL_Port
  7722     09F2  3003               	movlw	3
  7723     09F3                     u2535:
  7724     09F3  1003               	clrc
  7725     09F4  0CB2               	rrf	??_LcdALL_Port,f
  7726     09F5  3EFF               	addlw	-1
  7727     09F6  1D03               	skipz
  7728     09F7  29F3               	goto	u2535
  7729     09F8  0832               	movf	??_LcdALL_Port,w
  7730     09F9  3901               	andlw	1
  7731     09FA  00B3               	movwf	??_LcdALL_Port+1
  7732     09FB  0DB3               	rlf	??_LcdALL_Port+1,f
  7733     09FC  0DB3               	rlf	??_LcdALL_Port+1,f
  7734     09FD  0DB3               	rlf	??_LcdALL_Port+1,f
  7735     09FE  0806               	movf	6,w	;volatile
  7736     09FF  0633               	xorwf	??_LcdALL_Port+1,w
  7737     0A00  39F7               	andlw	-9
  7738     0A01  0633               	xorwf	??_LcdALL_Port+1,w
  7739     0A02  0086               	movwf	6	;volatile
  7740     0A03                     l2404:
  7741                           
  7742                           ;LCD_ALL.c: 20:     PORTBbits.RB4 = (a & 16) >> 4;
  7743     0A03  0834               	movf	LcdALL_Port@a,w
  7744     0A04  00B2               	movwf	??_LcdALL_Port
  7745     0A05  3004               	movlw	4
  7746     0A06                     u2545:
  7747     0A06  1003               	clrc
  7748     0A07  0CB2               	rrf	??_LcdALL_Port,f
  7749     0A08  3EFF               	addlw	-1
  7750     0A09  1D03               	skipz
  7751     0A0A  2A06               	goto	u2545
  7752     0A0B  0832               	movf	??_LcdALL_Port,w
  7753     0A0C  3901               	andlw	1
  7754     0A0D  00B3               	movwf	??_LcdALL_Port+1
  7755     0A0E  0EB3               	swapf	??_LcdALL_Port+1,f
  7756     0A0F  0806               	movf	6,w	;volatile
  7757     0A10  0633               	xorwf	??_LcdALL_Port+1,w
  7758     0A11  39EF               	andlw	-17
  7759     0A12  0633               	xorwf	??_LcdALL_Port+1,w
  7760     0A13  0086               	movwf	6	;volatile
  7761     0A14                     l2406:
  7762                           
  7763                           ;LCD_ALL.c: 21:     PORTBbits.RB5 = (a & 32) >> 5;
  7764     0A14  0834               	movf	LcdALL_Port@a,w
  7765     0A15  00B2               	movwf	??_LcdALL_Port
  7766     0A16  3005               	movlw	5
  7767     0A17                     u2555:
  7768     0A17  1003               	clrc
  7769     0A18  0CB2               	rrf	??_LcdALL_Port,f
  7770     0A19  3EFF               	addlw	-1
  7771     0A1A  1D03               	skipz
  7772     0A1B  2A17               	goto	u2555
  7773     0A1C  0832               	movf	??_LcdALL_Port,w
  7774     0A1D  3901               	andlw	1
  7775     0A1E  00B3               	movwf	??_LcdALL_Port+1
  7776     0A1F  0EB3               	swapf	??_LcdALL_Port+1,f
  7777     0A20  0DB3               	rlf	??_LcdALL_Port+1,f
  7778     0A21  0806               	movf	6,w	;volatile
  7779     0A22  0633               	xorwf	??_LcdALL_Port+1,w
  7780     0A23  39DF               	andlw	-33
  7781     0A24  0633               	xorwf	??_LcdALL_Port+1,w
  7782     0A25  0086               	movwf	6	;volatile
  7783     0A26                     l2408:
  7784                           
  7785                           ;LCD_ALL.c: 22:     PORTBbits.RB6 = (a & 64) >> 6;
  7786     0A26  0834               	movf	LcdALL_Port@a,w
  7787     0A27  00B2               	movwf	??_LcdALL_Port
  7788     0A28  3006               	movlw	6
  7789     0A29                     u2565:
  7790     0A29  1003               	clrc
  7791     0A2A  0CB2               	rrf	??_LcdALL_Port,f
  7792     0A2B  3EFF               	addlw	-1
  7793     0A2C  1D03               	skipz
  7794     0A2D  2A29               	goto	u2565
  7795     0A2E  0832               	movf	??_LcdALL_Port,w
  7796     0A2F  3901               	andlw	1
  7797     0A30  00B3               	movwf	??_LcdALL_Port+1
  7798     0A31  0EB3               	swapf	??_LcdALL_Port+1,f
  7799     0A32  0DB3               	rlf	??_LcdALL_Port+1,f
  7800     0A33  0DB3               	rlf	??_LcdALL_Port+1,f
  7801     0A34  0806               	movf	6,w	;volatile
  7802     0A35  0633               	xorwf	??_LcdALL_Port+1,w
  7803     0A36  39BF               	andlw	-65
  7804     0A37  0633               	xorwf	??_LcdALL_Port+1,w
  7805     0A38  0086               	movwf	6	;volatile
  7806     0A39                     l2410:
  7807                           
  7808                           ;LCD_ALL.c: 23:     PORTBbits.RB7 = (a & 128) >> 7;
  7809     0A39  0834               	movf	LcdALL_Port@a,w
  7810     0A3A  00B2               	movwf	??_LcdALL_Port
  7811     0A3B  3007               	movlw	7
  7812     0A3C                     u2575:
  7813     0A3C  1003               	clrc
  7814     0A3D  0CB2               	rrf	??_LcdALL_Port,f
  7815     0A3E  3EFF               	addlw	-1
  7816     0A3F  1D03               	skipz
  7817     0A40  2A3C               	goto	u2575
  7818     0A41  0832               	movf	??_LcdALL_Port,w
  7819     0A42  3901               	andlw	1
  7820     0A43  00B3               	movwf	??_LcdALL_Port+1
  7821     0A44  0CB3               	rrf	??_LcdALL_Port+1,f
  7822     0A45  0CB3               	rrf	??_LcdALL_Port+1,f
  7823     0A46  0806               	movf	6,w	;volatile
  7824     0A47  0633               	xorwf	??_LcdALL_Port+1,w
  7825     0A48  397F               	andlw	-129
  7826     0A49  0633               	xorwf	??_LcdALL_Port+1,w
  7827     0A4A  0086               	movwf	6	;volatile
  7828     0A4B                     l245:
  7829     0A4B  0008               	return
  7830     0A4C                     __end_of_LcdALL_Port:
  7831                           
  7832                           	psect	text24
  7833     15FF                     __ptext24:	
  7834 ;; *************** function _isr *****************
  7835 ;; Defined at:
  7836 ;;		line 53 in file "POSTLAB_02.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7850 ;;      Params:         0       0       0       0       0
  7851 ;;      Locals:         0       0       0       0       0
  7852 ;;      Temps:          0       6       0       0       0
  7853 ;;      Totals:         0       6       0       0       0
  7854 ;;Total ram usage:        6 bytes
  7855 ;; Hardware stack levels used: 1
  7856 ;; Hardware stack levels required when called: 2
  7857 ;; This function calls:
  7858 ;;		_UART_read_char
  7859 ;;		_UART_set_value
  7860 ;;		_UART_write_string
  7861 ;; This function is called by:
  7862 ;;		Interrupt level 1
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866     15FF                     _isr:	
  7867                           ;psect for function _isr
  7868                           
  7869     15FF                     i1l3556:
  7870                           
  7871                           ;POSTLAB_02.c: 55:     if (PIR1bits.ADIF){
  7872     15FF  1F0C               	btfss	12,6	;volatile
  7873     1600  2E02               	goto	u480_21
  7874     1601  2E03               	goto	u480_20
  7875     1602                     u480_21:
  7876     1602  2E04               	goto	i1l398
  7877     1603                     u480_20:
  7878     1603                     i1l3558:
  7879                           
  7880                           ;POSTLAB_02.c: 57:         PIR1bits.ADIF = 0;
  7881     1603  130C               	bcf	12,6	;volatile
  7882     1604                     i1l398:	
  7883                           ;POSTLAB_02.c: 58:     }
  7884                           
  7885                           
  7886                           ;POSTLAB_02.c: 59:     if(RCIF == 1){
  7887     1604  1E8C               	btfss	12,5	;volatile
  7888     1605  2E07               	goto	u481_21
  7889     1606  2E08               	goto	u481_20
  7890     1607                     u481_21:
  7891     1607  2E2F               	goto	i1l401
  7892     1608                     u481_20:
  7893     1608                     i1l3560:
  7894                           
  7895                           ;POSTLAB_02.c: 60:         PORTD = RCREG;
  7896     1608  081A               	movf	26,w	;volatile
  7897     1609  0088               	movwf	8	;volatile
  7898     160A                     i1l3562:
  7899                           
  7900                           ;POSTLAB_02.c: 61:         if (RCREG == 48){
  7901     160A  3030               	movlw	48
  7902     160B  061A               	xorwf	26,w	;volatile
  7903     160C  1D03               	btfss	3,2
  7904     160D  2E0F               	goto	u482_21
  7905     160E  2E10               	goto	u482_20
  7906     160F                     u482_21:
  7907     160F  2E21               	goto	i1l3568
  7908     1610                     u482_20:
  7909     1610                     i1l3564:
  7910                           
  7911                           ;POSTLAB_02.c: 62:         UART_write_string("Voltaje Potenciometro:");
  7912     1610  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7913     1611  160A  118A  256C  160A  118A  	fcall	_UART_write_string
  7914     1616                     i1l3566:
  7915                           
  7916                           ;POSTLAB_02.c: 63:         UART_set_value(mapeado);
  7917     1616  1283               	bcf	3,5	;RP0=0, select bank0
  7918     1617  1303               	bcf	3,6	;RP1=0, select bank0
  7919     1618  0852               	movf	_mapeado+1,w
  7920     1619  00A5               	movwf	UART_set_value@byte_value+1
  7921     161A  0851               	movf	_mapeado,w
  7922     161B  00A4               	movwf	UART_set_value@byte_value
  7923     161C  120A  158A  20DE  160A  118A  	fcall	_UART_set_value
  7924     1621                     i1l3568:
  7925                           
  7926                           ;POSTLAB_02.c: 65:         cont = UART_read_char();
  7927     1621  160A  118A  2519  160A  118A  	fcall	_UART_read_char
  7928     1626  1283               	bcf	3,5	;RP0=0, select bank0
  7929     1627  1303               	bcf	3,6	;RP1=0, select bank0
  7930     1628  00AC               	movwf	??_isr
  7931     1629  01AD               	clrf	??_isr+1
  7932     162A  082C               	movf	??_isr,w
  7933     162B  00CD               	movwf	_cont
  7934     162C  082D               	movf	??_isr+1,w
  7935     162D  00CE               	movwf	_cont+1
  7936     162E                     i1l3570:
  7937                           
  7938                           ;POSTLAB_02.c: 66:         PIR1bits.RCIF = 0;
  7939     162E  128C               	bcf	12,5	;volatile
  7940     162F                     i1l401:
  7941     162F  0831               	movf	??_isr+5,w
  7942     1630  00FF               	movwf	btemp+1
  7943     1631  0830               	movf	??_isr+4,w
  7944     1632  008A               	movwf	10
  7945     1633  082F               	movf	??_isr+3,w
  7946     1634  0084               	movwf	4
  7947     1635  0E2E               	swapf	??_isr+2,w
  7948     1636  0083               	movwf	3
  7949     1637  0EFE               	swapf	btemp,f
  7950     1638  0E7E               	swapf	btemp,w
  7951     1639  0009               	retfie
  7952     163A                     __end_of_isr:
  7953                           
  7954                           	psect	intentry
  7955     0004                     __pintentry:	
  7956                           ;incstack = 0
  7957                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7958                           
  7959     0004                     interrupt_function:
  7960     007E                     saved_w	set	btemp
  7961     0004  00FE               	movwf	btemp
  7962     0005  0E03               	swapf	3,w
  7963     0006  1283               	bcf	3,5	;RP0=0, select bank0
  7964     0007  1303               	bcf	3,6	;RP1=0, select bank0
  7965     0008  00AE               	movwf	??_isr+2
  7966     0009  0804               	movf	4,w
  7967     000A  00AF               	movwf	??_isr+3
  7968     000B  080A               	movf	10,w
  7969     000C  00B0               	movwf	??_isr+4
  7970     000D  087F               	movf	btemp+1,w
  7971     000E  00B1               	movwf	??_isr+5
  7972     000F  160A  118A  2DFF   	ljmp	_isr
  7973                           
  7974                           	psect	text25
  7975     156C                     __ptext25:	
  7976 ;; *************** function _UART_write_string *****************
  7977 ;; Defined at:
  7978 ;;		line 72 in file "USART_Library.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  str             1    wreg     PTR const unsigned char 
  7981 ;;		 -> STR_1(23), 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  str             1    2[COMMON] PTR const unsigned char 
  7984 ;;		 -> STR_1(23), 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7994 ;;      Params:         0       0       0       0       0
  7995 ;;      Locals:         1       0       0       0       0
  7996 ;;      Temps:          1       0       0       0       0
  7997 ;;      Totals:         2       0       0       0       0
  7998 ;;Total ram usage:        2 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; Hardware stack levels required when called: 1
  8001 ;; This function calls:
  8002 ;;		_UART_write_char
  8003 ;; This function is called by:
  8004 ;;		_isr
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008     156C                     _UART_write_string:	
  8009                           ;psect for function _UART_write_string
  8010                           
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in _UART_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8014                           ;UART_write_string@str stored from wreg
  8015     156C  00F2               	movwf	UART_write_string@str
  8016     156D                     i1l3276:
  8017                           
  8018                           ;USART_Library.c: 73:     while (*str != '\0') {
  8019     156D  2D7E               	goto	i1l3282
  8020     156E                     i1l3278:
  8021                           
  8022                           ;USART_Library.c: 74:         UART_write_char(*str);
  8023     156E  0872               	movf	UART_write_string@str,w
  8024     156F  0084               	movwf	4
  8025     1570  160A  118A  2000  160A  118A  	fcall	stringdir
  8026     1575  160A  118A  24E4  160A  118A  	fcall	_UART_write_char
  8027     157A                     i1l3280:
  8028                           
  8029                           ;USART_Library.c: 75:         str++;
  8030     157A  3001               	movlw	1
  8031     157B  00F1               	movwf	??_UART_write_string
  8032     157C  0871               	movf	??_UART_write_string,w
  8033     157D  07F2               	addwf	UART_write_string@str,f
  8034     157E                     i1l3282:
  8035                           
  8036                           ;USART_Library.c: 73:     while (*str != '\0') {
  8037     157E  0872               	movf	UART_write_string@str,w
  8038     157F  0084               	movwf	4
  8039     1580  160A  118A  2000  160A  118A  	fcall	stringdir
  8040     1585  3A00               	xorlw	0
  8041     1586  1D03               	skipz
  8042     1587  2D89               	goto	u428_21
  8043     1588  2D8A               	goto	u428_20
  8044     1589                     u428_21:
  8045     1589  2D6E               	goto	i1l3278
  8046     158A                     u428_20:
  8047     158A                     i1l328:
  8048     158A  0008               	return
  8049     158B                     __end_of_UART_write_string:
  8050                           
  8051                           	psect	text26
  8052     08DE                     __ptext26:	
  8053 ;; *************** function _UART_set_value *****************
  8054 ;; Defined at:
  8055 ;;		line 79 in file "USART_Library.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  byte_value      2    4[BANK0 ] int 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  unidades        2   10[BANK0 ] int 
  8060 ;;  decenas         2    8[BANK0 ] int 
  8061 ;;  centenas        2    6[BANK0 ] int 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      unsigned char 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2, status,0, pclath, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8071 ;;      Params:         0       2       0       0       0
  8072 ;;      Locals:         0       6       0       0       0
  8073 ;;      Temps:          0       0       0       0       0
  8074 ;;      Totals:         0       8       0       0       0
  8075 ;;Total ram usage:        8 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; Hardware stack levels required when called: 1
  8078 ;; This function calls:
  8079 ;;		_UART_write_char
  8080 ;;		i1___awdiv
  8081 ;;		i1___awmod
  8082 ;; This function is called by:
  8083 ;;		_isr
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087     08DE                     _UART_set_value:	
  8088                           ;psect for function _UART_set_value
  8089                           
  8090     08DE                     i1l3284:	
  8091                           ;incstack = 0
  8092                           ; Regs used in _UART_set_value: [wreg+status,2+status,0+pclath+cstack]
  8093                           
  8094                           
  8095                           ;USART_Library.c: 80:     int centenas = (byte_value / 100 + 48);
  8096     08DE  3064               	movlw	100
  8097     08DF  00F7               	movwf	i1___awdiv@divisor
  8098     08E0  3000               	movlw	0
  8099     08E1  00F8               	movwf	i1___awdiv@divisor+1
  8100     08E2  1283               	bcf	3,5	;RP0=0, select bank0
  8101     08E3  1303               	bcf	3,6	;RP1=0, select bank0
  8102     08E4  0825               	movf	UART_set_value@byte_value+1,w
  8103     08E5  00FA               	movwf	i1___awdiv@dividend+1
  8104     08E6  0824               	movf	UART_set_value@byte_value,w
  8105     08E7  00F9               	movwf	i1___awdiv@dividend
  8106     08E8  160A  118A  2797  120A  158A  	fcall	i1___awdiv
  8107     08ED  0877               	movf	?i1___awdiv,w
  8108     08EE  3E30               	addlw	48
  8109     08EF  1283               	bcf	3,5	;RP0=0, select bank0
  8110     08F0  1303               	bcf	3,6	;RP1=0, select bank0
  8111     08F1  00A6               	movwf	UART_set_value@centenas
  8112     08F2  0878               	movf	?i1___awdiv+1,w
  8113     08F3  1803               	skipnc
  8114     08F4  3E01               	addlw	1
  8115     08F5  3E00               	addlw	0
  8116     08F6  00A7               	movwf	UART_set_value@centenas+1
  8117                           
  8118                           ;USART_Library.c: 81:     int decenas = ((byte_value%100)/10)+48;
  8119     08F7  300A               	movlw	10
  8120     08F8  00F7               	movwf	i1___awdiv@divisor
  8121     08F9  3000               	movlw	0
  8122     08FA  00F8               	movwf	i1___awdiv@divisor+1
  8123     08FB  0825               	movf	UART_set_value@byte_value+1,w
  8124     08FC  00F3               	movwf	i1___awmod@dividend+1
  8125     08FD  0824               	movf	UART_set_value@byte_value,w
  8126     08FE  00F2               	movwf	i1___awmod@dividend
  8127     08FF  3064               	movlw	100
  8128     0900  00F0               	movwf	i1___awmod@divisor
  8129     0901  3000               	movlw	0
  8130     0902  00F1               	movwf	i1___awmod@divisor+1
  8131     0903  160A  118A  268A  120A  158A  	fcall	i1___awmod
  8132     0908  0871               	movf	?i1___awmod+1,w
  8133     0909  00FA               	movwf	i1___awdiv@dividend+1
  8134     090A  0870               	movf	?i1___awmod,w
  8135     090B  00F9               	movwf	i1___awdiv@dividend
  8136     090C  160A  118A  2797  120A  158A  	fcall	i1___awdiv
  8137     0911  0877               	movf	?i1___awdiv,w
  8138     0912  3E30               	addlw	48
  8139     0913  1283               	bcf	3,5	;RP0=0, select bank0
  8140     0914  1303               	bcf	3,6	;RP1=0, select bank0
  8141     0915  00A8               	movwf	UART_set_value@decenas
  8142     0916  0878               	movf	?i1___awdiv+1,w
  8143     0917  1803               	skipnc
  8144     0918  3E01               	addlw	1
  8145     0919  3E00               	addlw	0
  8146     091A  00A9               	movwf	UART_set_value@decenas+1
  8147                           
  8148                           ;USART_Library.c: 82:     int unidades = (byte_value%10)+48;
  8149     091B  300A               	movlw	10
  8150     091C  00F0               	movwf	i1___awmod@divisor
  8151     091D  3000               	movlw	0
  8152     091E  00F1               	movwf	i1___awmod@divisor+1
  8153     091F  0825               	movf	UART_set_value@byte_value+1,w
  8154     0920  00F3               	movwf	i1___awmod@dividend+1
  8155     0921  0824               	movf	UART_set_value@byte_value,w
  8156     0922  00F2               	movwf	i1___awmod@dividend
  8157     0923  160A  118A  268A  120A  158A  	fcall	i1___awmod
  8158     0928  0870               	movf	?i1___awmod,w
  8159     0929  3E30               	addlw	48
  8160     092A  1283               	bcf	3,5	;RP0=0, select bank0
  8161     092B  1303               	bcf	3,6	;RP1=0, select bank0
  8162     092C  00AA               	movwf	UART_set_value@unidades
  8163     092D  0871               	movf	?i1___awmod+1,w
  8164     092E  1803               	skipnc
  8165     092F  3E01               	addlw	1
  8166     0930  3E00               	addlw	0
  8167     0931  00AB               	movwf	UART_set_value@unidades+1
  8168                           
  8169                           ;USART_Library.c: 83:     UART_write_char(centenas);
  8170     0932  0826               	movf	UART_set_value@centenas,w
  8171     0933  160A  118A  24E4  120A  158A  	fcall	_UART_write_char
  8172                           
  8173                           ;USART_Library.c: 84:     UART_write_char('.');
  8174     0938  302E               	movlw	46
  8175     0939  160A  118A  24E4  120A  158A  	fcall	_UART_write_char
  8176                           
  8177                           ;USART_Library.c: 85:     UART_write_char(decenas);
  8178     093E  1283               	bcf	3,5	;RP0=0, select bank0
  8179     093F  1303               	bcf	3,6	;RP1=0, select bank0
  8180     0940  0828               	movf	UART_set_value@decenas,w
  8181     0941  160A  118A  24E4  120A  158A  	fcall	_UART_write_char
  8182                           
  8183                           ;USART_Library.c: 86:     UART_write_char(unidades);
  8184     0946  1283               	bcf	3,5	;RP0=0, select bank0
  8185     0947  1303               	bcf	3,6	;RP1=0, select bank0
  8186     0948  082A               	movf	UART_set_value@unidades,w
  8187     0949  160A  118A  24E4  120A  158A  	fcall	_UART_write_char
  8188     094E                     i1l331:
  8189     094E  0008               	return
  8190     094F                     __end_of_UART_set_value:
  8191                           
  8192                           	psect	text27
  8193     168A                     __ptext27:	
  8194 ;; *************** function i1___awmod *****************
  8195 ;; Defined at:
  8196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  divisor         2    0[COMMON] int 
  8199 ;;  dividend        2    2[COMMON] int 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  sign            1    6[COMMON] unsigned char 
  8202 ;;  counter         1    5[COMMON] unsigned char 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  2    0[COMMON] int 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8212 ;;      Params:         4       0       0       0       0
  8213 ;;      Locals:         2       0       0       0       0
  8214 ;;      Temps:          1       0       0       0       0
  8215 ;;      Totals:         7       0       0       0       0
  8216 ;;Total ram usage:        7 bytes
  8217 ;; Hardware stack levels used: 1
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		_UART_set_value
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225     168A                     i1___awmod:	
  8226                           ;psect for function i1___awmod
  8227                           
  8228     168A                     i1l3098:	
  8229                           ;incstack = 0
  8230                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  8231                           
  8232     168A  01F6               	clrf	i1___awmod@sign
  8233     168B                     i1l3100:
  8234     168B  1FF3               	btfss	i1___awmod@dividend+1,7
  8235     168C  2E8E               	goto	u413_21
  8236     168D  2E8F               	goto	u413_20
  8237     168E                     u413_21:
  8238     168E  2E96               	goto	i1l3106
  8239     168F                     u413_20:
  8240     168F                     i1l3102:
  8241     168F  09F2               	comf	i1___awmod@dividend,f
  8242     1690  09F3               	comf	i1___awmod@dividend+1,f
  8243     1691  0AF2               	incf	i1___awmod@dividend,f
  8244     1692  1903               	skipnz
  8245     1693  0AF3               	incf	i1___awmod@dividend+1,f
  8246     1694                     i1l3104:
  8247     1694  01F6               	clrf	i1___awmod@sign
  8248     1695  0AF6               	incf	i1___awmod@sign,f
  8249     1696                     i1l3106:
  8250     1696  1FF1               	btfss	i1___awmod@divisor+1,7
  8251     1697  2E99               	goto	u414_21
  8252     1698  2E9A               	goto	u414_20
  8253     1699                     u414_21:
  8254     1699  2E9F               	goto	i1l3110
  8255     169A                     u414_20:
  8256     169A                     i1l3108:
  8257     169A  09F0               	comf	i1___awmod@divisor,f
  8258     169B  09F1               	comf	i1___awmod@divisor+1,f
  8259     169C  0AF0               	incf	i1___awmod@divisor,f
  8260     169D  1903               	skipnz
  8261     169E  0AF1               	incf	i1___awmod@divisor+1,f
  8262     169F                     i1l3110:
  8263     169F  0870               	movf	i1___awmod@divisor,w
  8264     16A0  0471               	iorwf	i1___awmod@divisor+1,w
  8265     16A1  1903               	btfsc	3,2
  8266     16A2  2EA4               	goto	u415_21
  8267     16A3  2EA5               	goto	u415_20
  8268     16A4                     u415_21:
  8269     16A4  2ED4               	goto	i1l3128
  8270     16A5                     u415_20:
  8271     16A5                     i1l3112:
  8272     16A5  01F5               	clrf	i1___awmod@counter
  8273     16A6  0AF5               	incf	i1___awmod@counter,f
  8274     16A7  2EB3               	goto	i1l3118
  8275     16A8                     i1l3114:
  8276     16A8  3001               	movlw	1
  8277     16A9                     u416_25:
  8278     16A9  1003               	clrc
  8279     16AA  0DF0               	rlf	i1___awmod@divisor,f
  8280     16AB  0DF1               	rlf	i1___awmod@divisor+1,f
  8281     16AC  3EFF               	addlw	-1
  8282     16AD  1D03               	skipz
  8283     16AE  2EA9               	goto	u416_25
  8284     16AF                     i1l3116:
  8285     16AF  3001               	movlw	1
  8286     16B0  00F4               	movwf	??i1___awmod
  8287     16B1  0874               	movf	??i1___awmod,w
  8288     16B2  07F5               	addwf	i1___awmod@counter,f
  8289     16B3                     i1l3118:
  8290     16B3  1FF1               	btfss	i1___awmod@divisor+1,7
  8291     16B4  2EB6               	goto	u417_21
  8292     16B5  2EB7               	goto	u417_20
  8293     16B6                     u417_21:
  8294     16B6  2EA8               	goto	i1l3114
  8295     16B7                     u417_20:
  8296     16B7                     i1l3120:
  8297     16B7  0871               	movf	i1___awmod@divisor+1,w
  8298     16B8  0273               	subwf	i1___awmod@dividend+1,w
  8299     16B9  1D03               	skipz
  8300     16BA  2EBD               	goto	u418_25
  8301     16BB  0870               	movf	i1___awmod@divisor,w
  8302     16BC  0272               	subwf	i1___awmod@dividend,w
  8303     16BD                     u418_25:
  8304     16BD  1C03               	skipc
  8305     16BE  2EC0               	goto	u418_21
  8306     16BF  2EC1               	goto	u418_20
  8307     16C0                     u418_21:
  8308     16C0  2EC7               	goto	i1l3124
  8309     16C1                     u418_20:
  8310     16C1                     i1l3122:
  8311     16C1  0870               	movf	i1___awmod@divisor,w
  8312     16C2  02F2               	subwf	i1___awmod@dividend,f
  8313     16C3  0871               	movf	i1___awmod@divisor+1,w
  8314     16C4  1C03               	skipc
  8315     16C5  03F3               	decf	i1___awmod@dividend+1,f
  8316     16C6  02F3               	subwf	i1___awmod@dividend+1,f
  8317     16C7                     i1l3124:
  8318     16C7  3001               	movlw	1
  8319     16C8                     u419_25:
  8320     16C8  1003               	clrc
  8321     16C9  0CF1               	rrf	i1___awmod@divisor+1,f
  8322     16CA  0CF0               	rrf	i1___awmod@divisor,f
  8323     16CB  3EFF               	addlw	-1
  8324     16CC  1D03               	skipz
  8325     16CD  2EC8               	goto	u419_25
  8326     16CE                     i1l3126:
  8327     16CE  3001               	movlw	1
  8328     16CF  02F5               	subwf	i1___awmod@counter,f
  8329     16D0  1D03               	btfss	3,2
  8330     16D1  2ED3               	goto	u420_21
  8331     16D2  2ED4               	goto	u420_20
  8332     16D3                     u420_21:
  8333     16D3  2EB7               	goto	i1l3120
  8334     16D4                     u420_20:
  8335     16D4                     i1l3128:
  8336     16D4  0876               	movf	i1___awmod@sign,w
  8337     16D5  1903               	btfsc	3,2
  8338     16D6  2ED8               	goto	u421_21
  8339     16D7  2ED9               	goto	u421_20
  8340     16D8                     u421_21:
  8341     16D8  2EDE               	goto	i1l3132
  8342     16D9                     u421_20:
  8343     16D9                     i1l3130:
  8344     16D9  09F2               	comf	i1___awmod@dividend,f
  8345     16DA  09F3               	comf	i1___awmod@dividend+1,f
  8346     16DB  0AF2               	incf	i1___awmod@dividend,f
  8347     16DC  1903               	skipnz
  8348     16DD  0AF3               	incf	i1___awmod@dividend+1,f
  8349     16DE                     i1l3132:
  8350     16DE  0873               	movf	i1___awmod@dividend+1,w
  8351     16DF  00F1               	movwf	?i1___awmod+1
  8352     16E0  0872               	movf	i1___awmod@dividend,w
  8353     16E1  00F0               	movwf	?i1___awmod
  8354     16E2                     i1l664:
  8355     16E2  0008               	return
  8356     16E3                     __end_ofi1___awmod:
  8357                           
  8358                           	psect	text28
  8359     1797                     __ptext28:	
  8360 ;; *************** function i1___awdiv *****************
  8361 ;; Defined at:
  8362 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  divisor         2    7[COMMON] int 
  8365 ;;  dividend        2    9[COMMON] int 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  quotient        2    2[BANK0 ] int 
  8368 ;;  sign            1    1[BANK0 ] unsigned char 
  8369 ;;  counter         1    0[BANK0 ] unsigned char 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  2    7[COMMON] int 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8379 ;;      Params:         4       0       0       0       0
  8380 ;;      Locals:         0       4       0       0       0
  8381 ;;      Temps:          1       0       0       0       0
  8382 ;;      Totals:         5       4       0       0       0
  8383 ;;Total ram usage:        9 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_UART_set_value
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392     1797                     i1___awdiv:	
  8393                           ;psect for function i1___awdiv
  8394                           
  8395     1797                     i1l3054:	
  8396                           ;incstack = 0
  8397                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  8398                           
  8399     1797  1283               	bcf	3,5	;RP0=0, select bank0
  8400     1798  1303               	bcf	3,6	;RP1=0, select bank0
  8401     1799  01A1               	clrf	i1___awdiv@sign
  8402     179A                     i1l3056:
  8403     179A  1FF8               	btfss	i1___awdiv@divisor+1,7
  8404     179B  2F9D               	goto	u403_21
  8405     179C  2F9E               	goto	u403_20
  8406     179D                     u403_21:
  8407     179D  2FA5               	goto	i1l3062
  8408     179E                     u403_20:
  8409     179E                     i1l3058:
  8410     179E  09F7               	comf	i1___awdiv@divisor,f
  8411     179F  09F8               	comf	i1___awdiv@divisor+1,f
  8412     17A0  0AF7               	incf	i1___awdiv@divisor,f
  8413     17A1  1903               	skipnz
  8414     17A2  0AF8               	incf	i1___awdiv@divisor+1,f
  8415     17A3                     i1l3060:
  8416     17A3  01A1               	clrf	i1___awdiv@sign
  8417     17A4  0AA1               	incf	i1___awdiv@sign,f
  8418     17A5                     i1l3062:
  8419     17A5  1FFA               	btfss	i1___awdiv@dividend+1,7
  8420     17A6  2FA8               	goto	u404_21
  8421     17A7  2FA9               	goto	u404_20
  8422     17A8                     u404_21:
  8423     17A8  2FB2               	goto	i1l3068
  8424     17A9                     u404_20:
  8425     17A9                     i1l3064:
  8426     17A9  09F9               	comf	i1___awdiv@dividend,f
  8427     17AA  09FA               	comf	i1___awdiv@dividend+1,f
  8428     17AB  0AF9               	incf	i1___awdiv@dividend,f
  8429     17AC  1903               	skipnz
  8430     17AD  0AFA               	incf	i1___awdiv@dividend+1,f
  8431     17AE                     i1l3066:
  8432     17AE  3001               	movlw	1
  8433     17AF  00FB               	movwf	??i1___awdiv
  8434     17B0  087B               	movf	??i1___awdiv,w
  8435     17B1  06A1               	xorwf	i1___awdiv@sign,f
  8436     17B2                     i1l3068:
  8437     17B2  01A2               	clrf	i1___awdiv@quotient
  8438     17B3  01A3               	clrf	i1___awdiv@quotient+1
  8439     17B4                     i1l3070:
  8440     17B4  0877               	movf	i1___awdiv@divisor,w
  8441     17B5  0478               	iorwf	i1___awdiv@divisor+1,w
  8442     17B6  1903               	btfsc	3,2
  8443     17B7  2FB9               	goto	u405_21
  8444     17B8  2FBA               	goto	u405_20
  8445     17B9                     u405_21:
  8446     17B9  2FF1               	goto	i1l3090
  8447     17BA                     u405_20:
  8448     17BA                     i1l3072:
  8449     17BA  01A0               	clrf	i1___awdiv@counter
  8450     17BB  0AA0               	incf	i1___awdiv@counter,f
  8451     17BC  2FC8               	goto	i1l3078
  8452     17BD                     i1l3074:
  8453     17BD  3001               	movlw	1
  8454     17BE                     u406_25:
  8455     17BE  1003               	clrc
  8456     17BF  0DF7               	rlf	i1___awdiv@divisor,f
  8457     17C0  0DF8               	rlf	i1___awdiv@divisor+1,f
  8458     17C1  3EFF               	addlw	-1
  8459     17C2  1D03               	skipz
  8460     17C3  2FBE               	goto	u406_25
  8461     17C4                     i1l3076:
  8462     17C4  3001               	movlw	1
  8463     17C5  00FB               	movwf	??i1___awdiv
  8464     17C6  087B               	movf	??i1___awdiv,w
  8465     17C7  07A0               	addwf	i1___awdiv@counter,f
  8466     17C8                     i1l3078:
  8467     17C8  1FF8               	btfss	i1___awdiv@divisor+1,7
  8468     17C9  2FCB               	goto	u407_21
  8469     17CA  2FCC               	goto	u407_20
  8470     17CB                     u407_21:
  8471     17CB  2FBD               	goto	i1l3074
  8472     17CC                     u407_20:
  8473     17CC                     i1l3080:
  8474     17CC  3001               	movlw	1
  8475     17CD                     u408_25:
  8476     17CD  1003               	clrc
  8477     17CE  0DA2               	rlf	i1___awdiv@quotient,f
  8478     17CF  0DA3               	rlf	i1___awdiv@quotient+1,f
  8479     17D0  3EFF               	addlw	-1
  8480     17D1  1D03               	skipz
  8481     17D2  2FCD               	goto	u408_25
  8482     17D3  0878               	movf	i1___awdiv@divisor+1,w
  8483     17D4  027A               	subwf	i1___awdiv@dividend+1,w
  8484     17D5  1D03               	skipz
  8485     17D6  2FD9               	goto	u409_25
  8486     17D7  0877               	movf	i1___awdiv@divisor,w
  8487     17D8  0279               	subwf	i1___awdiv@dividend,w
  8488     17D9                     u409_25:
  8489     17D9  1C03               	skipc
  8490     17DA  2FDC               	goto	u409_21
  8491     17DB  2FDD               	goto	u409_20
  8492     17DC                     u409_21:
  8493     17DC  2FE4               	goto	i1l3086
  8494     17DD                     u409_20:
  8495     17DD                     i1l3082:
  8496     17DD  0877               	movf	i1___awdiv@divisor,w
  8497     17DE  02F9               	subwf	i1___awdiv@dividend,f
  8498     17DF  0878               	movf	i1___awdiv@divisor+1,w
  8499     17E0  1C03               	skipc
  8500     17E1  03FA               	decf	i1___awdiv@dividend+1,f
  8501     17E2  02FA               	subwf	i1___awdiv@dividend+1,f
  8502     17E3                     i1l3084:
  8503     17E3  1422               	bsf	i1___awdiv@quotient,0
  8504     17E4                     i1l3086:
  8505     17E4  3001               	movlw	1
  8506     17E5                     u410_25:
  8507     17E5  1003               	clrc
  8508     17E6  0CF8               	rrf	i1___awdiv@divisor+1,f
  8509     17E7  0CF7               	rrf	i1___awdiv@divisor,f
  8510     17E8  3EFF               	addlw	-1
  8511     17E9  1D03               	skipz
  8512     17EA  2FE5               	goto	u410_25
  8513     17EB                     i1l3088:
  8514     17EB  3001               	movlw	1
  8515     17EC  02A0               	subwf	i1___awdiv@counter,f
  8516     17ED  1D03               	btfss	3,2
  8517     17EE  2FF0               	goto	u411_21
  8518     17EF  2FF1               	goto	u411_20
  8519     17F0                     u411_21:
  8520     17F0  2FCC               	goto	i1l3080
  8521     17F1                     u411_20:
  8522     17F1                     i1l3090:
  8523     17F1  0821               	movf	i1___awdiv@sign,w
  8524     17F2  1903               	btfsc	3,2
  8525     17F3  2FF5               	goto	u412_21
  8526     17F4  2FF6               	goto	u412_20
  8527     17F5                     u412_21:
  8528     17F5  2FFB               	goto	i1l3094
  8529     17F6                     u412_20:
  8530     17F6                     i1l3092:
  8531     17F6  09A2               	comf	i1___awdiv@quotient,f
  8532     17F7  09A3               	comf	i1___awdiv@quotient+1,f
  8533     17F8  0AA2               	incf	i1___awdiv@quotient,f
  8534     17F9  1903               	skipnz
  8535     17FA  0AA3               	incf	i1___awdiv@quotient+1,f
  8536     17FB                     i1l3094:
  8537     17FB  0823               	movf	i1___awdiv@quotient+1,w
  8538     17FC  00F8               	movwf	?i1___awdiv+1
  8539     17FD  0822               	movf	i1___awdiv@quotient,w
  8540     17FE  00F7               	movwf	?i1___awdiv
  8541     17FF                     i1l651:
  8542     17FF  0008               	return
  8543     1800                     __end_ofi1___awdiv:
  8544                           
  8545                           	psect	text29
  8546     14E4                     __ptext29:	
  8547 ;; *************** function _UART_write_char *****************
  8548 ;; Defined at:
  8549 ;;		line 53 in file "USART_Library.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  c               1    wreg     unsigned char 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  c               1    0[COMMON] unsigned char 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8563 ;;      Params:         0       0       0       0       0
  8564 ;;      Locals:         1       0       0       0       0
  8565 ;;      Temps:          0       0       0       0       0
  8566 ;;      Totals:         1       0       0       0       0
  8567 ;;Total ram usage:        1 bytes
  8568 ;; Hardware stack levels used: 1
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_UART_write_string
  8573 ;;		_UART_set_value
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577     14E4                     _UART_write_char:	
  8578                           ;psect for function _UART_write_char
  8579                           
  8580                           
  8581                           ;incstack = 0
  8582                           ; Regs used in _UART_write_char: [wreg]
  8583                           ;UART_write_char@c stored from wreg
  8584     14E4  00F0               	movwf	UART_write_char@c
  8585     14E5                     i1l2640:
  8586     14E5                     i1l313:	
  8587                           ;USART_Library.c: 54:     while (!TXIF);
  8588                           
  8589     14E5  1283               	bcf	3,5	;RP0=0, select bank0
  8590     14E6  1303               	bcf	3,6	;RP1=0, select bank0
  8591     14E7  1E0C               	btfss	12,4	;volatile
  8592     14E8  2CEA               	goto	u307_21
  8593     14E9  2CEB               	goto	u307_20
  8594     14EA                     u307_21:
  8595     14EA  2CE5               	goto	i1l313
  8596     14EB                     u307_20:
  8597     14EB                     i1l2642:
  8598                           
  8599                           ;USART_Library.c: 55:     TXREG = c;
  8600     14EB  0870               	movf	UART_write_char@c,w
  8601     14EC  0099               	movwf	25	;volatile
  8602     14ED                     i1l316:
  8603     14ED  0008               	return
  8604     14EE                     __end_of_UART_write_char:
  8605                           
  8606                           	psect	text30
  8607     1519                     __ptext30:	
  8608 ;; *************** function _UART_read_char *****************
  8609 ;; Defined at:
  8610 ;;		line 59 in file "USART_Library.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;		None
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      unsigned char 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8624 ;;      Params:         0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0
  8627 ;;      Totals:         0       0       0       0       0
  8628 ;;Total ram usage:        0 bytes
  8629 ;; Hardware stack levels used: 1
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_isr
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637     1519                     _UART_read_char:	
  8638                           ;psect for function _UART_read_char
  8639                           
  8640     1519                     i1l3258:	
  8641                           ;incstack = 0
  8642                           ; Regs used in _UART_read_char: [wreg+status,2+status,0]
  8643                           
  8644                           
  8645                           ;USART_Library.c: 60:     PORTAbits.RA7 = 1;
  8646     1519  1283               	bcf	3,5	;RP0=0, select bank0
  8647     151A  1303               	bcf	3,6	;RP1=0, select bank0
  8648     151B  1785               	bsf	5,7	;volatile
  8649     151C                     i1l3260:
  8650                           
  8651                           ;USART_Library.c: 61:     if (RCREG == '+'){
  8652     151C  302B               	movlw	43
  8653     151D  061A               	xorwf	26,w	;volatile
  8654     151E  1D03               	btfss	3,2
  8655     151F  2D21               	goto	u426_21
  8656     1520  2D22               	goto	u426_20
  8657     1521                     u426_21:
  8658     1521  2D27               	goto	i1l3266
  8659     1522                     u426_20:
  8660     1522                     i1l3262:
  8661                           
  8662                           ;USART_Library.c: 62:         PORTAbits.RA6 = 1;
  8663     1522  1705               	bsf	5,6	;volatile
  8664     1523                     i1l3264:
  8665                           
  8666                           ;USART_Library.c: 63:         contador = contador+1;
  8667     1523  085D               	movf	_contador,w
  8668     1524  3E01               	addlw	1
  8669     1525  00DD               	movwf	_contador
  8670                           
  8671                           ;USART_Library.c: 64:     }else if (RCREG == '-'){
  8672     1526  2D31               	goto	i1l3272
  8673     1527                     i1l3266:
  8674     1527  302D               	movlw	45
  8675     1528  061A               	xorwf	26,w	;volatile
  8676     1529  1D03               	btfss	3,2
  8677     152A  2D2C               	goto	u427_21
  8678     152B  2D2D               	goto	u427_20
  8679     152C                     u427_21:
  8680     152C  2D31               	goto	i1l3272
  8681     152D                     u427_20:
  8682     152D                     i1l3268:
  8683                           
  8684                           ;USART_Library.c: 65:         PORTAbits.RA6 = 0;
  8685     152D  1305               	bcf	5,6	;volatile
  8686     152E                     i1l3270:
  8687                           
  8688                           ;USART_Library.c: 66:         contador =contador-1;
  8689     152E  085D               	movf	_contador,w
  8690     152F  3EFF               	addlw	255
  8691     1530  00DD               	movwf	_contador
  8692     1531                     i1l3272:
  8693                           
  8694                           ;USART_Library.c: 68:     return contador;
  8695     1531  085D               	movf	_contador,w
  8696     1532                     i1l322:
  8697     1532  0008               	return
  8698     1533                     __end_of_UART_read_char:
  8699     007E                     btemp	set	126	;btemp
  8700     007E                     wtemp0	set	126
  8701                           
  8702                           	psect	idloc
  8703                           
  8704                           ;Config register IDLOC0 @ 0x2000
  8705                           ;	unspecified, using default values
  8706     2000                     	org	8192
  8707     2000  3FFF               	dw	16383
  8708                           
  8709                           ;Config register IDLOC1 @ 0x2001
  8710                           ;	unspecified, using default values
  8711     2001                     	org	8193
  8712     2001  3FFF               	dw	16383
  8713                           
  8714                           ;Config register IDLOC2 @ 0x2002
  8715                           ;	unspecified, using default values
  8716     2002                     	org	8194
  8717     2002  3FFF               	dw	16383
  8718                           
  8719                           ;Config register IDLOC3 @ 0x2003
  8720                           ;	unspecified, using default values
  8721     2003                     	org	8195
  8722     2003  3FFF               	dw	16383
  8723                           
  8724                           	psect	config
  8725                           
  8726                           ;Config register CONFIG1 @ 0x2007
  8727                           ;	Oscillator Selection bits
  8728                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8729                           ;	Watchdog Timer Enable bit
  8730                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8731                           ;	Power-up Timer Enable bit
  8732                           ;	PWRTE = OFF, PWRT disabled
  8733                           ;	RE3/MCLR pin function select bit
  8734                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8735                           ;	Code Protection bit
  8736                           ;	CP = OFF, Program memory code protection is disabled
  8737                           ;	Data Code Protection bit
  8738                           ;	CPD = OFF, Data memory code protection is disabled
  8739                           ;	Brown Out Reset Selection bits
  8740                           ;	BOREN = OFF, BOR disabled
  8741                           ;	Internal External Switchover bit
  8742                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8743                           ;	Fail-Safe Clock Monitor Enabled bit
  8744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8745                           ;	Low Voltage Programming Enable bit
  8746                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8747                           ;	In-Circuit Debugger Mode bit
  8748                           ;	DEBUG = 0x1, unprogramme  8749     2007                     	org	8199
  8750     2007  20D4               	dw	8404
  8751                           
  8752                           ;Config register CONFIG2 @ 0x2008
  8753                           ;	Brown-out Reset Selection bit
  8754                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8755                           ;	Flash Program Memory Self Write Enable bits
  8756                           ;	WRT = OFF, Write protection off
  8757     2008                     	org	8200
  8758     2008  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     45      62
    BANK1            80     80      80
    BANK3            96     24      24
    BANK2            96      0       0

Pointer List with Targets:

    UART_write_string@str	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    LcdALL_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[4]), STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _UART_write_string->_UART_write_char
    _UART_set_value->i1___awdiv
    i1___awdiv->i1___awmod

Critical Paths under _main in BANK0

    _main->___fltol
    _UART_RX_config->___aldiv
    _LcdALLb_set_value->___awdiv
    _LcdALL_set_value->___awdiv
    ___awdiv->___awmod
    _LcdALL_map->___fladd
    ___flsub->___fladd
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___fldiv->___fladd
    _LcdALL_Write_String->_LcdALL_Write_Char
    _LcdALL_Write_Char->_LcdALL_Port
    _LcdALL_Set_Cursor->_LcdALL_Cmd
    _LcdALL_Init->_LcdALL_Cmd
    _LcdALL_Cmd->_LcdALL_Port

Critical Paths under _isr in BANK0

    _isr->_UART_set_value
    _UART_set_value->i1___awdiv

Critical Paths under _main in BANK1

    _main->___fltol
    ___fltol->_LcdALL_map
    _LcdALL_map->___fldiv
    ___flsub->___fladd
    ___flmul->___flsub
    ___fldiv->___flmul

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_LcdALL_map
    ___fltol->_LcdALL_map

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   25672
                                             20 BANK3      4     4      0
                        _LcdALL_Init
                  _LcdALL_Set_Cursor
                _LcdALL_Write_String
                         _LcdALL_map
                   _LcdALL_set_value
                  _LcdALLb_set_value
                     _UART_RX_config
                            ___fltol
                           ___xxtofl
                           _adc_init
                           _adc_read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     2      0       0
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             4     2      2     370
                                             18 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             18 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                             43 BANK0      2     2      0
                                             72 BANK1      8     4      4
                         _LcdALL_map (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_RX_config                                       8     6      2    1074
                                             33 BANK0      8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     908
                                             18 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _LcdALLb_set_value                                    8     6      2    4901
                                             34 BANK0      8     6      2
                  _LcdALL_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _LcdALL_set_value                                     8     6      2    4901
                                             34 BANK0      8     6      2
                  _LcdALL_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    2016
                                             18 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2476
                                             25 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LcdALL_map                                          28     8     20   12389
                                             64 BANK1      8     8      0
                                              0 BANK3     20     0     20
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3907
                                              4 BANK1      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                             27 BANK0     16     8      8
                                              0 BANK1      4     4      0
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3172
                                             12 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                             18 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             38 BANK1     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Write_String                                  3     3      0     354
                                             23 BANK0      3     3      0
                  _LcdALL_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LcdALL_Write_Char                                    2     2      0     198
                                             21 BANK0      2     2      0
                        _LcdALL_Port
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Set_Cursor                                    3     2      1     484
                                             24 BANK0      3     2      1
                         _LcdALL_Cmd
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Init                                          2     2      0     374
                                             24 BANK0      2     2      0
                         _LcdALL_Cmd
                        _LcdALL_Port
 ---------------------------------------------------------------------------------
 (2) _LcdALL_Cmd                                           3     3      0     198
                                             21 BANK0      3     3      0
                        _LcdALL_Port
 ---------------------------------------------------------------------------------
 (3) _LcdALL_Port                                          3     3      0     176
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0    1137
                                             12 BANK0      6     6      0
                     _UART_read_char
                     _UART_set_value
                  _UART_write_string
 ---------------------------------------------------------------------------------
 (5) _UART_write_string                                    2     2      0     100
                                              1 COMMON     2     2      0
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (5) _UART_set_value                                       8     6      2    1037
                                              4 BANK0      8     6      2
                    _UART_write_char
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     400
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     404
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _UART_write_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdALL_Init
     _LcdALL_Cmd
       _LcdALL_Port
     _LcdALL_Port
   _LcdALL_Set_Cursor
     _LcdALL_Cmd
   _LcdALL_Write_String
     _LcdALL_Write_Char
       _LcdALL_Port
   _LcdALL_map
     ___fladd
       __Umul8_16 (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
       ___flsub (ARG)
     ___flmul
     ___flsub
     ___xxtofl (ARG)
   _LcdALL_set_value
     _LcdALL_Write_Char
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _LcdALLb_set_value
     _LcdALL_Write_Char
     ___awdiv
     ___awmod
   _UART_RX_config
     ___aldiv
   ___fltol
     _LcdALL_map (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_init
   _adc_read
   _setup

 _isr (ROOT)
   _UART_read_char
   _UART_set_value
     _UART_write_char
     i1___awdiv
       i1___awmod (ARG)
     i1___awmod
   _UART_write_string
     _UART_write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     18      18       9       25.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B4      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 27 22:35:37 2023

               ___fldiv@aexp 00DF                 ___fldiv@bexp 00DE                            pc 0002  
               ___fldiv@sign 00D7                           l34 0CED                           l38 1500  
               ___awdiv@sign 003F                           fsr 0004          __Umul8_16@word_mpld 0038  
                        l307 173B                          l260 07FC                          l412 156B  
                        l245 0A4B                          l263 1518                          l248 154E  
                        l257 15AC                          l281 08DD                          l284 0E2C  
                        l269 15D5                          l278 09C1                          l651 0870  
                        l563 0AEE                          l812 05E4                          l804 06C2  
                        l573 0B76                          l822 063A                          l816 0611  
                        l664 1796                          l833 06B0                          l825 0684  
                        l906 15EC                          l834 06C2                          l691 0AC2  
                        l931 0B9B                          l908 15FE                          l684 0AD9  
                        l837 1689                          l933 0C30                          l694 0AD9  
                        l871 0FF5                          l863 0F75                          l847 0E83  
                        l791 0440                          l944 0BFA                          l849 0FFF  
                        l945 0C06                          l937 0BDE                          l795 0504  
                        l869 0FE7                          l893 0332                          l797 04D2  
                        l887 03C2                          l899 03B6                          _RD3 0043  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          _isr 15FF                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0038                 ___flmul@aexp 00BA  
               ___flmul@bexp 00BF                 ___flmul@sign 00B9                 ___flmul@temp 00C4  
                 _LcdALL_Cmd 1533                 ___flmul@prod 00C0                   _LcdALL_map 0CEE  
               ___fltol@exp1 004C                         l2400 09DE                         l3200 158E  
                       l4000 0AAC                         l2410 0A39                         l2402 09F0  
                       l3210 15A6                         l3202 1593                         l4010 0ACC  
                       l2404 0A03                         l3220 07DD                         l3212 07B7  
                       l3204 1596                         l3140 0C41                         l4020 06E7  
                       l4012 06C3                         l2406 0A14                         l3214 07BD  
                       l3206 159D                         l3222 15B0                         l3230 094F  
                       l4006 0AB3                         l3150 0C64                         l3142 0C46  
                       l4030 079D                         l4022 06F7                         l4014 06CD  
                       l2408 0A26                         l3216 07C7                         l3208 15A3  
                       l3224 15B3                         l3232 0871                         l3240 16E3  
                       l4008 0AC7                         l3160 0C8A                         l3152 0C6C  
                       l3144 0C4E                         l3136 0C31                         l4032 07A8  
                       l4024 0701                         l4016 06D7                         l3218 07D7  
                       l3226 15C0                         l2610 15E2                         l3250 172F  
                       l3242 1721                         l3170 0CAF                         l3162 0C91  
                       l3154 0C73                         l3146 0C55                         l3138 0C39  
                       l4026 078E                         l4018 06E2                         l2620 1536  
                       l3228 15C8                         l2612 15E6                         l2700 0825  
                       l3252 1732                         l3244 1725                         l3340 0B7F  
                       l3180 0CDD                         l3164 0C99                         l3156 0C7B  
                       l3148 0C5D                         l4028 0797                         l2622 1537  
                       l2630 1504                         l2614 15F5                         l2606 15D9  
                       l2710 083D                         l2702 082B                         l3254 1735  
                       l3246 172B                         l3350 0BAC                         l3342 0B83  
                       l3182 0CDE                         l4054 0CBA                         l3166 0CA0  
                       l3158 0C82                         l3174 0CB3                         l2624 153D  
                       l2632 1505                         l2800 0E66                         l2616 15FA  
                       l2608 15DB                         l2712 084E                         l2704 082E  
                       l2720 0862                         l3256 1738                         l3248 172C  
                       l3360 0BD5                         l3352 0BAF                         l3344 0B93  
                       l3184 0CDF                         l3168 0CA8                         l3176 0CD4  
                       l2394 09C5                         l2626 1540                         l2634 150B  
                       l2802 0E6B                         l2810 0E7B                         l2722 0867  
                       l2714 0854                         l2706 0835                         l2730 173F  
                       l2650 0AF2                         l3370 0C08                         l3362 0BE5  
                       l3354 0BBC                         l3346 0BA3                         l3338 0B7A  
                       l3186 0CE2                         l3178 0CDA                         l3194 14EE  
                       l3290 1564                         l2396 09C8                         l2628 154B  
                       l2636 150E                         l2900 0FDE                         l2812 0E8B  
                       l2820 0EA4                         l2804 0E70                         l3700 0480  
                       l2724 086C                         l2716 0855                         l2708 0839  
                       l2740 1753                         l2732 1743                         l2660 0B14  
                       l2652 0AFD                         l2644 0ADA                         l3372 0C1E  
                       l3364 0BF0                         l3356 0BC3                         l3188 0CE3  
                       l3196 14F4                         l3292 1565                         l2398 09D2  
                       l2638 1515                         l2902 0FE6                         l2830 0ECC  
                       l2822 0EA9                         l2814 0E97                         l2806 0E78  
                       l3710 0497                         l3702 0486                         l3630 03C3  
                       l2718 085C                         l2750 176B                         l2742 1759  
                       l2734 1748                         l2670 0B4E                         l2662 0B21  
                       l2654 0B01                         l2646 0ADD                         l3374 0C23  
                       l3366 0BF4                         l3358 0BC7                         l3198 14F5  
                       l3294 1566                         l3286 154F                         l2904 0FEB  
                       l2840 0EF5                         l2832 0ED4                         l2816 0E9B  
                       l2808 0E79                         l3800 0658                         l3720 04E9  
                       l3712 04B4                         l3704 048A                         l3640 03E2  
                       l3632 03CA                         l2760 178D                         l2752 1775  
                       l2744 175C                         l2736 174A                         l2728 173C  
                       l2680 0B6E                         l2672 0B4F                         l2664 0B25  
                       l2656 0B09                         l2648 0AE1                         l3376 0C27  
                       l3368 0BFE                         l3296 1567                         l3288 1560  
                       l2906 0FEF                         l2850 0F16                         l2842 0EF9  
                       l2834 0EDC                         l2826 0EB2                         l3810 069A  
                       l3802 065C                         l3730 050D                         l3722 04EC  
                       l3714 04D6                         l3706 048E                         l3650 03FF  
                       l3642 03E7                         l3634 03D2                         l2690 0814  
                       l2762 1792                         l2754 177B                         l2746 1763  
                       l2738 174E                         l2674 0B58                         l2666 0B2E  
                       l2658 0B11                         l3378 0C28                         l3298 156A  
                       l2908 0FF1                         l2860 0F38                         l2852 0F24  
                       l2844 0EFA                         l2836 0EDE                         l2828 0EC4  
                       l2780 0E3B                         l2772 0E2D                         l3900 01F1  
                       l3820 06B9                         l3812 06A1                         l3804 067C  
                       l3740 053B                         l3724 04F6                         l3716 04E1  
                       l3708 0494                         l3660 0419                         l3652 0404  
                       l3644 03F1                         l3636 03D8                         l2692 0816  
                       l2684 0808                         l2756 1782                         l2748 1767  
                       l2668 0B40                         l2676 0B5E                         l2862 0F41  
                       l2870 0F55                         l2838 0EE3                         l2846 0F03  
                       l2854 0F28                         l2782 0E40                         l2790 0E50  
                       l2774 0E32                         l3910 02B6                         l3902 020E  
                       l3830 0024                         l3822 06BF                         l3814 06A2  
                       l3806 068B                         l3750 055B                         l3742 0546  
                       l3734 0518                         l3718 04E3                         l3726 04FC  
                       l3670 0434                         l3662 041C                         l3654 040A  
                       l3646 03F3                         l3638 03DB                         l2694 081A  
                       l2686 080B                         l2758 1788                         l2678 0B63  
                       l2872 0F59                         l2864 0F45                         l2856 0F2E  
                       l2848 0F15                         l2792 0E58                         l2784 0E45  
                       l2776 0E36                         l3920 0302                         l3912 02DE  
                       l3904 0243                         l3840 0037                         l3832 0029  
                       l3816 06A6                         l3808 0690                         l3760 05C5  
                       l3744 0548                         l3736 0531                         l3728 0508  
                       l3752 0562                         l3680 0456                         l3664 0423  
                       l3672 0436                         l3656 040B                         l3648 03F5  
                       l3824 163A                         l2696 081F                         l2688 080F  
                       l2890 0FAA                         l2882 0F7A                         l2874 0F5A  
                       l2866 0F46                         l2858 0F36                         l2794 0E5D  
                       l2786 0E4D                         l2778 0E3A                         l3930 0317  
                       l3922 0303                         l3914 02E7                         l3906 025B  
                       l3850 0053                         l3842 003C                         l3834 002D  
                       l3818 06AA                         l3770 05FF                         l3754 057A  
                       l3762 05D6                         l3746 054E                         l3738 0535  
                       l3690 046A                         l3682 0458                         l3674 0448  
                       l3666 0428                         l3658 0413                         l3826 163E  
                       l2698 0823                         l2884 0F7F                         l2892 0FB0  
                       l2876 0F5E                         l2868 0F4F                         l2796 0E61  
                       l2788 0E4E                         l3940 033C                         l3932 031B  
                       l3924 030C                         l3916 02F5                         l3908 0290  
                       l3860 0066                         l3852 0057                         l3844 0044  
                       l3836 0031                         l3780 061C                         l3772 0608  
                       l3764 05ED                         l3756 05B8                         l3748 0551  
                       l3692 046E                         l3684 045A                         l3676 044C  
                       l3668 0432                         l2894 0FBD                         l2886 0F8D  
                       l2878 0F72                         l2798 0E65                         l3950 037A  
                       l3942 034A                         l3934 032F                         l3918 02FE  
                       l3926 0312                         l3870 0082                         l3862 006E  
                       l3854 005B                         l3846 0046                         l3838 0032  
                       l3790 062F                         l3782 0621                         l3774 060E  
                       l3766 05F4                         l3758 05C0                         l3694 0472  
                       l3686 0460                         l3678 0454                         l2896 0FCB  
                       l2888 0F91                         l3960 03AC                         l3952 0385  
                       l3944 034E                         l3928 0316                         l3880 00D5  
                       l3864 0070                         l3856 005C                         l3848 004E  
                       l3792 0635                         l3776 0617                         l3784 0623  
                       l3696 0478                         l3688 0464                         l2898 0FDA  
                       l3962 03B0                         l3954 0394                         l3946 0367  
                       l3938 0337                         l3890 0166                         l3882 00F1  
                       l3874 008B                         l3866 0078                         l3858 0061  
                       l3778 061A                         l3786 0628                         l3698 047C  
                       l3970 0CEE                         l3964 03B1                         l3956 039E  
                       l3948 036D                         l3892 017E                         l3884 0125  
                       l3876 00A3                         l3868 007D                         l3796 0641  
                       l3788 062B                         l3972 0E16                         l3966 03BA  
                       l3958 03A0                         l3894 019B                         l3886 0141  
                       l3878 00B0                         l3798 0648                         l3990 0A8A  
                       l3982 0A64                         l3896 01B3                         l3888 015D  
                       l3992 0A8E                         l3984 0A7B                         l3976 0A4C  
                       _ADIF 0066                         l3898 01D0                         l3986 0A7E  
                       l3978 0A59                         l3988 0A86                         ?_isr 0070  
                       l3998 0A96                         STR_1 1006                         STR_2 101D  
                       STR_3 1029                         u3100 0B11                         u3101 0B10  
                       u3040 15E6                         u3200 082B                         u3120 0B25  
                       u3041 15E5                         u3201 082A                         u3121 0B24  
                       u3115 0B16                         u3060 15FA                         u3220 083D  
                       u3300 1759                         u3140 0B40                         u3061 15F9  
                       u3221 083C                         u3301 1758                         u3141 0B3F  
                       u3055 15ED                         u3215 082F                         u3135 0B27  
                       u3400 0E65                         u5000 04E9                         u3240 084E  
                       u3320 176B                         u3160 0B5E                         u3080 0AE1  
                       u3401 0E64                         u5001 04E8                         u3241 084D  
                       u3321 176A                         u3161 0B5D                         u3145 0B3C  
                       u3081 0AE0                         u3410 0E6B                         u3330 1775  
                       u3170 0B63                         u3090 0AF2                         u3411 0E6A  
                       u3235 083E                         u3331 1774                         u3315 175D  
                       u3171 0B62                         u3155 0B50                         u3091 0AF1  
                       u3500 0F15                         u3420 0E70                         u5100 057A  
                       u5020 0504                         u3260 0862                         u3180 080F  
                       u4220 14F4                         u2525 09E1                         u3501 0F14  
                       u3421 0E6F                         u5101 0579                         u5021 0503  
                       u3261 0861                         u3245 084A                         u3181 080E  
                       u4221 14F3                         u4230 1593                         u3510 0F2E  
                       u3430 0E8B                         u5030 0508                         u3270 0867  
                       u3190 081A                         u3350 1788                         u2535 09F3  
                       u4231 1592                         u3511 0F2D                         u3431 0E8A  
                       u5111 0591                         u5103 0576                         u5031 0507  
                       u5015 04EF                         u3271 0866                         u3255 0856  
                       u3191 0819                         u3351 1787                         u3335 1771  
                       u4240 15A3                         u3600 0F7F                         u3520 0F36  
                       u3440 0EA9                         u5200 0628                         u5120 05A5  
                       u5112 0592                         u5040 050D                         u3360 178D  
                       u3280 1743                         u4400 0B83                         u2545 0A06  
                       u4241 15A2                         u3601 0F7E                         u3521 0F35  
                       u3505 0F11                         u3441 0EA8                         u5201 0627  
                       u5121 05A6                         u5113 0597                         u5041 050C  
                       u3361 178C                         u3345 177C                         u3281 1742  
                       u4401 0B82                         u4250 15D5                         u3610 0F91  
                       u3450 0EE3                         u3370 0E3A                         u5210 062F  
                       u5130 05C5                         u5122 05AB                         u5114 0598  
                       u3290 174E                         u4410 0BA3                         u2555 0A17  
                       u4251 15D4                         u3611 0F90                         u3451 0EE2  
                       u3371 0E39                         u5211 062E                         u5131 05C4  
                       u5123 05AC                         u5115 059D                         u5051 0523  
                       u3291 174D                         u4411 0BA2                         u3620 0FA0  
                       u3540 0F45                         u3380 0E40                         u5300 06A1  
                       u5220 0635                         u5140 05ED                         u5116 059E  
                       u5060 0535                         u5052 052A                         u4500 0C13  
                       u2565 0A29                         u3541 0F44                         u3381 0E3F  
                       u5301 06A0                         u5221 0634                         u5141 05EC  
                       u5061 0534                         u5053 0531                         u3630 0FBD  
                       u3390 0E45                         u5310 06A6                         u5230 0640  
                       u5150 05F4                         u5070 053B                         u4510 0C23  
                       u4430 0BC2                         u2575 0A3C                         u3631 0FBC  
                       u3535 0F3A                         u3391 0E44                         u5311 06A5  
                       u5231 063F                         u5151 05F3                         u5071 053A  
                       u4511 0C22                         u4431 0BC1                         u3640 0FDA  
                       u3560 0F59                         u3480 0EF9                         u5400 0082  
                       u5320 06BF                         u5240 0648                         u5080 054E  
                       u4520 0C27                         u3641 0FD9                         u3625 0F9B  
                       u3561 0F58                         u3481 0EF8                         u3465 0EE5  
                       u5401 0081                         u5321 06BE                         u5241 0647  
                       u5081 054D                         u4521 0C26                         u4505 0C0E  
                       u4425 0BB4                         u3650 0FEF                         u3570 0F5E  
                       u5330 0031                         u5250 065C                         u5170 060E  
                       u4450 0BE4                         u3651 0FEE                         u3635 0FB9  
                       u3571 0F5D                         u3555 0F48                         u3475 0EEE  
                       u5411 00E3                         u5331 0030                         u5251 065B  
                       u5171 060D                         u4451 0BE3                         u3580 0F72  
                       u5412 00EA                         u5340 0037                         u5260 066B  
                       u5180 0617                         u3645 0FD6                         u3581 0F71  
                       u5501 0235                         u5421 00FF                         u5413 00F1  
                       u5341 0036                         u5181 0616                         u5165 0601  
                       u4445 0BD6                         u3590 0F79                         u5502 023C  
                       u5422 0106                         u5350 003C                         u5270 067C  
                       u5190 0621                         u4470 0BF4                         u4390 0B7F  
                       u3591 0F78                         u3495 0EFC                         u5511 026A  
                       u5503 0243                         u5431 0133                         u5423 010D  
                       u5351 003B                         u5271 067B                         u5191 0620  
                       u5095 0554                         u4471 0BF3                         u4391 0B7E  
                       _RBIE 005B                         u5600 0316                         u5520 029C  
                       u5512 0271                         u5432 013A                         u5360 005B  
                       u5280 068B                         u4480 0BFA                         u5601 0315  
                       u5513 0278                         u5441 014F                         u5433 0141  
                       u5361 005A                         u5281 068A                         u5265 0666  
                       u4481 0BF9                         u4465 0BE9                         u5610 031B  
                       u5442 0156                         u5370 0061                         u5290 0690  
                       u4490 0BFE                         u5611 031A                         u5531 02A8  
                       u5443 015D                         u5371 0060                         u5291 068F  
                       u4491 0BFD                         u5620 032F                         u5540 02C4  
                       u5532 02AF                         u5380 0066                         u4900 040A  
                       u5700 0A59                         _RCIF 0065                         u5621 032E  
                       u5533 02B6                         u5525 0297                         u5461 018D  
                       u5381 0065                         u4901 0409                         u5701 0A58  
                       u5630 0336                         u5462 0194                         u5390 007D  
                       u4910 0419                         u5710 0A74                         u5631 0335  
                       u5551 02D0                         u5471 01C2                         u5463 019B  
                       u5455 015F                         u5391 007C                         u4911 0418  
                       u5640 033C                         u5552 02D7                         u5472 01C9  
                       u4920 0423                         u5720 0A8E                         u5641 033B  
                       u5553 02DE                         u5545 02BF                         u5473 01D0  
                       u4921 0422                         u5721 0A8D                         u5650 034E  
                       u4930 0428                         u5730 0A95                         u5651 034D  
                       u5491 0200                         u4931 0427                         u5731 0A94  
                       u5715 0A6F                         u5660 035D                         u5580 0302  
                       u5492 0207                         u4940 0448                         u5581 0301  
                       u5565 02E0                         u5493 020E                         u5485 01D2  
                       u4941 0447                         u5670 037A                         u4950 044C  
                       u4870 03D8                         u5750 0AAB                         u5671 0379  
                       u5575 02F7                         u4951 044B                         u4871 03D7  
                       u5751 0AAA                         u5807 07AE                         u5680 0394  
                       u4960 04B4                         u4880 03E2                         u5760 0AB2  
                       u5681 0393                         u5665 0358                         u4961 04B3  
                       u4881 03E1                         u5761 0AB1                         u5745 0A97  
                       u5817 14FB                         u5690 03B0                         u4970 04BF  
                       u4890 03E7                         u5691 03AF                         u5675 0376  
                       u5595 0305                         u4971 04BD                         u4891 03E6  
                       u5827 0CE9                         u4980 04C0                         u5780 0AC7  
                       u5837 1512                         u5685 0390                         u4965 04B0  
                       u5781 0AC6                         u4990 04D6                         u5790 0ACC  
                       u5847 07C3                         u4991 04D5                         u5791 0ACB  
                       u5775 0AB7                         u5857 07D3                         u5867 07E1  
                       u5877 1546                         _TMR0 0001                         _TXIF 0064  
                       _cont 004D                         _main 06C3                         btemp 007E  
                       start 0012              ___fldiv@new_exp 00D8             UART_write_char@c 0070  
                _LcdALL_Init 07B7                  _LcdALL_Port 09C2                        ??_isr 002C  
              ___fltol@sign1 004B              __end_of___aldiv 0B77              __end_of___fladd 06C3  
                      ?_main 0070               i1___awdiv@sign 0021              __end_of___fldiv 1000  
            __end_of___awdiv 0871              __end_of___awmod 1797              __end_of___flmul 03C3  
            __end_of___flsub 168A              __end_of___fltol 0ADA                        _ANSEL 0188  
            ___awdiv@divisor 0039                        i1l313 14E5                        i1l401 162F  
                      i1l322 1532                        i1l331 094E                        i1l316 14ED  
                      i1l328 158A                        i1l651 17FF                        i1l398 1604  
                      i1l664 16E2              ___awdiv@counter 003E                        _RCREG 001A  
                      _SPBRG 0099                        _PORTA 0005                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009                        _TRISA 0085  
                      _TRISB 0086                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019               i1___awmod@sign 0076                        _miles 0053  
                      _tempo 004F                        _setup 154F                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 0015  
               __end_of_main 07B7  __end_of_LcdALL_Write_String 15D6                       ??_main 01A4  
   UART_RX_config@baud_value 0047                  ?_LcdALL_Cmd 0070              _LcdALL_map$1554 00E4  
                ?_LcdALL_map 0190                       _ADRESH 001E             ___awdiv@dividend 003B  
                     ?_setup 0070                       _ANSELH 0189             __end_of_adc_init 0CEE  
           __end_of_adc_read 1501                       i1l3100 168B                       i1l3110 169F  
                     i1l3102 168F                       i1l3120 16B7                       i1l3112 16A5  
                     i1l3104 1694                       i1l3130 16D9                       i1l3122 16C1  
                     i1l3114 16A8                       i1l3106 1696                       i1l3060 17A3  
                     i1l3132 16DE                       i1l3124 16C7                       i1l3116 16AF  
                     i1l3108 169A                       i1l3070 17B4                       i1l3062 17A5  
                     i1l3054 1797                       i1l3126 16CE                       i1l3118 16B3  
                     i1l3080 17CC                       i1l3072 17BA                       i1l3064 17A9  
                     i1l3056 179A                       i1l3128 16D4                       i1l3082 17DD  
                     i1l3074 17BD                       i1l3090 17F1                       i1l3066 17AE  
                     i1l3058 179E                       i1l3260 151C                       i1l3092 17F6  
                     i1l3084 17E3                       i1l3076 17C4                       i1l3068 17B2  
                     i1l3270 152E                       i1l3262 1522                       i1l3094 17FB  
                     i1l3086 17E4                       i1l3078 17C8                       i1l3272 1531  
                     i1l3264 1523                       i1l2640 14E5                       i1l3088 17EB  
                     i1l3280 157A                       i1l3266 1527                       i1l3258 1519  
                     i1l2642 14EB                       i1l3098 168A                       i1l3282 157E  
                     i1l3268 152D                       i1l3284 08DE                       i1l3276 156D  
                     i1l3278 156E                       i1l3560 1608                       i1l3570 162E  
                     i1l3562 160A                       i1l3564 1610                       i1l3556 15FF  
                     i1l3566 1616                       i1l3558 1603                       i1l3568 1621  
                     u410_25 17E5                       u307_20 14EB                       u411_20 17F1  
                     u403_20 179E                       u307_21 14EA                       u411_21 17F0  
                     u403_21 179D                       u412_20 17F6                       u404_20 17A9  
                     u420_20 16D4                       u412_21 17F5                       u404_21 17A8  
                     u420_21 16D3                       u405_20 17BA                       u421_20 16D9  
                     u413_20 168F                       u405_21 17B9                       u421_21 16D8  
                     u413_21 168E                       u414_20 169A                       u414_21 1699  
                     u406_25 17BE                       u407_20 17CC                       u415_20 16A5  
                     u407_21 17CB                       u415_21 16A4                       u408_25 17CD  
                     u416_25 16A9                       u409_20 17DD                       u417_20 16B7  
                     u409_21 17DC                       u417_21 16B6                       u409_25 17D9  
                     u426_20 1522                       u418_20 16C1                       u426_21 1521  
                     u418_21 16C0                       u418_25 16BD                       u427_20 152D  
                     u427_21 152C                       u419_25 16C8                       u428_20 158A  
                     u428_21 1589                       u480_20 1603                       u480_21 1602  
                     u481_20 1608                       u481_21 1607                       u482_20 1610  
                     u482_21 160F                       _SPBRGH 009A             __end_of___xxtofl 0C31  
                  ??___aldiv 003A                    ??___fladd 0043                    ??___fldiv 00CE  
                  ??___awdiv 003D                    ??___awmod 0036                    ??___flmul 00B4  
                  ??___flsub 004B                    ??___fltol 00EC             ___awdiv@quotient 0040  
            ___awmod@divisor 0032    LcdALLb_set_value@centenas 0044              ___awmod@counter 0037  
          __end_ofi1___awdiv 1800            __end_ofi1___awmod 16E3              _UART_write_char 14E4  
                     saved_w 007E                 ___xxtofl@arg 003C                 ___xxtofl@exp 003B  
               ___xxtofl@val 0032      __end_of__initialization 0020    LcdALLb_set_value@unidades 0048  
                 ___fltol@f1 00E8               __pcstackCOMMON 0070                __end_of_setup 156C  
             _OPTION_REGbits 0081                      ??_setup 0032     LcdALLb_set_value@decenas 0046  
                 __pbssBANK0 004D            __end_of__Umul8_16 15FF                   __pmaintext 06C3  
               ?_LcdALL_Init 0070                 ?_LcdALL_Port 0070                   __pintentry 0004  
    __end_of_UART_write_char 14EE                    ?_adc_init 0032                    ?_adc_read 0070  
       UART_write_string@str 0072           i1___awdiv@dividend 0079           LcdALL_Write_Char@a 0036  
                  ?___xxtofl 0032          _UART_RX_config$1555 0043                   __stringtab 1000  
             _UART_RX_config 16E3           i1___awdiv@quotient 0022                      ___aldiv 0ADA  
                    ___fladd 03C3                      ___fldiv 0E2D                      ___awdiv 0808  
                    ___awmod 173C                      ___flmul 0024                      ___flsub 163A  
                    ___fltol 0A4C                      _decenas 0057                   ??_adc_init 0034  
                 ??_adc_read 0032                      __ptext1 154F                      __ptext2 14EE  
                    __ptext3 0C31                      __ptext4 0B77                      __ptext5 0A4C  
                    __ptext6 16E3                      __ptext7 0ADA                      __ptext8 0871  
                    __ptext9 094F                 LcdALL_Port@a 0034          LcdALL_map@rango_max 0198  
        LcdALL_map@rango_min 0194                      _mapeado 0051                   ??___xxtofl 0036  
           ___awmod@dividend 0034             ___aldiv@dividend 0036                 ??_LcdALL_Cmd 0035  
               ??_LcdALL_map 004B        UART_set_value@decenas 0028             _LcdALL_set_value 094F  
                    clrloop0 0801         end_of_initialization 0020       __end_of_UART_RX_config 173C  
        LcdALL_map@nuevo_max 01A0          LcdALL_map@nuevo_min 019C              LcdALL_map@valor 0190  
                  _RCSTAbits 0018             ___aldiv@quotient 003D                   _value_disp 007C  
         __end_of_LcdALL_Cmd 154F           __end_of_LcdALL_map 0E2D             ?_UART_write_char 0070  
                  _PORTAbits 0005                    _PORTBbits 0006                    _PORTDbits 0008  
                  _PORTEbits 0009                  ___fladd@grs 00A3                ___xxtofl@sign 003A  
                  _TRISBbits 0086                    i1___awdiv 1797         LcdALL_Write_String@a 0039  
       LcdALL_Write_String@i 0037                    i1___awmod 168A                  ___fldiv@grs 00DA  
                ___fldiv@rem 00D3              ?_UART_RX_config 0041                  ___flmul@grs 00BB  
                  _TXSTAbits 0098  LcdALLb_set_value@byte_value 0042       UART_RX_config@baudrate 0041  
             _UART_read_char 1519                  _BAUDCTLbits 0187          start_initialization 0015  
                __end_of_isr 163A                   ?i1___awdiv 0077                   ?i1___awmod 0070  
             _UART_set_value 08DE            _LcdALL_Set_Cursor 158B           ?_LcdALL_Set_Cursor 0038  
   UART_set_value@byte_value 0024       __end_of_UART_read_char 1533                    __Umul8_16 15D6  
        ??_LcdALL_Set_Cursor 0039           i1___awmod@dividend 0072              adc_init@channel 0032  
                  ___fladd@a 003F                    ___fladd@b 003B                    ___fldiv@a 00C6  
                  ___fldiv@b 00CA                    ___flmul@a 00B0                    ___flmul@b 00AC  
                __pbssCOMMON 007C                    ___flsub@a 00A4                    ___flsub@b 00A8  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
              __pcstackBANK3 0190       __end_of_UART_set_value 094F    __end_of_LcdALL_Set_Cursor 15AD  
                   ?___aldiv 0032                     ?___fladd 003B                     ?___fldiv 00C6  
            ?_UART_read_char 0070                     ?___awdiv 0039     __end_of_LcdALL_set_value 09C2  
                   ?___awmod 0032                     ?___flmul 00AC                     ?___flsub 00A4  
                   ?___fltol 00E8                   ?__Umul8_16 0032            _LcdALL_Write_Char 1501  
          i1___awdiv@divisor 0077            i1___awdiv@counter 0020                    __pstrings 1000  
         ?_LcdALL_Write_Char 0070              ?_UART_set_value 0024                  ??i1___awdiv 007B  
                ??i1___awmod 0074          ??_LcdALL_Write_Char 0035                  LcdALL_Cmd@a 0037  
            ___aldiv@divisor 0032            interrupt_function 0004              ___aldiv@counter 003B  
                   _IOCBbits 0096                    clear_ram0 0800                     _PIE1bits 008C  
                   _PIR1bits 000C          _LcdALL_Write_String 15AD    __end_of_LcdALL_Write_Char 1519  
                 _ADCON0bits 001F                  __stringbase 1005                   _ADCON1bits 009F  
                   _WPUBbits 0095         ?_LcdALL_Write_String 0070             ??_UART_RX_config 0043  
      LcdALL_map@nuevo_valor 00E0            _LcdALLb_set_value 0871            i1___awmod@divisor 0070  
                ??__Umul8_16 0034            i1___awmod@counter 0075           ?_LcdALLb_set_value 0042  
         __end_of__stringtab 1006                     _adc_init 0C31                     _adc_read 14EE  
        ??_LcdALLb_set_value 0044                     ___xxtofl 0B77        ??_LcdALL_Write_String 0037  
                   _centenas 0055                     __ptext10 173C                     __ptext11 0808  
                   __ptext20 158B                     __ptext12 0CEE                     __ptext21 07B7  
                   __ptext13 163A                     __ptext30 1519                     __ptext22 1533  
                   __ptext14 03C3                     __ptext23 09C2                     __ptext15 0024  
                   __ptext24 15FF                     __ptext16 15D6                     __ptext25 156C  
                   __ptext17 0E2D                     __ptext26 08DE                     __ptext18 15AD  
                   __ptext27 168A                     __ptext19 1501                     __ptext28 1797  
                   __ptext29 14E4                     _contador 005D    __end_of_LcdALLb_set_value 08DE  
              ??_LcdALL_Init 0038                ??_LcdALL_Port 0032                     _unidades 0059  
     UART_set_value@centenas 0026                   _INTCONbits 000B                     intlevel1 0000  
     UART_set_value@unidades 002A            _UART_write_string 156C     LcdALL_set_value@centenas 0044  
           ??_UART_read_char 0070                    stringcode 1000        LcdALL_Set_Cursor@temp 003A  
                 _OSCCONbits 008F           ?_UART_write_string 0070            ?_LcdALL_set_value 0042  
        ??_UART_write_string 0071           ??_LcdALL_set_value 0044   LcdALL_set_value@byte_value 0042  
        __end_of_LcdALL_Init 07FD             ??_UART_set_value 007C          __end_of_LcdALL_Port 0A4C  
     __Umul8_16@multiplicand 0032      LcdALL_set_value@decenas 0046     LcdALL_set_value@unidades 0048  
                   stringdir 1000                     stringtab 1000                 ___aldiv@sign 003C  
                 _TMR0_Value 005B                ___fladd@signs 00A0    __end_of_UART_write_string 158B  
          ??_UART_write_char 0070                 ___fladd@aexp 00A1                 ___fladd@bexp 00A2  
       __Umul8_16@multiplier 003A           LcdALL_Set_Cursor@a 0039           LcdALL_Set_Cursor@b 0038  
          __Umul8_16@product 0036  
